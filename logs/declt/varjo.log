Unhandled PRINT-NOT-READABLE in thread #<error printing a SB-THREAD:THREAD: #<PRINT-NOT-READABLE {100AF5C243}>>: #<VARI.TYPES:V-VEC2 {10023E8313}> cannot be printed readably.

Backtrace for: #<SB-THREAD:THREAD "main thread" RUNNING {1001B76E63}>
0: (SB-DEBUG::DEBUGGER-DISABLED-HOOK #<PRINT-NOT-READABLE {100AF5A613}> #<unused argument>)
1: (SB-DEBUG::RUN-HOOK *INVOKE-DEBUGGER-HOOK* #<PRINT-NOT-READABLE {100AF5A613}>)
2: (INVOKE-DEBUGGER #<PRINT-NOT-READABLE {100AF5A613}>)
3: (ERROR #<PRINT-NOT-READABLE {100AF5A613}>)
4: (SB-KERNEL:WITH-SIMPLE-CONDITION-RESTARTS ERROR NIL PRINT-NOT-READABLE :OBJECT #<VARI.TYPES:V-VEC2 {10023E8313}>)
5: (SB-INT:PRINT-NOT-READABLE-ERROR #<VARI.TYPES:V-VEC2 {10023E8313}> #<SB-IMPL::CASE-FROB-STREAM {100AF5A1F3}>)
6: (SB-IMPL::%PRINT-UNREADABLE-OBJECT #<VARI.TYPES:V-VEC2 {10023E8313}> #<SB-IMPL::CASE-FROB-STREAM {100AF5A1F3}> T T NIL)
7: ((LABELS SB-IMPL::HANDLE-IT :IN SB-KERNEL:OUTPUT-OBJECT) #<SB-IMPL::CASE-FROB-STREAM {100AF5A1F3}>)
8: (PRIN1 #<VARI.TYPES:V-VEC2 {10023E8313}> #<SB-IMPL::CASE-FROB-STREAM {100AF5A1F3}>)
9: ((LAMBDA (NET.DIDIERVERNA.DECLT::VALUE) :IN "/home/didier/share/common-lisp/source/declt/core/src/doc/symbol.lisp") #<VARI.TYPES:V-VEC2 {10023E8313}>)
10: (NET.DIDIERVERNA.DECLT::RENDER-SLOT #S(NET.DIDIERVERNA.DECLT::SLOT-DEFINITION :SYMBOL VARJO.INTERNALS::SHADOWED-TYPE :FOREIGNP NIL :SLOT #<SB-MOP:STANDARD-DIRECT-SLOT-DEFINITION VARJO.INTERNALS::SHADOWED-TYPE> :READERS NIL :WRITERS NIL))
11: (NET.DIDIERVERNA.DECLT::RENDER-SLOTS #1=#S(NET.DIDIERVERNA.DECLT::CLASS-DEFINITION :SYMBOL VARI.TYPES:V-COMPLEX :FOREIGNP NIL :PARENTS (#S(NET.DIDIERVERNA.DECLT::CLASS-DEFINITION :SYMBOL VARI.TYPES:V-SHADOW-TYPE :FOREIGNP NIL :PARENTS (#S(NET.DIDIERVERNA.DECLT::CLASS-DEFINITION :SYMBOL VARI.TYPES:V-TYPE :FOREIGNP NIL :PARENTS # :CHILDREN # :METHODS # :SLOTS #)) :CHILDREN (#1# #S(NET.DIDIERVERNA.DECLT::CLASS-DEFINITION :SYMBOL VARI.TYPES:V-RATIO :FOREIGNP NIL :PARENTS # :CHILDREN NIL :METHODS # :SLOTS #)) :METHODS (#S(NET.DIDIERVERNA.DECLT::METHOD-DEFINITION :SYMBOL VARJO.INTERNALS::SHADOWED-TYPE :FOREIGNP NIL :METHOD #<SB-MOP:STANDARD-READER-METHOD VARJO.INTERNALS::SHADOWED-TYPE, slot:VARJO.INTERNALS::SHADOWED-TYPE, # {100241C273}>)) :SLOTS (#S(NET.DIDIERVERNA.DECLT::SLOT-DEFINITION :SYMBOL VARJO.INTERNALS::TYPE-NAME :FOREIGNP NIL :SLOT #<SB-MOP:STANDARD-DIRECT-SLOT-DEFINITION VARJO.INTERNALS::TYPE-NAME> :READERS NIL :WRITERS NIL) #S(NET.DIDIERVERNA.DECLT::SLOT-DEFINITION :SYMBOL VARJO.INTERNALS::SUPERCLASS :FOREIGNP NIL :SLOT #<SB-MOP:STANDARD-DIRECT-SLOT-DEFINITION VARJO.INTERNALS::SUPERCLASS> :READERS NIL :WRITERS NIL) #S(NET.DIDIERVERNA.DECLT::SLOT-DEFINITION :SYMBOL VARJO.INTERNALS::SHADOWED-TYPE :FOREIGNP NIL :SLOT #<SB-MOP:STANDARD-DIRECT-SLOT-DEFINITION VARJO.INTERNALS::SHADOWED-TYPE> :READERS # :WRITERS NIL)))) :CHILDREN NIL :METHODS (#S(NET.DIDIERVERNA.DECLT::METHOD-DEFINITION :SYMBOL VARJO.INTERNALS::META-KINDS-TO-INFER :FOREIGNP NIL :METHOD #<STANDARD-METHOD VARJO.INTERNALS::META-KINDS-TO-INFER (VARI.TYPES:V-COMPLEX) {100233DFC3}>)) :SLOTS (#S(NET.DIDIERVERNA.DECLT::SLOT-DEFINITION :SYMBOL VARJO.INTERNALS::TYPE-NAME :FOREIGNP NIL :SLOT #<SB-MOP:STANDARD-DIRECT-SLOT-DEFINITION VARJO.INTERNALS::TYPE-NAME> :READERS NIL :WRITERS NIL) #S(NET.DIDIERVERNA.DECLT::SLOT-DEFINITION :SYMBOL VARJO.INTERNALS::SUPERCLASS :FOREIGNP NIL :SLOT #<SB-MOP:STANDARD-DIRECT-SLOT-DEFINITION VARJO.INTERNALS::SUPERCLASS> :READERS NIL :WRITERS NIL) #S(NET.DIDIERVERNA.DECLT::SLOT-DEFINITION :SYMBOL VARJO.INTERNALS::SHADOWED-TYPE :FOREIGNP NIL :SLOT #<SB-MOP:STANDARD-DIRECT-SLOT-DEFINITION VARJO.INTERNALS::SHADOWED-TYPE> :READERS NIL :WRITERS NIL) #S(NET.DIDIERVERNA.DECLT::SLOT-DEFINITION :SYMBOL VARJO.INTERNALS:GLSL-STRING :FOREIGNP NIL :SLOT #<SB-MOP:STANDARD-DIRECT-SLOT-DEFINITION VARJO.INTERNALS:GLSL-STRING> :READERS NIL :WRITERS NIL))))
12: ((:METHOD NET.DIDIERVERNA.DECLT::DOCUMENT (NET.DIDIERVERNA.DECLT::CLASS-DEFINITION T)) #1=#S(NET.DIDIERVERNA.DECLT::CLASS-DEFINITION :SYMBOL VARI.TYPES:V-COMPLEX :FOREIGNP NIL :PARENTS (#S(NET.DIDIERVERNA.DECLT::CLASS-DEFINITION :SYMBOL VARI.TYPES:V-SHADOW-TYPE :FOREIGNP NIL :PARENTS (#S(NET.DIDIERVERNA.DECLT::CLASS-DEFINITION :SYMBOL VARI.TYPES:V-TYPE :FOREIGNP NIL :PARENTS # :CHILDREN # :METHODS # :SLOTS #)) :CHILDREN (#1# #S(NET.DIDIERVERNA.DECLT::CLASS-DEFINITION :SYMBOL VARI.TYPES:V-RATIO :FOREIGNP NIL :PARENTS # :CHILDREN NIL :METHODS # :SLOTS #)) :METHODS (#S(NET.DIDIERVERNA.DECLT::METHOD-DEFINITION :SYMBOL VARJO.INTERNALS::SHADOWED-TYPE :FOREIGNP NIL :METHOD #<SB-MOP:STANDARD-READER-METHOD VARJO.INTERNALS::SHADOWED-TYPE, slot:VARJO.INTERNALS::SHADOWED-TYPE, # {100241C273}>)) :SLOTS (#S(NET.DIDIERVERNA.DECLT::SLOT-DEFINITION :SYMBOL VARJO.INTERNALS::TYPE-NAME :FOREIGNP NIL :SLOT #<SB-MOP:STANDARD-DIRECT-SLOT-DEFINITION VARJO.INTERNALS::TYPE-NAME> :READERS NIL :WRITERS NIL) #S(NET.DIDIERVERNA.DECLT::SLOT-DEFINITION :SYMBOL VARJO.INTERNALS::SUPERCLASS :FOREIGNP NIL :SLOT #<SB-MOP:STANDARD-DIRECT-SLOT-DEFINITION VARJO.INTERNALS::SUPERCLASS> :READERS NIL :WRITERS NIL) #S(NET.DIDIERVERNA.DECLT::SLOT-DEFINITION :SYMBOL VARJO.INTERNALS::SHADOWED-TYPE :FOREIGNP NIL :SLOT #<SB-MOP:STANDARD-DIRECT-SLOT-DEFINITION VARJO.INTERNALS::SHADOWED-TYPE> :READERS # :WRITERS NIL)))) :CHILDREN NIL :METHODS (#S(NET.DIDIERVERNA.DECLT::METHOD-DEFINITION :SYMBOL VARJO.INTERNALS::META-KINDS-TO-INFER :FOREIGNP NIL :METHOD #<STANDARD-METHOD VARJO.INTERNALS::META-KINDS-TO-INFER (VARI.TYPES:V-COMPLEX) {100233DFC3}>)) :SLOTS (#S(NET.DIDIERVERNA.DECLT::SLOT-DEFINITION :SYMBOL VARJO.INTERNALS::TYPE-NAME :FOREIGNP NIL :SLOT #<SB-MOP:STANDARD-DIRECT-SLOT-DEFINITION VARJO.INTERNALS::TYPE-NAME> :READERS NIL :WRITERS NIL) #S(NET.DIDIERVERNA.DECLT::SLOT-DEFINITION :SYMBOL VARJO.INTERNALS::SUPERCLASS :FOREIGNP NIL :SLOT #<SB-MOP:STANDARD-DIRECT-SLOT-DEFINITION VARJO.INTERNALS::SUPERCLASS> :READERS NIL :WRITERS NIL) #S(NET.DIDIERVERNA.DECLT::SLOT-DEFINITION :SYMBOL VARJO.INTERNALS::SHADOWED-TYPE :FOREIGNP NIL :SLOT #<SB-MOP:STANDARD-DIRECT-SLOT-DEFINITION VARJO.INTERNALS::SHADOWED-TYPE> :READERS NIL :WRITERS NIL) #S(NET.DIDIERVERNA.DECLT::SLOT-DEFINITION :SYMBOL VARJO.INTERNALS:GLSL-STRING :FOREIGNP NIL :SLOT #<SB-MOP:STANDARD-DIRECT-SLOT-DEFINITION VARJO.INTERNALS:GLSL-STRING> :READERS NIL :WRITERS NIL))) #S(NET.DIDIERVERNA.DECLT::CONTEXT :SYSTEMS (#<ASDF/SYSTEM:SYSTEM "varjo">) :PACKAGES (#<PACKAGE "VARJO"> #<PACKAGE "VARI"> #<PACKAGE "VARI.CL"> #<PACKAGE "VARI.GLSL"> #<PACKAGE "VARJO.API"> #<PACKAGE "VARJO.INTERNALS"> #<PACKAGE "VARJO-CONDITIONS"> #<PACKAGE "VARI.TYPES"> #<PACKAGE "VARJO.UTILS">) :EXTERNAL-DEFINITIONS #<HASH-TABLE :TEST EQUAL :COUNT 694 {100B68C0C3}> :INTERNAL-DEFINITIONS #<HASH-TABLE :TEST EQUAL :COUNT 603 {1001BD5D23}> :HYPERLINKSP NIL)) [fast-method]
13: (NET.DIDIERVERNA.DECLT::ADD-CATEGORY-NODE #1=#S(NET.DIDIERVERNA.DECLT::NODE :NAME "Exported definitions" :SYNOPSIS NIL :SECTION-TYPE :NUMBERED :SECTION-NAME NIL :NEXT NIL :PREVIOUS NIL :UP #2=#S(NET.DIDIERVERNA.DECLT::NODE :NAME "Definitions" :SYNOPSIS "The symbols documentation" :SECTION-TYPE :NUMBERED :SECTION-NAME NIL :NEXT NIL :PREVIOUS #3=#S(NET.DIDIERVERNA.DECLT::NODE :NAME "Packages" :SYNOPSIS "The packages documentation" :SECTION-TYPE :NUMBERED :SECTION-NAME NIL :NEXT #2# :PREVIOUS #4=#S(NET.DIDIERVERNA.DECLT::NODE :NAME "Files" :SYNOPSIS "The files documentation" :SECTION-TYPE :NUMBERED :SECTION-NAME NIL :NEXT #3# :PREVIOUS #S(NET.DIDIERVERNA.DECLT::NODE :NAME "Systems" :SYNOPSIS "The systems documentation" :SECTION-TYPE :NUMBERED :SECTION-NAME NIL :NEXT #4# :PREVIOUS # :UP #5=# :CHILDREN # :BEFORE-MENU-CONTENTS "The main system appears first, followed by any subsystem dependency." :AFTER-MENU-CONTENTS NIL) :UP #5# :CHILDREN (#) :BEFORE-MENU-CONTENTS "Files are sorted by type and then listed depth-first from the systems
components trees." :AFTER-MENU-CONTENTS NIL) :UP #5# :CHILDREN (#S(NET.DIDIERVERNA.DECLT::NODE :NAME "The varjo package" :SYNOPSIS NIL :SECTION-TYPE :NUMBERED :SECTION-NAME "@t{varjo}" :NEXT #6=# :PREVIOUS NIL :UP #3# :CHILDREN NIL :BEFORE-MENU-CONTENTS "@anchor{go to the VARJO package}@c
@packageindex{varjo}@c
@table @strong
@item Source
@ref{go to the varjo/package<dot>lisp file, , @t{package.lisp}} (file)
@item Use List
@itemize @bullet
@item
@t{editor-hints.named-readtables}
@item
@t{alexandria.0.dev}
@item
@ref{go to the VARJO<dot>API package, , @t{varjo.api}}
@item
@ref{go to the VARI<dot>TYPES package, , @t{vari.types}}
@item
@ref{go to the VARJO<dot>UTILS package, , @t{varjo.utils}}
@item
@t{common-lisp}
@end itemize
@end table
" :AFTER-MENU-CONTENTS NIL) #6# #S(NET.DIDIERVERNA.DECLT::NODE :NAME "The vari.cl package" :SYNOPSIS NIL :SECTION-TYPE :NUMBERED :SECTION-NAME "@t{vari.cl}" :NEXT #7=# :PREVIOUS #6# :UP #3# :CHILDREN NIL :BEFORE-MENU-CONTENTS "@anchor{go to the VARI<dot>CL package}@c
@packageindex{vari.cl}@c
@table @strong
@item Source
@ref{go to the varjo/package<dot>lisp file, , @t{package.lisp}} (file)
@item Use List
@itemize @bullet
@item
@ref{go to the VARI<dot>TYPES package, , @t{vari.types}}
@item
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item
@t{editor-hints.named-readtables}
@item
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item
@ref{go to the VARI<dot>GLSL package, , @t{vari.glsl}}
@item
@ref{go to the VARJO<dot>UTILS package, , @t{varjo.utils}}
@item
@t{common-lisp}
@end itemize
@item Used By List
@ref{go to the VARI package, , @t{vari}}
@item Exported Definitions
@itemize @bullet
@item
@ref{go to the VARI<dot>CL<colon><colon>KIND generic function, , @t{kind}} (generic function)
@item
@ref{go to the VARI<dot>CL<colon><colon>KIND VARI<dot>CL<colon><colon>OUTPUT-PRIMITIVE method, , @t{kind}} (method)
@item
@ref{go to the VARI<dot>CL<colon><colon>KIND COMMON-LISP<colon><colon>LIST method, , @t{kind}} (method)
@item
@ref{go to the VARI<dot>CL<colon><colon>LOCAL-SIZE class, , @t{local-size}} (class)
@item
@ref{go to the VARI<dot>CL<colon><colon>MAX-VERTICES generic function, , @t{max-vertices}} (generic function)
@item
@ref{go to the VARI<dot>CL<colon><colon>MAX-VERTICES VARI<dot>CL<colon><colon>OUTPUT-PRIMITIVE method, , @t{max-vertices}} (method)
@item
@ref{go to the VARI<dot>CL<colon><colon>MAX-VERTICES COMMON-LISP<colon><colon>LIST method, , @t{max-vertices}} (method)
@item
@ref{go to the VARI<dot>CL<colon><colon>ORDER generic function, , @t{order}} (generic function)
@item
@ref{go to the VARI<dot>CL<colon><colon>ORDER VARI<dot>CL<colon><colon>TESSELLATE-TO method, , @t{order}} (method)
@item
@ref{go to the VARI<dot>CL<colon><colon>ORDER COMMON-LISP<colon><colon>LIST method, , @t{order}} (method)
@item
@ref{go to the VARI<dot>CL<colon><colon>OUTPUT-PATCH class, , @t{output-patch}} (class)
@item
@ref{go to the VARI<dot>CL<colon><colon>OUTPUT-PRIMITIVE class, , @t{output-primitive}} (class)
@item
@ref{go to the VARI<dot>CL<colon><colon>SPACING generic function, , @t{spacing}} (generic function)
@item
@ref{go to the VARI<dot>CL<colon><colon>SPACING VARI<dot>CL<colon><colon>TESSELLATE-TO method, , @t{spacing}} (method)
@item
@ref{go to the VARI<dot>CL<colon><colon>SPACING COMMON-LISP<colon><colon>LIST method, , @t{spacing}} (method)
@item
@ref{go to the VARI<dot>CL<colon><colon>TESSELLATE-TO class, , @t{tessellate-to}} (class)
@item
@ref{go to the VARI<dot>CL<colon><colon>VARI-DESCRIBE function, , @t{vari-describe}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VERTICES generic function, , @t{vertices}} (generic function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VERTICES VARI<dot>CL<colon><colon>OUTPUT-PATCH method, , @t{vertices}} (method)
@item
@ref{go to the VARI<dot>CL<colon><colon>VERTICES COMMON-LISP<colon><colon>LIST method, , @t{vertices}} (method)
@end itemize
@item Internal Definitions
@itemize @bullet
@item
@ref{go to the VARI<dot>CL<colon><colon>%FUNCTION-FOR-EXTERNAL-FUNCS function, , @t{%function-for-external-funcs}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>%FUNCTION-FOR-FUNC-SETS function, , @t{%function-for-func-sets}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>%FUNCTION-FOR-REGULAR-FUNCS function, , @t{%function-for-regular-funcs}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>%VALUES-FOR-EMIT function, , @t{%values-for-emit}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>%VALUES-FOR-MULTI-VALUE-BIND function, , @t{%values-for-multi-value-bind}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>%VALUES-VOID function, , @t{%values-void}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>*VARI-ADDITIONAL-FORM-DOCS* special variable, , @t{*vari-additional-form-docs*}} (special variable)
@item
@ref{go to the VARI<dot>CL<colon><colon>CALC-SETQ-TYPE function, , @t{calc-setq-type}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>COMPILE-GLSL-EXPRESSION-STRING function, , @t{compile-glsl-expression-string}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>COMPILE-LOCALLY function, , @t{compile-locally}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>COMPILE-REGULAR-SETQ-FORM function, , @t{compile-regular-setq-form}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>COMPILE-THE-REGULAR-FORM-OF-IF function, , @t{compile-the-regular-form-of-if}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>COMPLEMENT-SINGLE-FUNC function, , @t{complement-single-func}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>COMPLEMENT-V-ANY-ONE-OF function, , @t{complement-v-any-one-of}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>COMPUTE-CONDITIONAL-TYPE-SET function, , @t{compute-conditional-type-set}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>COMPUTE-IF-TYPE-SET function, , @t{compute-if-type-set}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>DEFINE-TYPE-PRED macro, , @t{define-type-pred}} (macro)
@item
@ref{go to the VARI<dot>CL<colon><colon>EXTRACT-SWIZZLE-STRING function, , @t{extract-swizzle-string}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>EXTRACT-VALUE-FORM function, , @t{extract-value-form}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>FORM-BINDING-SIGNATURE function, , @t{form-binding-signature}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>GEN-ASSIGNEMENT-FORM-FOR-EMIT function, , @t{gen-assignement-form-for-emit}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>GEN-ASSIGNEMENT-FORM-FOR-RETURN function, , @t{gen-assignement-form-for-return}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>GEN-CASE-USING-COND function, , @t{gen-case-using-cond}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>GEN-CASE-USING-SWITCH function, , @t{gen-case-using-switch}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>GEN-CHUNK-FOR-CONDITIONAL-ARM function, , @t{gen-chunk-for-conditional-arm}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>GEN-CHUNK-FOR-DEFAULT-ARM function, , @t{gen-chunk-for-default-arm}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>GEN-CHUNK-FOR-IF-BLOCK function, , @t{gen-chunk-for-if-block}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>GEN-STRING-FOR-IF-FORM function, , @t{gen-string-for-if-form}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>GEN-STRING-FOR-SWITCH-FORM function, , @t{gen-string-for-switch-form}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>GEN-STRING-FOR-TERNARY-FORM function, , @t{gen-string-for-ternary-form}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>GLSL-LET function, , @t{glsl-let}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>JANKY-PARSE-NAME function, , @t{janky-parse-name}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>JANKY-PARSE-PACKAGE function, , @t{janky-parse-package}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>QUALIFIER-FORM-P function, , @t{qualifier-form-p}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>SATIFIES-TERNARY-STYLE-RESTRICTIONS-P function, , @t{satifies-ternary-style-restrictions-p}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>STRUCT-SLOT-ACCESSOR function, , @t{struct-slot-accessor}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VALID-FOR-SWITCH-STATEMENTP function, , @t{valid-for-switch-statementp}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-%BREAK function, , @t{vs-%break}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-%GLSL-EXPR function, , @t{vs-%glsl-expr}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-%MODIFY-PLACE function, , @t{vs-%modify-place}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-%PEEK function, , @t{vs-%peek}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-%SYNTHESIZE function, , @t{vs-%synthesize}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-AND function, , @t{vs-and}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-AREF function, , @t{vs-aref}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-CASE function, , @t{vs-case}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-EMIT-DATA function, , @t{vs-emit-data}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-FLET function, , @t{vs-flet}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-FUNCTION function, , @t{vs-function}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-IF function, , @t{vs-if}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-LABELS function, , @t{vs-labels}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-LABELS-NO-IMPLICIT function, , @t{vs-labels-no-implicit}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-LET function, , @t{vs-let}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-LISP-CODE-AS-UNIFORM function, , @t{vs-lisp-code-as-uniform}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-LOCALLY function, , @t{vs-locally}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-MACROLET-1 function, , @t{vs-macrolet-1}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-MAKE-ARRAY function, , @t{vs-make-array}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-MULTIPLE-VALUE-BIND function, , @t{vs-multiple-value-bind}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-MULTIPLE-VALUE-CALL function, , @t{vs-multiple-value-call}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-MULTIPLE-VALUE-PROG1 function, , @t{vs-multiple-value-prog1}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-MULTIPLE-VALUE-SETQ function, , @t{vs-multiple-value-setq}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-NTH-VALUE function, , @t{vs-nth-value}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-OR function, , @t{vs-or}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-PROGN function, , @t{vs-progn}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-RETURN function, , @t{vs-return}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-SETQ function, , @t{vs-setq}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-SLOT-VALUE function, , @t{vs-slot-value}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-SWIZZLE function, , @t{vs-swizzle}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-SYMBOL-MACROLET-1 function, , @t{vs-symbol-macrolet-1}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-THE function, , @t{vs-the}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-TYPECASE function, , @t{vs-typecase}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-UINT function, , @t{vs-uint}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-VALUES function, , @t{vs-values}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-VALUES-SAFE function, , @t{vs-values-safe}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-VECTOR function, , @t{vs-vector}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>X generic function, , @t{x}} (generic function)
@item
@ref{go to the VARI<dot>CL<colon><colon>X VARI<dot>CL<colon><colon>LOCAL-SIZE method, , @t{x}} (method)
@item
@ref{go to the VARI<dot>CL<colon><colon>X COMMON-LISP<colon><colon>LIST method, , @t{x}} (method)
@item
@ref{go to the VARI<dot>CL<colon><colon>Y generic function, , @t{y}} (generic function)
@item
@ref{go to the VARI<dot>CL<colon><colon>Y VARI<dot>CL<colon><colon>LOCAL-SIZE method, , @t{y}} (method)
@item
@ref{go to the VARI<dot>CL<colon><colon>Y COMMON-LISP<colon><colon>LIST method, , @t{y}} (method)
@item
@ref{go to the VARI<dot>CL<colon><colon>Z generic function, , @t{z}} (generic function)
@item
@ref{go to the VARI<dot>CL<colon><colon>Z VARI<dot>CL<colon><colon>LOCAL-SIZE method, , @t{z}} (method)
@item
@ref{go to the VARI<dot>CL<colon><colon>Z COMMON-LISP<colon><colon>LIST method, , @t{z}} (method)
@end itemize
@end table
" :AFTER-MENU-CONTENTS NIL) #7# #S(NET.DIDIERVERNA.DECLT::NODE :NAME "The varjo.api package" :SYNOPSIS NIL :SECTION-TYPE :NUMBERED :SECTION-NAME "@t{varjo.api}" :NEXT #8=# :PREVIOUS #7# :UP #3# :CHILDREN NIL :BEFORE-MENU-CONTENTS "@anchor{go to the VARJO<dot>API package}@c
@packageindex{varjo.api}@c
@table @strong
@item Source
@ref{go to the varjo/package<dot>lisp file, , @t{package.lisp}} (file)
@item Use List
@itemize @bullet
@item
@t{editor-hints.named-readtables}
@item
@t{alexandria.0.dev}
@item
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item
@ref{go to the VARJO<dot>UTILS package, , @t{varjo.utils}}
@item
@t{common-lisp}
@end itemize
@item Used By List
@ref{go to the VARJO package, , @t{varjo}}
@item Exported Definitions
@itemize @bullet
@item
@ref{go to the VARJO<dot>API<colon><colon>ADD-LISP-FORM-AS-UNIFORM generic function, , @t{add-lisp-form-as-uniform}} (generic function)
@item
@ref{go to the VARJO<dot>API<colon><colon>ADD-LISP-FORM-AS-UNIFORM COMMON-LISP<colon><colon>T COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>EXTENDED-ENVIRONMENT method, , @t{add-lisp-form-as-uniform}} (method)
@item
@ref{go to the VARJO<dot>API<colon><colon>ALL-BOUND-SYMBOLS generic function, , @t{all-bound-symbols}} (generic function)
@item
@ref{go to the VARJO<dot>API<colon><colon>ALL-BOUND-SYMBOLS VARJO<dot>INTERNALS<colon><colon>EXTENDED-ENVIRONMENT method, , @t{all-bound-symbols}} (method)
@item
@ref{go to the VARJO<dot>API<colon><colon>ARGUMENT-IS-UNIFORM-P generic function, , @t{argument-is-uniform-p}} (generic function)
@item
@ref{go to the VARJO<dot>API<colon><colon>ARGUMENT-IS-UNIFORM-P COMMON-LISP<colon><colon>SYMBOL VARJO<dot>INTERNALS<colon><colon>MACRO-EXPANSION-ENVIRONMENT method, , @t{argument-is-uniform-p}} (method)
@item
@ref{go to the VARJO<dot>API<colon><colon>ARGUMENT-IS-UNIFORM-P COMMON-LISP<colon><colon>SYMBOL VARJO<dot>INTERNALS<colon><colon>COMPILER-MACRO-EXPANSION-ENVIRONMENT method, , @t{argument-is-uniform-p}} (method)
@item
@ref{go to the VARJO<dot>API<colon><colon>ARGUMENT-TYPE generic function, , @t{argument-type}} (generic function)
@item
@ref{go to the VARJO<dot>API<colon><colon>ARGUMENT-TYPE COMMON-LISP<colon><colon>SYMBOL VARJO<dot>INTERNALS<colon><colon>COMPILER-MACRO-EXPANSION-ENVIRONMENT method, , @t{argument-type}} (method)
@item
@ref{go to the VARJO<dot>API<colon><colon>ARGUMENT-TYPE COMMON-LISP<colon><colon>SYMBOL VARJO<dot>INTERNALS<colon><colon>MACRO-EXPANSION-ENVIRONMENT method, , @t{argument-type}} (method)
@item
@ref{go to the VARJO<dot>API<colon><colon>ARGUMENT-UNIFORM-NAME generic function, , @t{argument-uniform-name}} (generic function)
@item
@ref{go to the VARJO<dot>API<colon><colon>ARGUMENT-UNIFORM-NAME COMMON-LISP<colon><colon>SYMBOL VARJO<dot>INTERNALS<colon><colon>MACRO-EXPANSION-ENVIRONMENT method, , @t{argument-uniform-name}} (method)
@item
@ref{go to the VARJO<dot>API<colon><colon>ARGUMENT-UNIFORM-NAME COMMON-LISP<colon><colon>SYMBOL VARJO<dot>INTERNALS<colon><colon>COMPILER-MACRO-EXPANSION-ENVIRONMENT method, , @t{argument-uniform-name}} (method)
@item
@ref{go to the VARJO<dot>API<colon><colon>METADATA-FOR-ARGUMENT generic function, , @t{metadata-for-argument}} (generic function)
@item
@ref{go to the VARJO<dot>API<colon><colon>METADATA-FOR-ARGUMENT COMMON-LISP<colon><colon>SYMBOL COMMON-LISP<colon><colon>SYMBOL VARJO<dot>INTERNALS<colon><colon>MACRO-EXPANSION-ENVIRONMENT method, , @t{metadata-for-argument}} (method)
@item
@ref{go to the VARJO<dot>API<colon><colon>METADATA-FOR-ARGUMENT COMMON-LISP<colon><colon>SYMBOL COMMON-LISP<colon><colon>SYMBOL VARJO<dot>INTERNALS<colon><colon>COMPILER-MACRO-EXPANSION-ENVIRONMENT method, , @t{metadata-for-argument}} (method)
@item
@ref{go to the VARJO<dot>API<colon><colon>METADATA-FOR-VARIABLE generic function, , @t{metadata-for-variable}} (generic function)
@item
@ref{go to the VARJO<dot>API<colon><colon>METADATA-FOR-VARIABLE COMMON-LISP<colon><colon>SYMBOL COMMON-LISP<colon><colon>SYMBOL VARJO<dot>INTERNALS<colon><colon>EXTENDED-ENVIRONMENT method, , @t{metadata-for-variable}} (method)
@item
@ref{go to the VARJO<dot>API<colon><colon>VARIABLE-IN-SCOPE-P generic function, , @t{variable-in-scope-p}} (generic function)
@item
@ref{go to the VARJO<dot>API<colon><colon>VARIABLE-IN-SCOPE-P COMMON-LISP<colon><colon>SYMBOL VARJO<dot>INTERNALS<colon><colon>EXTENDED-ENVIRONMENT method, , @t{variable-in-scope-p}} (method)
@item
@ref{go to the VARJO<dot>API<colon><colon>VARIABLE-IS-UNIFORM-P generic function, , @t{variable-is-uniform-p}} (generic function)
@item
@ref{go to the VARJO<dot>API<colon><colon>VARIABLE-IS-UNIFORM-P COMMON-LISP<colon><colon>SYMBOL VARJO<dot>INTERNALS<colon><colon>EXTENDED-ENVIRONMENT method, , @t{variable-is-uniform-p}} (method)
@item
@ref{go to the VARJO<dot>API<colon><colon>VARIABLE-TYPE generic function, , @t{variable-type}} (generic function)
@item
@ref{go to the VARJO<dot>API<colon><colon>VARIABLE-TYPE COMMON-LISP<colon><colon>SYMBOL VARJO<dot>INTERNALS<colon><colon>EXTENDED-ENVIRONMENT method, , @t{variable-type}} (method)
@item
@ref{go to the VARJO<dot>API<colon><colon>VARIABLE-UNIFORM-NAME generic function, , @t{variable-uniform-name}} (generic function)
@item
@ref{go to the VARJO<dot>API<colon><colon>VARIABLE-UNIFORM-NAME COMMON-LISP<colon><colon>SYMBOL VARJO<dot>INTERNALS<colon><colon>EXTENDED-ENVIRONMENT method, , @t{variable-uniform-name}} (method)
@item
@ref{go to the VARJO<dot>API<colon><colon>VARIABLES-IN-SCOPE generic function, , @t{variables-in-scope}} (generic function)
@item
@ref{go to the VARJO<dot>API<colon><colon>VARIABLES-IN-SCOPE VARJO<dot>INTERNALS<colon><colon>EXTENDED-ENVIRONMENT method, , @t{variables-in-scope}} (method)
@end itemize
@item Internal Definitions
@itemize @bullet
@item
@ref{go to the VARJO<dot>API<colon><colon>%GET-MACRO-ARG function, , @t{%get-macro-arg}} (function)
@item
@ref{go to the VARJO<dot>API<colon><colon>%GET-VAL-BINDING function, , @t{%get-val-binding}} (function)
@item
@ref{go to the VARJO<dot>API<colon><colon>ALL-SYMBOL-BINDING-NAMES function, , @t{all-symbol-binding-names}} (function)
@end itemize
@end table
" :AFTER-MENU-CONTENTS NIL) #8# #S(NET.DIDIERVERNA.DECLT::NODE :NAME "The varjo-conditions package" :SYNOPSIS NIL :SECTION-TYPE :NUMBERED :SECTION-NAME "@t{varjo-conditions}" :NEXT #9=# :PREVIOUS #8# :UP #3# :CHILDREN NIL :BEFORE-MENU-CONTENTS "@anchor{go to the VARJO-CONDITIONS package}@c
@packageindex{varjo-conditions}@c
@table @strong
@item Source
@ref{go to the varjo/package<dot>lisp file, , @t{package.lisp}} (file)
@item Use List
@itemize @bullet
@item
@t{editor-hints.named-readtables}
@item
@t{alexandria.0.dev}
@item
@ref{go to the VARJO<dot>UTILS package, , @t{varjo.utils}}
@item
@t{common-lisp}
@end itemize
@item Used By List
@itemize @bullet
@item
@ref{go to the VARI<dot>CL package, , @t{vari.cl}}
@item
@ref{go to the VARI<dot>GLSL package, , @t{vari.glsl}}
@item
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@end itemize
@item Exported Definitions
@itemize @bullet
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>ALT-TYPE-NAME-ALREADY-TAKEN condition, , @t{alt-type-name-already-taken}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>ARGS-INCOMPATIBLE condition, , @t{args-incompatible}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>ARRAYS-CANNOT-HOLD-EPHEMERAL-TYPES condition, , @t{arrays-cannot-hold-ephemeral-types}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>ASSIGNING-TO-READONLY condition, , @t{assigning-to-readonly}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>ASSIGNMENT-TYPE-MATCH condition, , @t{assignment-type-match}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>ATTEMPTED-TRANSFORM-FEEDBACK-IN-FRAGMENT-SHADER condition, , @t{attempted-transform-feedback-in-fragment-shader}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>BAD-MAKE-FUNCTION-ARGS condition, , @t{bad-make-function-args}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>BODY-BLOCK-EMPTY condition, , @t{body-block-empty}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>CANNOT-COMPILE condition, , @t{cannot-compile}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>CANNOT-ESTABLISH-EXACT-FUNCTION condition, , @t{cannot-establish-exact-function}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>CANNOT-NOT-SHADOW-CORE condition, , @t{cannot-not-shadow-core}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>CANNOT-SWIZZLE-THIS-TYPE condition, , @t{cannot-swizzle-this-type}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>CANNOT-TAKE-REFERENCE-TO-&REST-FUNC condition, , @t{cannot-take-reference-to-&rest-func}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>CLASHES-FOUND-BETWEEN-INPUT-AND-OUTPUT-NAMES condition, , @t{clashes-found-between-input-and-output-names}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>CLEAN-GLOBAL-ENV-ERROR condition, , @t{clean-global-env-error}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>CLONE-GLOBAL-ENV-ERROR condition, , @t{clone-global-env-error}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>CLOSURES-NOT-SUPPORTED condition, , @t{closures-not-supported}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>COMPUTE-PIPELINE-MAY-ONLY-CONTAIN-ONE-STAGE condition, , @t{compute-pipeline-may-only-contain-one-stage}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>COMPUTE-STAGE-MUST-BE-VOID condition, , @t{compute-stage-must-be-void}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>COMPUTE-STAGE-WITH-IN-ARGS condition, , @t{compute-stage-with-in-args}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>CONDITIONAL-MULTIPLE-VALS-MISMATCH condition, , @t{conditional-multiple-vals-mismatch}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>CONDITIONAL-RETURN-TYPE-MISMATCH condition, , @t{conditional-return-type-mismatch}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>COULD-NOT-FIND-ANY condition, , @t{could-not-find-any}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>COULD-NOT-FIND-FUNCTION condition, , @t{could-not-find-function}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>COULDNT-CONVERT-PRIMITIVE-FOR-GEOMETRY-STAGE condition, , @t{couldnt-convert-primitive-for-geometry-stage}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>CROSS-SCOPE-MUTATE condition, , @t{cross-scope-mutate}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>DISCARD-NOT-IN-FRAGMENT-STAGE condition, , @t{discard-not-in-fragment-stage}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>DISCARDED-FOR-CONDITIONAL-TEST condition, , @t{discarded-for-conditional-test}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>DUP-NAME-IN-LET condition, , @t{dup-name-in-let}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>DUP-NAMES-IN-LET condition, , @t{dup-names-in-let}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>DUPLICATE-NAME condition, , @t{duplicate-name}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>EMIT-NOT-IN-GEOMETRY-STAGE condition, , @t{emit-not-in-geometry-stage}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>EMIT-TYPE-MISMATCH condition, , @t{emit-type-mismatch}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>EMPTY-PROGN condition, , @t{empty-progn}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>ENV-PARENT-CONTEXT-MISMATCH condition, , @t{env-parent-context-mismatch}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>EXTERNAL-FUNCTION-INVALID-IN-ARG-TYPES condition, , @t{external-function-invalid-in-arg-types}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>FIND-MUTUAL-TYPE-BUG condition, , @t{find-mutual-type-bug}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>FLOW-ID-MUST-BE-SPECIFIED-CO condition, , @t{flow-id-must-be-specified-co}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>FLOW-ID-MUST-BE-SPECIFIED-VV condition, , @t{flow-id-must-be-specified-vv}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>FLOW-IDS-MANDATORY condition, , @t{flow-ids-mandatory}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>FOR-LOOP-ONLY-ONE-VAR condition, , @t{for-loop-only-one-var}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>FOR-LOOP-SIMPLE-EXPRESSION condition, , @t{for-loop-simple-expression}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>FRAGMENT-INTEGER-INPUTS-NOT-FLAT condition, , @t{fragment-integer-inputs-not-flat}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>FUNCALL-OF-SPECIAL-OPERATOR condition, , @t{funcall-of-special-operator}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>FUNCTION-WITH-NO-RETURN-TYPE condition, , @t{function-with-no-return-type}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>GLOBAL-UNINITIALIZED-VAR condition, , @t{global-uninitialized-var}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>IF-BRANCH-TYPE-MISMATCH condition, , @t{if-branch-type-mismatch}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>IF-FORM-MULTIPLE-VALS-MISMATCH condition, , @t{if-form-multiple-vals-mismatch}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>IF-FORM-TYPE-MISMATCH condition, , @t{if-form-type-mismatch}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>IF-TEST-TYPE-MISMATCH condition, , @t{if-test-type-mismatch}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>ILLEGAL-&REST-IN-ARGS condition, , @t{illegal-&rest-in-args}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>ILLEGAL-&UNIFORM-IN-ARGS condition, , @t{illegal-&uniform-in-args}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>ILLEGAL-IMPLICIT-ARGS condition, , @t{illegal-implicit-args}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>INCORRECT-STAGE-FOR-SHARED-VARIABLES condition, , @t{incorrect-stage-for-shared-variables}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>INLINE-GLSL-VERTEX-STAGE-NOT-SUPPORTED condition, , @t{inline-glsl-vertex-stage-not-supported}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>INVALID-ARGUMENTS-FOR-SPECIAL-OP condition, , @t{invalid-arguments-for-special-op}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>INVALID-COERCE condition, , @t{invalid-coerce}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>INVALID-CONTEXT-SYMBOL condition, , @t{invalid-context-symbol}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>INVALID-ENV-VARS condition, , @t{invalid-env-vars}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>INVALID-FEEDBACK-QUALIFIER-FORM condition, , @t{invalid-feedback-qualifier-form}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>INVALID-FLOW-ID-MULTI-RETURN condition, , @t{invalid-flow-id-multi-return}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>INVALID-FOR-LOOP-TYPE condition, , @t{invalid-for-loop-type}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>INVALID-FORM-LIST condition, , @t{invalid-form-list}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>INVALID-FUNCTION-RETURN-SPEC condition, , @t{invalid-function-return-spec}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>INVALID-GLSL-NUMERIC-LITERAL condition, , @t{invalid-glsl-numeric-literal}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>INVALID-INLINE-GLSL-STAGE-ARG-LAYOUT condition, , @t{invalid-inline-glsl-stage-arg-layout}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>INVALID-OUTPUT-PRIMITIVE-FOR-GEOMETRY condition, , @t{invalid-output-primitive-for-geometry}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>INVALID-PRIMITIVE-FOR-COMPUTE-STAGE condition, , @t{invalid-primitive-for-compute-stage}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>INVALID-PRIMITIVE-FOR-GEOMETRY-STAGE condition, , @t{invalid-primitive-for-geometry-stage}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>INVALID-SHADER-STAGE condition, , @t{invalid-shader-stage}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>INVALID-SPECIAL-FUNCTION-ARG-SPEC condition, , @t{invalid-special-function-arg-spec}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>INVALID-STAGE-KIND condition, , @t{invalid-stage-kind}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>INVALID-SYMBOL-MACRO-FORM condition, , @t{invalid-symbol-macro-form}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>INVALID-THE-DECLARATION condition, , @t{invalid-the-declaration}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>INVALID-TYPE-FOR-DUMMY-FUNCTION condition, , @t{invalid-type-for-dummy-function}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>INVALID-V-DEFUN-TEMPLATE condition, , @t{invalid-v-defun-template}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>KEYWORD-IN-FUNCTION-POSITION condition, , @t{keyword-in-function-position}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>LET-DISCARDED condition, , @t{let-discarded}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>LET-OR condition, , @t{let-or}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>LET-OR-FUNCTIONS condition, , @t{let-or-functions}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>LET-RETURNED condition, , @t{let-returned}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>LET-VOID condition, , @t{let-void}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>LOOP-FLOW-ANALYSIS-FAILURE condition, , @t{loop-flow-analysis-failure}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>LOOP-WILL-NEVER-HALT condition, , @t{loop-will-never-halt}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>MAKE-ARRAY-CANT-CAST-ARGS condition, , @t{make-array-cant-cast-args}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>MAKE-ARRAY-CANT-ESTABLISH-DEFAULT-VALUE condition, , @t{make-array-cant-establish-default-value}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>MAKE-ARRAY-CONFLICTING-ARGS condition, , @t{make-array-conflicting-args}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>MAKE-ARRAY-CONFLICTING-LENGTHS condition, , @t{make-array-conflicting-lengths}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>MAKE-ARRAY-MANDATORY-ARGS condition, , @t{make-array-mandatory-args}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>MERGE-ENV-FUNC-SCOPE-MISMATCH condition, , @t{merge-env-func-scope-mismatch}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>MERGE-ENV-PARENT-MISMATCH condition, , @t{merge-env-parent-mismatch}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>MULTI-DIMENSIONAL-ARRAY condition, , @t{multi-dimensional-array}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>MULTI-FUNC-STEMCELLS condition, , @t{multi-func-stemcells}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>MULTI-VAL-BIND-MISMATCH condition, , @t{multi-val-bind-mismatch}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>NAME-CLASH condition, , @t{name-clash}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>NAME-MISMATCH condition, , @t{name-mismatch}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>NAME-UNSUITABLE condition, , @t{name-unsuitable}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>NIL-RETURN-SET condition, , @t{nil-return-set}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>NO-ARGS-REMOVE-IN-UNREP-INLINING condition, , @t{no-args-remove-in-unrep-inlining}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>NO-FUNCTION-RETURNS condition, , @t{no-function-returns}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>NO-VALID-FUNCTION condition, , @t{no-valid-function}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>NO-VERSION-IN-CONTEXT condition, , @t{no-version-in-context}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>NON-PLACE-ASSIGN condition, , @t{non-place-assign}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>NONE-TYPE-IN-OUT-VARS condition, , @t{none-type-in-out-vars}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>NOT-CORE-TYPE-ERROR condition, , @t{not-core-type-error}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>OPAQUE-DATA-FOUND condition, , @t{opaque-data-found}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>OUT-VAR-NAME-TAKEN condition, , @t{out-var-name-taken}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>OUT-VAR-TYPE-MISMATCH condition, , @t{out-var-type-mismatch}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>PRIMITIVE-IN-CONTEXT condition, , @t{primitive-in-context}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>PRIMITIVES-DONT-MATCH condition, , @t{primitives-dont-match}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>PROBLEM-WITH-THE-COMPILER condition, , @t{problem-with-the-compiler}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>RETURN-SET-MISMATCH condition, , @t{return-set-mismatch}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>RETURN-TYPE-MISMATCH condition, , @t{return-type-mismatch}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>RETURNS-IN-GEOMETRY-STAGE condition, , @t{returns-in-geometry-stage}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>ROLLING-TRANSLATE-INVALID-STAGE condition, , @t{rolling-translate-invalid-stage}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>SETQ-READONLY condition, , @t{setq-readonly}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>SETQ-TYPE-MATCH condition, , @t{setq-type-match}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>SHARED-OPAQUE condition, , @t{shared-opaque}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>SHOULD-BE-CONSTANT condition, , @t{should-be-constant}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>SHOULD-BE-QUOTED condition, , @t{should-be-quoted}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>SLOT-NOT-FOUND condition, , @t{slot-not-found}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>SLOT-VALUE-ON-NON-STRUCT condition, , @t{slot-value-on-non-struct}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>STAGE-IN-CONTEXT condition, , @t{stage-in-context}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>STAGE-MUST-HAVE-LOCAL-SIZE-DECLARATION condition, , @t{stage-must-have-local-size-declaration}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>STAGE-MUST-HAVE-OUTPUT-PATCH-DECLARATION condition, , @t{stage-must-have-output-patch-declaration}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>STAGE-MUST-HAVE-OUTPUT-PRIM-DECLARATION condition, , @t{stage-must-have-output-prim-declaration}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>STAGE-ORDER-ERROR condition, , @t{stage-order-error}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>STAGE-PRIMARY-TYPE-MISMATCH condition, , @t{stage-primary-type-mismatch}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>STRUCT-CANNOT-HOLD-EPHEMERAL-TYPES condition, , @t{struct-cannot-hold-ephemeral-types}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>SWITCH-TYPE-ERROR condition, , @t{switch-type-error}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>SWIZZLE-KEYWORD condition, , @t{swizzle-keyword}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>SYMBOL-UNIDENTIFIED condition, , @t{symbol-unidentified}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>TESSELLATION-CONTROL-EXPECTS-PATCHES condition, , @t{tessellation-control-expects-patches}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>TESSELLATION-EVALUATION-INVALID-PRIMITIVE condition, , @t{tessellation-evaluation-invalid-primitive}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>TEST-TRANSLATE-FAILED condition, , @t{test-translate-failed}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>TRANSFORM-FEEDBACK-INCORRECT-STAGE condition, , @t{transform-feedback-incorrect-stage}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>UBO-SSBO-TYPE-LIMITATION condition, , @t{ubo-ssbo-type-limitation}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>UNABLE-TO-RESOLVE-FUNC-TYPE condition, , @t{unable-to-resolve-func-type}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>UNIFORM-IN-SFUNC condition, , @t{uniform-in-sfunc}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>UNIFORM-UBO-AND-SSBO condition, , @t{uniform-ubo-and-ssbo}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>UNINITIALIZED-VAR condition, , @t{uninitialized-var}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>UNKNOWN-ALT-TYPE-NAME condition, , @t{unknown-alt-type-name}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>UNKNOWN-LAYOUT-SPECIFIER condition, , @t{unknown-layout-specifier}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>UNKNOWN-TYPE-SPEC condition, , @t{unknown-type-spec}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>UNKNOWN-VARIABLE-TYPE condition, , @t{unknown-variable-type}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>USER-FUNC-INVALID-X condition, , @t{user-func-invalid-x}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>V-DEF-TEMPLATE-ARG-MISMATCH condition, , @t{v-def-template-arg-mismatch}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>V-DEPRECATED condition, , @t{v-deprecated}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>VALUES-SAFE-WASNT-SAFE condition, , @t{values-safe-wasnt-safe}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>VAR-TYPE-MISMATCH condition, , @t{var-type-mismatch}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>VOID-TYPE-FOR-CONDITIONAL-TEST condition, , @t{void-type-for-conditional-test}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>WITH-FRESH-ENV-SCOPE-MISSING-ENV condition, , @t{with-fresh-env-scope-missing-env}} (condition)
@end itemize
@end table
" :AFTER-MENU-CONTENTS NIL) #9# #S(NET.DIDIERVERNA.DECLT::NODE :NAME "The varjo.utils package" :SYNOPSIS NIL :SECTION-TYPE :NUMBERED :SECTION-NAME "@t{varjo.utils}" :NEXT NIL :PREVIOUS #9# :UP #3# :CHILDREN NIL :BEFORE-MENU-CONTENTS "@anchor{go to the VARJO<dot>UTILS package}@c
@packageindex{varjo.utils}@c
@table @strong
@item Source
@ref{go to the varjo/package<dot>lisp file, , @t{package.lisp}} (file)
@item Use List
@itemize @bullet
@item
@t{editor-hints.named-readtables}
@item
@t{alexandria.0.dev}
@item
@t{common-lisp}
@end itemize
@item Used By List
@itemize @bullet
@item
@ref{go to the VARJO package, , @t{varjo}}
@item
@ref{go to the VARI<dot>CL package, , @t{vari.cl}}
@item
@ref{go to the VARI<dot>GLSL package, , @t{vari.glsl}}
@item
@ref{go to the VARJO<dot>API package, , @t{varjo.api}}
@item
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item
@ref{go to the VARI<dot>TYPES package, , @t{vari.types}}
@end itemize
@item Exported Definitions
@itemize @bullet
@item
@ref{go to the VARJO<dot>UTILS<colon><colon>%PEEK macro, , @t{%peek}} (macro)
@item
@ref{go to the VARJO<dot>UTILS<colon><colon>A-ADD macro, , @t{a-add}} (macro)
@item
@ref{go to the VARJO<dot>UTILS<colon><colon>A-GET function, , @t{a-get}} (function)
@item
@ref{go to the VARJO<dot>UTILS<colon><colon>A-GET1 function, , @t{a-get1}} (function)
@item
@ref{go to the VARJO<dot>UTILS<colon><colon>A-REMOVE-ALL macro, , @t{a-remove-all}} (macro)
@item
@ref{go to the VARJO<dot>UTILS<colon><colon>A-SET macro, , @t{a-set}} (macro)
@item
@ref{go to the VARJO<dot>UTILS<colon><colon>ASSOCR compiler macro, , @t{assocr}} (compiler macro)
@item
@ref{go to the VARJO<dot>UTILS<colon><colon>ASSOCR function, , @t{assocr}} (function)
@item
@ref{go to the VARJO<dot>UTILS<colon><colon>CASE-MEMBER macro, , @t{case-member}} (macro)
@item
@ref{go to the VARJO<dot>UTILS<colon><colon>CASE= macro, , @t{case=}} (macro)
@item
@ref{go to the VARJO<dot>UTILS<colon><colon>CONS-END function, , @t{cons-end}} (function)
@item
@ref{go to the VARJO<dot>UTILS<colon><colon>DBIND macro, , @t{dbind}} (macro)
@item
@ref{go to the VARJO<dot>UTILS<colon><colon>ELT* function, , @t{elt*}} (function)
@item
@ref{go to the VARJO<dot>UTILS<colon><colon>FIND-DUPLICATES function, , @t{find-duplicates}} (function)
@item
@ref{go to the VARJO<dot>UTILS<colon><colon>FIND-SIMILARLY-NAMED-SYMBOL function, , @t{find-similarly-named-symbol}} (function)
@item
@ref{go to the VARJO<dot>UTILS<colon><colon>GROUP function, , @t{group}} (function)
@item
@ref{go to the VARJO<dot>UTILS<colon><colon>GROUP-BY function, , @t{group-by}} (function)
@item
@ref{go to the VARJO<dot>UTILS<colon><colon>KWD function, , @t{kwd}} (function)
@item
@ref{go to the VARJO<dot>UTILS<colon><colon>LAMBDA-LIST-GET-NAMES function, , @t{lambda-list-get-names}} (function)
@item
@ref{go to the VARJO<dot>UTILS<colon><colon>LAMBDA-LIST-SPLIT function, , @t{lambda-list-split}} (function)
@item
@ref{go to the VARJO<dot>UTILS<colon><colon>LAST1 function, , @t{last1}} (function)
@item
@ref{go to the VARJO<dot>UTILS<colon><colon>LISTIFY function, , @t{listify}} (function)
@item
@ref{go to the VARJO<dot>UTILS<colon><colon>N-OF function, , @t{n-of}} (function)
@item
@ref{go to the VARJO<dot>UTILS<colon><colon>NTH-OR-SELF function, , @t{nth-or-self}} (function)
@item
@ref{go to the VARJO<dot>UTILS<colon><colon>P-SYMB function, , @t{p-symb}} (function)
@item
@ref{go to the VARJO<dot>UTILS<colon><colon>PIPE-> macro, , @t{pipe->}} (macro)
@item
@ref{go to the VARJO<dot>UTILS<colon><colon>POSITIONS-IF function, , @t{positions-if}} (function)
@item
@ref{go to the VARJO<dot>UTILS<colon><colon>SPLIT-ARGUMENTS function, , @t{split-arguments}} (function)
@item
@ref{go to the VARJO<dot>UTILS<colon><colon>SYMB function, , @t{symb}} (function)
@item
@ref{go to the VARJO<dot>UTILS<colon><colon>VBIND macro, , @t{vbind}} (macro)
@item
@ref{go to the VARJO<dot>UTILS<colon><colon>VLIST macro, , @t{vlist}} (macro)
@end itemize
@end table
" :AFTER-MENU-CONTENTS NIL)) :BEFORE-MENU-CONTENTS "Packages are listed by definition order." :AFTER-MENU-CONTENTS NIL) :UP #5# :CHILDREN (#1#) :BEFORE-MENU-CONTENTS "Definitions are sorted by export status, category, package, and then by
lexicographic order." :AFTER-MENU-CONTENTS NIL) :CHILDREN (#10=#S(NET.DIDIERVERNA.DECLT::NODE :NAME "Exported special variables" :SYNOPSIS NIL :SECTION-TYPE :NUMBERED :SECTION-NAME "Special variables" :NEXT #11=#S(NET.DIDIERVERNA.DECLT::NODE :NAME "Exported macros" :SYNOPSIS NIL :SECTION-TYPE :NUMBERED :SECTION-NAME "Macros" :NEXT #12=#S(NET.DIDIERVERNA.DECLT::NODE :NAME "Exported compiler macros" :SYNOPSIS NIL :SECTION-TYPE :NUMBERED :SECTION-NAME "Compiler macros" :NEXT #13=# :PREVIOUS #11# :UP #1# :CHILDREN NIL :BEFORE-MENU-CONTENTS "@deffn {Compiler Macro} {assocr} ITEM ALIST &key KEY TEST TEST-NOT
@anchor{go to the VARJO<dot>UTILS<colon><colon>ASSOCR compiler macro}@c
@compilermacrosubindex{assocr}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>UTILS package, , @t{varjo.utils}}
@item Source
@ref{go to the varjo/src/utils-v<dot>lisp file, , @t{src/utils-v.lisp}} (file)
@end table
@end deffn
@deffn {Compiler Macro} {type-spec->type} SPEC &optional FLOW-ID
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>TYPE-SPEC->TYPE compiler macro}@c
@compilermacrosubindex{type-spec->type}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/early-types<dot>lisp file, , @t{src/varjo.internals/types/early-types.lisp}} (file)
@end table
@end deffn
@deffn {Compiler Macro} {v-typep} A B
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-TYPEP compiler macro}@c
@compilermacrosubindex{v-typep}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
" :AFTER-MENU-CONTENTS NIL) :PREVIOUS #10# :UP #1# :CHILDREN NIL :BEFORE-MENU-CONTENTS "@deffn {Macro} {%peek} THING
@anchor{go to the VARJO<dot>UTILS<colon><colon>%PEEK macro}@c
@macrosubindex{%peek}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>UTILS package, , @t{varjo.utils}}
@item Source
@ref{go to the varjo/src/utils-v<dot>lisp file, , @t{src/utils-v.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {a-add} NAME VALUE LIST-PLACE
@anchor{go to the VARJO<dot>UTILS<colon><colon>A-ADD macro}@c
@macrosubindex{a-add}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>UTILS package, , @t{varjo.utils}}
@item Source
@ref{go to the varjo/src/utils-v<dot>lisp file, , @t{src/utils-v.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {a-remove-all} NAME LIST-PLACE
@anchor{go to the VARJO<dot>UTILS<colon><colon>A-REMOVE-ALL macro}@c
@macrosubindex{a-remove-all}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>UTILS package, , @t{varjo.utils}}
@item Source
@ref{go to the varjo/src/utils-v<dot>lisp file, , @t{src/utils-v.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {a-set} NAME VALUE LIST-PLACE
@anchor{go to the VARJO<dot>UTILS<colon><colon>A-SET macro}@c
@macrosubindex{a-set}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>UTILS package, , @t{varjo.utils}}
@item Source
@ref{go to the varjo/src/utils-v<dot>lisp file, , @t{src/utils-v.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {case-member} MEMBER-FORM (&key TEST) &body CASES
@anchor{go to the VARJO<dot>UTILS<colon><colon>CASE-MEMBER macro}@c
@macrosubindex{case-member}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>UTILS package, , @t{varjo.utils}}
@item Source
@ref{go to the varjo/src/utils-v<dot>lisp file, , @t{src/utils-v.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {case=} FORM &body CASES
@anchor{go to the VARJO<dot>UTILS<colon><colon>CASE= macro}@c
@macrosubindex{case=}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>UTILS package, , @t{varjo.utils}}
@item Source
@ref{go to the varjo/src/utils-v<dot>lisp file, , @t{src/utils-v.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {dbind} LAMBDA-LIST EXPRESSION &body BODY
@anchor{go to the VARJO<dot>UTILS<colon><colon>DBIND macro}@c
@macrosubindex{dbind}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>UTILS package, , @t{varjo.utils}}
@item Source
@ref{go to the varjo/src/utils-v<dot>lisp file, , @t{src/utils-v.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {def-metadata-infer} VARJO-TYPE-SPEC METADATA-KIND ENV-VAR &body BODY
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>DEF-METADATA-INFER macro}@c
@macrosubindex{def-metadata-infer}@c

`def-metadata-infer` is the older syntax for `define-metadata-infer`.@*

This macro is still exported in order to maintain compatibility with existing
code.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/value-metadata<dot>lisp file, , @t{src/varjo.internals/value-metadata.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {def-metadata-kind} NAME (&key CONC-NAME BINDS-TO) &body SLOT-NAMES
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>DEF-METADATA-KIND macro}@c
@macrosubindex{def-metadata-kind}@c

`def-metadata-kind` is the older syntax for `define-metadata-kind`.@*

This macro is still exported in order to maintain compatibility with existing
code.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/value-metadata<dot>lisp file, , @t{src/varjo.internals/value-metadata.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {def-shadow-type-constructor} SHADOW-TYPE FUNCTION-IDENTIFIER
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>DEF-SHADOW-TYPE-CONSTRUCTOR macro}@c
@macrosubindex{def-shadow-type-constructor}@c

`def-shadow-type-constructor` is the older syntax for
`define-shadow-type-constructor`.@*

This macro is still exported in order to maintain compatibility with existing
code.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/deftype<dot>lisp file, , @t{src/varjo.internals/deftype.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {define-alternate-type-name} CURRENT-TYPE-NAME ALTERNATE-TYPE-NAME
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>DEFINE-ALTERNATE-TYPE-NAME macro}@c
@macrosubindex{define-alternate-type-name}@c

`define-alternate-type-name` lets you define
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/early-types<dot>lisp file, , @t{src/varjo.internals/types/early-types.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {define-glsl-template-function} NAME ARGS RETURN-SPEC TRANSFORM &key PURE
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>DEFINE-GLSL-TEMPLATE-FUNCTION macro}@c
@macrosubindex{define-glsl-template-function}@c

`define-glsl-template-function` which lets you define a snippet of@*
glsl code as a function in Vari. Here is an example definition:@*

                                   [0]
                                    ↓@*
    (define-glsl-template-function my-func ((x :float)) ←[1]@*
      :float ←[2]@*
      \"(1.0f / ~a)\" ←[3]@*
      :pure t) ←[4]@*

`[0]` Here we are defining a function called 'my-func'@*

`[1]` It takes 1 argument, called 'x' which has the type `:float`@*

`[2]` It returns a single `:float` value@*

`[3]` The string pattern is what will be injected into the final glsl. It
      behaves as though this pattern and the glsl for the arguments were
      passed to `format`, e.g. `(format nil \"(1.0f / ~a)\" \"2.3f\") assuming
      the glsl of the argument passed to `x` was \"2.3f\".@*

      The glsl for the arguments is passed to format in the order specified
      in `[1]`@*

      As it currently uses `format` it is legal to use other `directives` such
      as `~s` but it is not advisable as this will result in invalid glsl.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/functions<dot>lisp file, , @t{src/varjo.internals/functions.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {define-metadata-infer} VARJO-TYPE-SPEC METADATA-KIND ENV-VAR &body BODY
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>DEFINE-METADATA-INFER macro}@c
@macrosubindex{define-metadata-infer}@c

`define-metadata-infer` lets you define
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/value-metadata<dot>lisp file, , @t{src/varjo.internals/value-metadata.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {define-metadata-kind} NAME (&key CONC-NAME BINDS-TO) &body SLOT-NAMES
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>DEFINE-METADATA-KIND macro}@c
@macrosubindex{define-metadata-kind}@c

`define-metadata-kind` lets you define
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/value-metadata<dot>lisp file, , @t{src/varjo.internals/value-metadata.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {define-shadow-type-constructor} SHADOW-TYPE FUNCTION-IDENTIFIER
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>DEFINE-SHADOW-TYPE-CONSTRUCTOR macro}@c
@macrosubindex{define-shadow-type-constructor}@c

`define-shadow-type-constructor` lets you define
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/deftype<dot>lisp file, , @t{src/varjo.internals/deftype.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {define-vari-compiler-macro} NAME LAMBDA-LIST &body BODY
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>DEFINE-VARI-COMPILER-MACRO macro}@c
@macrosubindex{define-vari-compiler-macro}@c

`define-vari-compiler-macro` lets you define a compiler-macro that works in
Vari.@*

The parameters in the lambda-list must be defined in form `(,name ,type-spec)`

The compiler macro will only expand for functions with an exactly matching name
and lambda-list.@*

Vari's compiler macros behave the same as regular Common Lisp compiler-macros
with the exception that you can make queries against the environment to find
data (such as type) from the arguments (See [here]() for details).@*

Due to having to compile the argument forms before being able to identify the
compiler macro, any form returned from the compiler-macro (other than the value
from `&whole` is going to result in recompilation. This make Vari's compiler
macros more 'expensive' than Common Lisps in the general sense.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/macros<dot>lisp file, , @t{src/varjo.internals/macros.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {define-vari-function} NAME ARGS &body BODY
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>DEFINE-VARI-FUNCTION macro}@c
@macrosubindex{define-vari-function}@c

`define-vari-function` lets you define a function that can be used in@*
any Vari code compiled in the future.@*

that takes the following:@*

- a name as a symbol@*
- a 'vari function lambda-list' (see [here]() for details)@*
- a body made of Vari code@*

Please note that, other than performing some basic validation on the arguments,
this function does not attempt any validation on the body of the function.
Doing so would require knowledge of the context in which it is used.@*

 If you need to test that the function could be valid, refer to the
`test-translate-function-split-details` & `add-external-function` functions.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/functions<dot>lisp file, , @t{src/varjo.internals/functions.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {define-vari-macro} NAME LAMBDA-LIST &body BODY
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>DEFINE-VARI-MACRO macro}@c
@macrosubindex{define-vari-macro}@c

`define-vari-macro` lets you define a macro that can be used in any Vari code
compiled in the future.@*

Vari's macros behave the same as regular Common Lisp macros with the
exception that you can make queries against the environment to find@*
data (such as type) from the arguments (See [here]() for details).
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/macros<dot>lisp file, , @t{src/varjo.internals/macros.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {define-vari-struct} NAME CONTEXT &body SLOTS
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>DEFINE-VARI-STRUCT macro}@c
@macrosubindex{define-vari-struct}@c

`define-vari-struct` lets you define
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/structs<dot>lisp file, , @t{src/varjo.internals/structs.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {define-vari-trait} NAME (&rest TYPE-VARS) &body FUNC-SIGNATURES
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>DEFINE-VARI-TRAIT macro}@c
@macrosubindex{define-vari-trait}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/traits<dot>lisp file, , @t{src/varjo.internals/traits.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {define-vari-trait-implementation} IMPL-TYPE-NAME (TRAIT-NAME &rest TRAIT-ARGS &key &allow-other-keys) &body IMPLEMENTATIONS &key &allow-other-keys
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>DEFINE-VARI-TRAIT-IMPLEMENTATION macro}@c
@macrosubindex{define-vari-trait-implementation}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/traits<dot>lisp file, , @t{src/varjo.internals/traits.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {define-vari-type} NAME ARGS TYPE-FORM &key VALID-METADATA-KINDS
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>DEFINE-VARI-TYPE macro}@c
@macrosubindex{define-vari-type}@c

`define-vari-type` lets you define
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/deftype<dot>lisp file, , @t{src/varjo.internals/deftype.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {env->} (ENV-VAR ENV) &body COMPILING-FORMS
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ENV-> macro}@c
@macrosubindex{env->}@c
Kinda like varjo progn in that it accumulates the env and@*
   returns the results of all the forms and the final env.@*
   However it DOES NOT make a fresh environment to compile the forms in.
   It expects that each form returns a result and optionally an env
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/compile-special<dot>lisp file, , @t{src/varjo.internals/compile-special.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {flow-id-scope} &body BODY
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>FLOW-ID-SCOPE macro}@c
@macrosubindex{flow-id-scope}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/flow<dot>lisp file, , @t{src/varjo.internals/flow.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {glsl-chunk-splicing} &body KEY-FORM-PAIRS
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-CHUNK-SPLICING macro}@c
@macrosubindex{glsl-chunk-splicing}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/glsl-generation/line-and-chunk<dot>lisp file, , @t{src/varjo.internals/glsl-generation/line-and-chunk.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {merge-multi-env-progn} CODE-OBJS
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>MERGE-MULTI-ENV-PROGN macro}@c
@macrosubindex{merge-multi-env-progn}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/compile-special<dot>lisp file, , @t{src/varjo.internals/compile-special.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {merge-progn} CODE-OBJS STARTING-ENV &optional FINAL-ENV
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>MERGE-PROGN macro}@c
@macrosubindex{merge-progn}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/compile-special<dot>lisp file, , @t{src/varjo.internals/compile-special.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {pipe->} ARGS &body STAGES
@anchor{go to the VARJO<dot>UTILS<colon><colon>PIPE-> macro}@c
@macrosubindex{pipe->}@c
(pipe-> (1 2 3) #'a #'b #'c #'d)@*
   Calls first function with args provided and uses result as
   arguments for next function. Uses multiple-value-call so you
   can use (values) to specify complex lambda-args.
@table @strong
@item Package
@ref{go to the VARJO<dot>UTILS package, , @t{varjo.utils}}
@item Source
@ref{go to the varjo/src/utils-v<dot>lisp file, , @t{src/utils-v.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {v-declaim} &body DECLARATION-SPECIFIERS
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DECLAIM macro}@c
@macrosubindex{v-declaim}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/declaim<dot>lisp file, , @t{src/varjo.internals/declaim.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {v-def-glsl-template-fun} NAME ARGS TRANSFORM ARG-TYPES RETURN-SPEC &key V-PLACE-INDEX GLSL-NAME PURE
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DEF-GLSL-TEMPLATE-FUN macro}@c
@macrosubindex{v-def-glsl-template-fun}@c

`v-def-glsl-template-fun` is the older syntax for `define-glsl-template-function`.

This macro is still exported in order to maintain compatibility with existing
code.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/functions<dot>lisp file, , @t{src/varjo.internals/functions.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {v-define-compiler-macro} NAME LAMBDA-LIST &body BODY
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DEFINE-COMPILER-MACRO macro}@c
@macrosubindex{v-define-compiler-macro}@c

`v-define-compiler-macro` is the older syntax for `define-vari-compiler-macro`.

This macro is still exported in order to maintain compatibility with existing
code.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/macros<dot>lisp file, , @t{src/varjo.internals/macros.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {v-defmacro} NAME LAMBDA-LIST &body BODY
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DEFMACRO macro}@c
@macrosubindex{v-defmacro}@c

`v-defmacro` is the older syntax for `define-vari-macro`.@*

This macro is still exported in order to maintain compatibility with existing
code.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/macros<dot>lisp file, , @t{src/varjo.internals/macros.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {v-defspecial} NAME ARGS &body BODY
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DEFSPECIAL macro}@c
@macrosubindex{v-defspecial}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/functions<dot>lisp file, , @t{src/varjo.internals/functions.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {v-defstruct} NAME CONTEXT &body SLOTS
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DEFSTRUCT macro}@c
@macrosubindex{v-defstruct}@c

`v-defstruct` is the older syntax for `define-vari-struct`.@*

This macro is still exported in order to maintain compatibility with existing
code.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/structs<dot>lisp file, , @t{src/varjo.internals/structs.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {v-deftype} NAME ARGS TYPE-FORM &key VALID-METADATA-KINDS
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DEFTYPE macro}@c
@macrosubindex{v-deftype}@c

`v-deftype` is the older syntax for `define-vari-type`.@*

This macro is still exported in order to maintain compatibility with existing
code.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/deftype<dot>lisp file, , @t{src/varjo.internals/deftype.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {v-defun} NAME ARGS &body BODY
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DEFUN macro}@c
@macrosubindex{v-defun}@c

`v-defun` is the older syntax for `define-vari-function`.@*

This macro is still exported in order to maintain compatibility with existing
code.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/functions<dot>lisp file, , @t{src/varjo.internals/functions.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {vbind} VARS VALUE-FORM &body BODY
@anchor{go to the VARJO<dot>UTILS<colon><colon>VBIND macro}@c
@macrosubindex{vbind}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>UTILS package, , @t{varjo.utils}}
@item Source
@ref{go to the varjo/src/utils-v<dot>lisp file, , @t{src/utils-v.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {vlist} VALUE-FORM
@anchor{go to the VARJO<dot>UTILS<colon><colon>VLIST macro}@c
@macrosubindex{vlist}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>UTILS package, , @t{varjo.utils}}
@item Source
@ref{go to the varjo/src/utils-v<dot>lisp file, , @t{src/utils-v.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {with-constant-inject-hook} FUNC &body BODY
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>WITH-CONSTANT-INJECT-HOOK macro}@c
@macrosubindex{with-constant-inject-hook}@c

When `translate` is called within the dynamic extern of the body of this form,
if there is a use of a variable which is not in scope in the Vari code, but
is `boundp` & constant in the Common Lisp environment then the user
provided  function will be called with the symbol naming the variable.@*
The user provided function must  return a Vari type-spec or throw an error to
inform the user of the issue.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/compile-vars<dot>lisp file, , @t{src/varjo.internals/compile-vars.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {with-fresh-env-scope} (NAME STARTING-ENV &key CONTEXT FUNCTION-SCOPE FORM-BINDINGS SYMBOL-BINDINGS MULTI-VAL-BASE MULTI-VAL-SAFE ALLOWED-OUTER-VARS) &body BODY
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>WITH-FRESH-ENV-SCOPE macro}@c
@macrosubindex{with-fresh-env-scope}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/environment<dot>lisp file, , @t{src/varjo.internals/environment.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {with-stemcell-infer-hook} FUNC &body BODY
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>WITH-STEMCELL-INFER-HOOK macro}@c
@macrosubindex{with-stemcell-infer-hook}@c

When `translate` is called within the dynamic extern of the body of this form,
if there is a use of a variable which is not in scope in the Vari code, but
is not constant in the Common Lisp environment then the user provided function
will be called with the symbol naming the variable.@*
The user provided function can:@*
- Return a Vari type-spec. This will become the type of the form.@*
- Return nil to have Varjo tell the user that the symbol is unbound.@*
- Throw an error. If you wish to inform the user that something else is awry.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/stemcells<dot>lisp file, , @t{src/varjo.internals/stemcells.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {with-unknown-first-class-functions-allowed} &body BODY
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>WITH-UNKNOWN-FIRST-CLASS-FUNCTIONS-ALLOWED macro}@c
@macrosubindex{with-unknown-first-class-functions-allowed}@c

When `translate` is called within the dynamic extern of the body of this form,
it will not throw an error if there is a use of `function` with an unknown
function name/signature. In the event of such a use the compiler will generate
a dummy function to satify the typechecker.@*

This is only useful for testing and the resulting GLSL will (most likely) not
be legal
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/compile-funcall<dot>lisp file, , @t{src/varjo.internals/compile-funcall.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {with-v-arg} (&optional NAME TYPE QUALIFIERS GLSL-NAME) ARG-FORM &body BODY
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>WITH-V-ARG macro}@c
@macrosubindex{with-v-arg}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/rolling-translate<dot>lisp file, , @t{src/varjo.internals/rolling-translate.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {with-v-let-spec} FORM &body BODY
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>WITH-V-LET-SPEC macro}@c
@macrosubindex{with-v-let-spec}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/compile-special<dot>lisp file, , @t{src/varjo.internals/compile-special.lisp}} (file)
@end table
@end deffn
" :AFTER-MENU-CONTENTS NIL) :PREVIOUS NIL :UP #1# :CHILDREN NIL :BEFORE-MENU-CONTENTS "@defvr {Special Variable} *default-version*
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>*DEFAULT-VERSION* special variable}@c
@specialsubindex{*default-version*}@c

`*default-version*` is a variable that holds the version of GLSL that
will be used for a compile task if a version is not specified in the
context
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/globals<dot>lisp file, , @t{src/varjo.internals/globals.lisp}} (file)
@end table
@end defvr
@defvr {Special Variable} *emit-var-name-base*
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>*EMIT-VAR-NAME-BASE* special variable}@c
@specialsubindex{*emit-var-name-base*}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/globals<dot>lisp file, , @t{src/varjo.internals/globals.lisp}} (file)
@end table
@end defvr
@defvr {Special Variable} *in-qualifier*
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>*IN-QUALIFIER* special variable}@c
@specialsubindex{*in-qualifier*}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/qualifiers<dot>lisp file, , @t{src/varjo.internals/qualifiers.lisp}} (file)
@end table
@end defvr
@defvr {Special Variable} *out-qualifier*
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>*OUT-QUALIFIER* special variable}@c
@specialsubindex{*out-qualifier*}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/qualifiers<dot>lisp file, , @t{src/varjo.internals/qualifiers.lisp}} (file)
@end table
@end defvr
@defvr {Special Variable} *return-var-name-base*
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>*RETURN-VAR-NAME-BASE* special variable}@c
@specialsubindex{*return-var-name-base*}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/globals<dot>lisp file, , @t{src/varjo.internals/globals.lisp}} (file)
@end table
@end defvr
@defvr {Special Variable} *stage-names*
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>*STAGE-NAMES* special variable}@c
@specialsubindex{*stage-names*}@c

`*stage-names*` is a variable that holds the list of keyword stage names that
Varjo recognises
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/globals<dot>lisp file, , @t{src/varjo.internals/globals.lisp}} (file)
@end table
@end defvr
@defvr {Special Variable} *stage-type-names*
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>*STAGE-TYPE-NAMES* special variable}@c
@specialsubindex{*stage-type-names*}@c

`*stage-type-names*` is a variable that holds a list of type-names that map to
the stages named in `*stage-names*`
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/globals<dot>lisp file, , @t{src/varjo.internals/globals.lisp}} (file)
@end table
@end defvr
@defvr {Special Variable} *supported-versions*
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>*SUPPORTED-VERSIONS* special variable}@c
@specialsubindex{*supported-versions*}@c

`*supported-versions*` is a variable that holds the list of GLSL version Varjo
ostensibly supports.@*

Note: That 'ostensibly' is there as I'm very sure that the lower levels of GLSL
varjo is currently doing a very poor job. If you have the time please file
issues that you find at https://github.com/cbaggers/varjo/issues
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/globals<dot>lisp file, , @t{src/varjo.internals/globals.lisp}} (file)
@end table
@end defvr
" :AFTER-MENU-CONTENTS NIL) #11# #12# #13# #14=#S(NET.DIDIERVERNA.DECLT::NODE :NAME "Exported generic functions" :SYNOPSIS NIL :SECTION-TYPE :NUMBERED :SECTION-NAME "Generic functions" :NEXT #15=#S(NET.DIDIERVERNA.DECLT::NODE :NAME "Exported conditions" :SYNOPSIS NIL :SECTION-TYPE :NUMBERED :SECTION-NAME "Conditions" :NEXT #16=#S(NET.DIDIERVERNA.DECLT::NODE :NAME "Exported structures" :SYNOPSIS NIL :SECTION-TYPE :NUMBERED :SECTION-NAME "Structures" :NEXT NIL :PREVIOUS #15# :UP #1# :CHILDREN NIL :BEFORE-MENU-CONTENTS "@deftp {Structure} {glsl-chunk} ()
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-CHUNK structure}@c
@structuresubindex{glsl-chunk}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/glsl-generation/line-and-chunk<dot>lisp file, , @t{src/varjo.internals/glsl-generation/line-and-chunk.lisp}} (file)
@item Direct superclasses
@t{structure-object} (structure)
@item Direct slots
@defvr {Slot} lines
@slotsubindex{lines}@c
@table @strong
@item Type
@t{list}
@item Readers
@ref{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-CHUNK-LINES function, , @t{glsl-chunk-lines}} (function)
@item Writers
@ref{go to the VARJO<dot>INTERNALS<colon><colon>(SETF GLSL-CHUNK-LINES) function, , @t{(setf glsl-chunk-lines)}} (function)
@end table
@end defvr
@end table
@end deftp
@deftp {Structure} {glsl-line} ()
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-LINE structure}@c
@structuresubindex{glsl-line}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/glsl-generation/line-and-chunk<dot>lisp file, , @t{src/varjo.internals/glsl-generation/line-and-chunk.lisp}} (file)
@item Direct superclasses
@t{structure-object} (structure)
@item Direct slots
@defvr {Slot} indentation
@slotsubindex{indentation}@c
@table @strong
@item Type
@t{(unsigned-byte 16)}
@item Initform
@t{0}
@item Readers
@ref{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-LINE-INDENTATION function, , @t{glsl-line-indentation}} (function)
@item Writers
@ref{go to the VARJO<dot>INTERNALS<colon><colon>(SETF GLSL-LINE-INDENTATION) function, , @t{(setf glsl-line-indentation)}} (function)
@end table
@end defvr
@defvr {Slot} string-part
@slotsubindex{string-part}@c
@table @strong
@item Type
@t{string}
@item Initform
@t{(error \"string-part of glsl-line must be provided\")}
@item Readers
@ref{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-LINE-STRING-PART function, , @t{glsl-line-string-part}} (function)
@item Writers
@ref{go to the VARJO<dot>INTERNALS<colon><colon>(SETF GLSL-LINE-STRING-PART) function, , @t{(setf glsl-line-string-part)}} (function)
@end table
@end defvr
@end table
@end deftp
" :AFTER-MENU-CONTENTS NIL) :PREVIOUS #14# :UP #1# :CHILDREN NIL :BEFORE-MENU-CONTENTS "@deftp {Condition} {alt-type-name-already-taken} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>ALT-TYPE-NAME-ALREADY-TAKEN condition}@c
@conditionsubindex{alt-type-name-already-taken}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} alt-name
@slotsubindex{alt-name}@c
@table @strong
@item Initargs
@t{:alt-name}
@end table
@end defvr
@defvr {Slot} src-name
@slotsubindex{src-name}@c
@table @strong
@item Initargs
@t{:src-name}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {args-incompatible} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>ARGS-INCOMPATIBLE condition}@c
@conditionsubindex{args-incompatible}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} previous-args
@slotsubindex{previous-args}@c
@table @strong
@item Initargs
@t{:previous-args}
@end table
@end defvr
@defvr {Slot} current-args
@slotsubindex{current-args}@c
@table @strong
@item Initargs
@t{:current-args}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {arrays-cannot-hold-ephemeral-types} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>ARRAYS-CANNOT-HOLD-EPHEMERAL-TYPES condition}@c
@conditionsubindex{arrays-cannot-hold-ephemeral-types}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} form
@slotsubindex{form}@c
@table @strong
@item Initargs
@t{:form}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {assigning-to-readonly} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>ASSIGNING-TO-READONLY condition}@c
@conditionsubindex{assigning-to-readonly}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} var-name
@slotsubindex{var-name}@c
@table @strong
@item Initargs
@t{:var-name}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {assignment-type-match} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>ASSIGNMENT-TYPE-MATCH condition}@c
@conditionsubindex{assignment-type-match}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-CRITICAL-ERROR condition, , @t{varjo-critical-error}} (condition)
@item Direct slots
@defvr {Slot} code-obj-a
@slotsubindex{code-obj-a}@c
@table @strong
@item Initargs
@t{:code-obj-a}
@end table
@end defvr
@defvr {Slot} code-obj-b
@slotsubindex{code-obj-b}@c
@table @strong
@item Initargs
@t{:code-obj-b}
@end table
@end defvr
@defvr {Slot} form
@slotsubindex{form}@c
@table @strong
@item Initargs
@t{:form}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {attempted-transform-feedback-in-fragment-shader} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>ATTEMPTED-TRANSFORM-FEEDBACK-IN-FRAGMENT-SHADER condition}@c
@conditionsubindex{attempted-transform-feedback-in-fragment-shader}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@end table
@end deftp
@deftp {Condition} {bad-make-function-args} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>BAD-MAKE-FUNCTION-ARGS condition}@c
@conditionsubindex{bad-make-function-args}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} func-name
@slotsubindex{func-name}@c
@table @strong
@item Initargs
@t{:func-name}
@end table
@end defvr
@defvr {Slot} arg-specs
@slotsubindex{arg-specs}@c
@table @strong
@item Initargs
@t{:arg-specs}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {body-block-empty} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>BODY-BLOCK-EMPTY condition}@c
@conditionsubindex{body-block-empty}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} form-name
@slotsubindex{form-name}@c
@table @strong
@item Initargs
@t{:form-name}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {cannot-compile} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>CANNOT-COMPILE condition}@c
@conditionsubindex{cannot-compile}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} code
@slotsubindex{code}@c
@table @strong
@item Initargs
@t{:code}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {cannot-establish-exact-function} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>CANNOT-ESTABLISH-EXACT-FUNCTION condition}@c
@conditionsubindex{cannot-establish-exact-function}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-CRITICAL-ERROR condition, , @t{varjo-critical-error}} (condition)
@item Direct slots
@defvr {Slot} funcall-form
@slotsubindex{funcall-form}@c
@table @strong
@item Initargs
@t{:funcall-form}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {cannot-not-shadow-core} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>CANNOT-NOT-SHADOW-CORE condition}@c
@conditionsubindex{cannot-not-shadow-core}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@end table
@end deftp
@deftp {Condition} {cannot-swizzle-this-type} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>CANNOT-SWIZZLE-THIS-TYPE condition}@c
@conditionsubindex{cannot-swizzle-this-type}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} vtype
@slotsubindex{vtype}@c
@table @strong
@item Initargs
@t{:vtype}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {cannot-take-reference-to-&rest-func} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>CANNOT-TAKE-REFERENCE-TO-&REST-FUNC condition}@c
@conditionsubindex{cannot-take-reference-to-&rest-func}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} func-name
@slotsubindex{func-name}@c
@table @strong
@item Initargs
@t{:func-name}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {clashes-found-between-input-and-output-names} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>CLASHES-FOUND-BETWEEN-INPUT-AND-OUTPUT-NAMES condition}@c
@conditionsubindex{clashes-found-between-input-and-output-names}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} stage-kind
@slotsubindex{stage-kind}@c
@table @strong
@item Initargs
@t{:stage-kind}
@end table
@end defvr
@defvr {Slot} inputs
@slotsubindex{inputs}@c
@table @strong
@item Initargs
@t{:inputs}
@end table
@end defvr
@defvr {Slot} outputs
@slotsubindex{outputs}@c
@table @strong
@item Initargs
@t{:outputs}
@end table
@end defvr
@defvr {Slot} clashes
@slotsubindex{clashes}@c
@table @strong
@item Initargs
@t{:clashes}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {clean-global-env-error} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>CLEAN-GLOBAL-ENV-ERROR condition}@c
@conditionsubindex{clean-global-env-error}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@end table
@end deftp
@deftp {Condition} {clone-global-env-error} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>CLONE-GLOBAL-ENV-ERROR condition}@c
@conditionsubindex{clone-global-env-error}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@end table
@end deftp
@deftp {Condition} {closures-not-supported} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>CLOSURES-NOT-SUPPORTED condition}@c
@conditionsubindex{closures-not-supported}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-CRITICAL-ERROR condition, , @t{varjo-critical-error}} (condition)
@item Direct slots
@defvr {Slot} func
@slotsubindex{func}@c
@table @strong
@item Initargs
@t{:func}
@end table
@end defvr
@defvr {Slot} details
@slotsubindex{details}@c
@table @strong
@item Initargs
@t{:details}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {compute-pipeline-may-only-contain-one-stage} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>COMPUTE-PIPELINE-MAY-ONLY-CONTAIN-ONE-STAGE condition}@c
@conditionsubindex{compute-pipeline-may-only-contain-one-stage}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} stages
@slotsubindex{stages}@c
@table @strong
@item Initargs
@t{:stages}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {compute-stage-must-be-void} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>COMPUTE-STAGE-MUST-BE-VOID condition}@c
@conditionsubindex{compute-stage-must-be-void}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} returns
@slotsubindex{returns}@c
@table @strong
@item Initargs
@t{:returns}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {compute-stage-with-in-args} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>COMPUTE-STAGE-WITH-IN-ARGS condition}@c
@conditionsubindex{compute-stage-with-in-args}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} args
@slotsubindex{args}@c
@table @strong
@item Initargs
@t{:args}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {conditional-multiple-vals-mismatch} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>CONDITIONAL-MULTIPLE-VALS-MISMATCH condition}@c
@conditionsubindex{conditional-multiple-vals-mismatch}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} kind
@slotsubindex{kind}@c
@table @strong
@item Initargs
@t{:kind}
@end table
@end defvr
@defvr {Slot} sets
@slotsubindex{sets}@c
@table @strong
@item Initargs
@t{:sets}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {conditional-return-type-mismatch} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>CONDITIONAL-RETURN-TYPE-MISMATCH condition}@c
@conditionsubindex{conditional-return-type-mismatch}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} sets
@slotsubindex{sets}@c
@table @strong
@item Initargs
@t{:sets}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {could-not-find-any} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>COULD-NOT-FIND-ANY condition}@c
@conditionsubindex{could-not-find-any}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-CRITICAL-ERROR condition, , @t{varjo-critical-error}} (condition)
@item Direct slots
@defvr {Slot} name
@slotsubindex{name}@c
@table @strong
@item Initargs
@t{:name}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {could-not-find-function} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>COULD-NOT-FIND-FUNCTION condition}@c
@conditionsubindex{could-not-find-function}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-CRITICAL-ERROR condition, , @t{varjo-critical-error}} (condition)
@item Direct slots
@defvr {Slot} name
@slotsubindex{name}@c
@table @strong
@item Initargs
@t{:name}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {couldnt-convert-primitive-for-geometry-stage} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>COULDNT-CONVERT-PRIMITIVE-FOR-GEOMETRY-STAGE condition}@c
@conditionsubindex{couldnt-convert-primitive-for-geometry-stage}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} prim
@slotsubindex{prim}@c
@table @strong
@item Initargs
@t{:prim}
@end table
@end defvr
@defvr {Slot} prev-stage
@slotsubindex{prev-stage}@c
@table @strong
@item Initargs
@t{:prev-stage}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {cross-scope-mutate} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>CROSS-SCOPE-MUTATE condition}@c
@conditionsubindex{cross-scope-mutate}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-CRITICAL-ERROR condition, , @t{varjo-critical-error}} (condition)
@item Direct slots
@defvr {Slot} var-name
@slotsubindex{var-name}@c
@table @strong
@item Initargs
@t{:var-name}
@end table
@end defvr
@defvr {Slot} code
@slotsubindex{code}@c
@table @strong
@item Initargs
@t{:code}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {discard-not-in-fragment-stage} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>DISCARD-NOT-IN-FRAGMENT-STAGE condition}@c
@conditionsubindex{discard-not-in-fragment-stage}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} stage
@slotsubindex{stage}@c
@table @strong
@item Initargs
@t{:stage}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {discarded-for-conditional-test} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>DISCARDED-FOR-CONDITIONAL-TEST condition}@c
@conditionsubindex{discarded-for-conditional-test}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} kind
@slotsubindex{kind}@c
@table @strong
@item Initargs
@t{:kind}
@end table
@end defvr
@defvr {Slot} form
@slotsubindex{form}@c
@table @strong
@item Initargs
@t{:form}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {dup-name-in-let} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>DUP-NAME-IN-LET condition}@c
@conditionsubindex{dup-name-in-let}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} dup-name
@slotsubindex{dup-name}@c
@table @strong
@item Initargs
@t{:dup-name}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {dup-names-in-let} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>DUP-NAMES-IN-LET condition}@c
@conditionsubindex{dup-names-in-let}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} names
@slotsubindex{names}@c
@table @strong
@item Initargs
@t{:names}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {duplicate-name} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>DUPLICATE-NAME condition}@c
@conditionsubindex{duplicate-name}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} name
@slotsubindex{name}@c
@table @strong
@item Initargs
@t{:name}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {emit-not-in-geometry-stage} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>EMIT-NOT-IN-GEOMETRY-STAGE condition}@c
@conditionsubindex{emit-not-in-geometry-stage}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} stage
@slotsubindex{stage}@c
@table @strong
@item Initargs
@t{:stage}
@end table
@end defvr
@defvr {Slot} emit-set
@slotsubindex{emit-set}@c
@table @strong
@item Initargs
@t{:emit-set}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {emit-type-mismatch} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>EMIT-TYPE-MISMATCH condition}@c
@conditionsubindex{emit-type-mismatch}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} sets
@slotsubindex{sets}@c
@table @strong
@item Initargs
@t{:sets}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {empty-progn} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>EMPTY-PROGN condition}@c
@conditionsubindex{empty-progn}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-CRITICAL-ERROR condition, , @t{varjo-critical-error}} (condition)
@end table
@end deftp
@deftp {Condition} {env-parent-context-mismatch} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>ENV-PARENT-CONTEXT-MISMATCH condition}@c
@conditionsubindex{env-parent-context-mismatch}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} env-a
@slotsubindex{env-a}@c
@table @strong
@item Initargs
@t{:env-a}
@end table
@end defvr
@defvr {Slot} env-b
@slotsubindex{env-b}@c
@table @strong
@item Initargs
@t{:env-b}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {external-function-invalid-in-arg-types} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>EXTERNAL-FUNCTION-INVALID-IN-ARG-TYPES condition}@c
@conditionsubindex{external-function-invalid-in-arg-types}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-CRITICAL-ERROR condition, , @t{varjo-critical-error}} (condition)
@item Direct slots
@defvr {Slot} name
@slotsubindex{name}@c
@table @strong
@item Initargs
@t{:name}
@end table
@end defvr
@defvr {Slot} args
@slotsubindex{args}@c
@table @strong
@item Initargs
@t{:args}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {find-mutual-type-bug} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>FIND-MUTUAL-TYPE-BUG condition}@c
@conditionsubindex{find-mutual-type-bug}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} types
@slotsubindex{types}@c
@table @strong
@item Initargs
@t{:types}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {flow-id-must-be-specified-co} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>FLOW-ID-MUST-BE-SPECIFIED-CO condition}@c
@conditionsubindex{flow-id-must-be-specified-co}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-CRITICAL-ERROR condition, , @t{varjo-critical-error}} (condition)
@end table
@end deftp
@deftp {Condition} {flow-id-must-be-specified-vv} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>FLOW-ID-MUST-BE-SPECIFIED-VV condition}@c
@conditionsubindex{flow-id-must-be-specified-vv}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-CRITICAL-ERROR condition, , @t{varjo-critical-error}} (condition)
@end table
@end deftp
@deftp {Condition} {flow-ids-mandatory} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>FLOW-IDS-MANDATORY condition}@c
@conditionsubindex{flow-ids-mandatory}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-CRITICAL-ERROR condition, , @t{varjo-critical-error}} (condition)
@item Direct slots
@defvr {Slot} for
@slotsubindex{for}@c
@table @strong
@item Initargs
@t{:for}
@end table
@end defvr
@defvr {Slot} primary-type
@slotsubindex{primary-type}@c
@table @strong
@item Initargs
@t{:primary-type}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {for-loop-only-one-var} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>FOR-LOOP-ONLY-ONE-VAR condition}@c
@conditionsubindex{for-loop-only-one-var}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@end table
@end deftp
@deftp {Condition} {for-loop-simple-expression} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>FOR-LOOP-SIMPLE-EXPRESSION condition}@c
@conditionsubindex{for-loop-simple-expression}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@end table
@end deftp
@deftp {Condition} {fragment-integer-inputs-not-flat} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>FRAGMENT-INTEGER-INPUTS-NOT-FLAT condition}@c
@conditionsubindex{fragment-integer-inputs-not-flat}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} problem-types
@slotsubindex{problem-types}@c
@table @strong
@item Initargs
@t{:problem-types}
@end table
@end defvr
@defvr {Slot} inputs
@slotsubindex{inputs}@c
@table @strong
@item Initargs
@t{:inputs}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {funcall-of-special-operator} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>FUNCALL-OF-SPECIAL-OPERATOR condition}@c
@conditionsubindex{funcall-of-special-operator}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} code
@slotsubindex{code}@c
@table @strong
@item Initargs
@t{:code}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {function-with-no-return-type} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>FUNCTION-WITH-NO-RETURN-TYPE condition}@c
@conditionsubindex{function-with-no-return-type}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-CRITICAL-ERROR condition, , @t{varjo-critical-error}} (condition)
@item Direct slots
@defvr {Slot} func-name
@slotsubindex{func-name}@c
@table @strong
@item Initargs
@t{:func-name}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {global-uninitialized-var} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>GLOBAL-UNINITIALIZED-VAR condition}@c
@conditionsubindex{global-uninitialized-var}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} name
@slotsubindex{name}@c
@table @strong
@item Initargs
@t{:name}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {if-branch-type-mismatch} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>IF-BRANCH-TYPE-MISMATCH condition}@c
@conditionsubindex{if-branch-type-mismatch}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-CRITICAL-ERROR condition, , @t{varjo-critical-error}} (condition)
@item Direct slots
@defvr {Slot} then-obj
@slotsubindex{then-obj}@c
@table @strong
@item Initargs
@t{:then-obj}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {if-form-multiple-vals-mismatch} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>IF-FORM-MULTIPLE-VALS-MISMATCH condition}@c
@conditionsubindex{if-form-multiple-vals-mismatch}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} then-set
@slotsubindex{then-set}@c
@table @strong
@item Initargs
@t{:then-set}
@end table
@end defvr
@defvr {Slot} else-set
@slotsubindex{else-set}@c
@table @strong
@item Initargs
@t{:else-set}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {if-form-type-mismatch} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>IF-FORM-TYPE-MISMATCH condition}@c
@conditionsubindex{if-form-type-mismatch}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} test-form
@slotsubindex{test-form}@c
@table @strong
@item Initargs
@t{:test-form}
@end table
@end defvr
@defvr {Slot} then-form
@slotsubindex{then-form}@c
@table @strong
@item Initargs
@t{:then-form}
@end table
@end defvr
@defvr {Slot} then-type
@slotsubindex{then-type}@c
@table @strong
@item Initargs
@t{:then-type}
@end table
@end defvr
@defvr {Slot} else-form
@slotsubindex{else-form}@c
@table @strong
@item Initargs
@t{:else-form}
@end table
@end defvr
@defvr {Slot} else-type
@slotsubindex{else-type}@c
@table @strong
@item Initargs
@t{:else-type}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {if-test-type-mismatch} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>IF-TEST-TYPE-MISMATCH condition}@c
@conditionsubindex{if-test-type-mismatch}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-CRITICAL-ERROR condition, , @t{varjo-critical-error}} (condition)
@item Direct slots
@defvr {Slot} test-obj
@slotsubindex{test-obj}@c
@table @strong
@item Initargs
@t{:test-obj}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {illegal-&rest-in-args} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>ILLEGAL-&REST-IN-ARGS condition}@c
@conditionsubindex{illegal-&rest-in-args}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} func-name
@slotsubindex{func-name}@c
@table @strong
@item Initargs
@t{:func-name}
@end table
@end defvr
@defvr {Slot} arg-specs
@slotsubindex{arg-specs}@c
@table @strong
@item Initargs
@t{:arg-specs}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {illegal-&uniform-in-args} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>ILLEGAL-&UNIFORM-IN-ARGS condition}@c
@conditionsubindex{illegal-&uniform-in-args}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} func-name
@slotsubindex{func-name}@c
@table @strong
@item Initargs
@t{:func-name}
@end table
@end defvr
@defvr {Slot} arg-specs
@slotsubindex{arg-specs}@c
@table @strong
@item Initargs
@t{:arg-specs}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {illegal-implicit-args} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>ILLEGAL-IMPLICIT-ARGS condition}@c
@conditionsubindex{illegal-implicit-args}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-CRITICAL-ERROR condition, , @t{varjo-critical-error}} (condition)
@item Direct slots
@defvr {Slot} func-name
@slotsubindex{func-name}@c
@table @strong
@item Initargs
@t{:func-name}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {incorrect-stage-for-shared-variables} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>INCORRECT-STAGE-FOR-SHARED-VARIABLES condition}@c
@conditionsubindex{incorrect-stage-for-shared-variables}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} stage
@slotsubindex{stage}@c
@table @strong
@item Initargs
@t{:stage}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {inline-glsl-vertex-stage-not-supported} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>INLINE-GLSL-VERTEX-STAGE-NOT-SUPPORTED condition}@c
@conditionsubindex{inline-glsl-vertex-stage-not-supported}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@end table
@end deftp
@deftp {Condition} {invalid-arguments-for-special-op} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>INVALID-ARGUMENTS-FOR-SPECIAL-OP condition}@c
@conditionsubindex{invalid-arguments-for-special-op}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} name
@slotsubindex{name}@c
@table @strong
@item Initargs
@t{:name}
@end table
@end defvr
@defvr {Slot} args
@slotsubindex{args}@c
@table @strong
@item Initargs
@t{:args}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {invalid-coerce} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>INVALID-COERCE condition}@c
@conditionsubindex{invalid-coerce}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} src-type
@slotsubindex{src-type}@c
@table @strong
@item Initargs
@t{:src-type}
@end table
@end defvr
@defvr {Slot} dst-type
@slotsubindex{dst-type}@c
@table @strong
@item Initargs
@t{:dst-type}
@end table
@end defvr
@defvr {Slot} code
@slotsubindex{code}@c
@table @strong
@item Initargs
@t{:code}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {invalid-context-symbol} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>INVALID-CONTEXT-SYMBOL condition}@c
@conditionsubindex{invalid-context-symbol}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} context-symb
@slotsubindex{context-symb}@c
@table @strong
@item Initargs
@t{:context-symb}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {invalid-env-vars} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>INVALID-ENV-VARS condition}@c
@conditionsubindex{invalid-env-vars}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-CRITICAL-ERROR condition, , @t{varjo-critical-error}} (condition)
@item Direct slots
@defvr {Slot} vars
@slotsubindex{vars}@c
@table @strong
@item Initargs
@t{:vars}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {invalid-feedback-qualifier-form} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>INVALID-FEEDBACK-QUALIFIER-FORM condition}@c
@conditionsubindex{invalid-feedback-qualifier-form}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} form
@slotsubindex{form}@c
@table @strong
@item Initargs
@t{:form}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {invalid-flow-id-multi-return} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>INVALID-FLOW-ID-MULTI-RETURN condition}@c
@conditionsubindex{invalid-flow-id-multi-return}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-CRITICAL-ERROR condition, , @t{varjo-critical-error}} (condition)
@item Direct slots
@defvr {Slot} func-name
@slotsubindex{func-name}@c
@table @strong
@item Initargs
@t{:func-name}
@end table
@end defvr
@defvr {Slot} return-type
@slotsubindex{return-type}@c
@table @strong
@item Initargs
@t{:return-type}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {invalid-for-loop-type} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>INVALID-FOR-LOOP-TYPE condition}@c
@conditionsubindex{invalid-for-loop-type}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} decl-obj
@slotsubindex{decl-obj}@c
@table @strong
@item Initargs
@t{:decl-obj}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {invalid-form-list} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>INVALID-FORM-LIST condition}@c
@conditionsubindex{invalid-form-list}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} code
@slotsubindex{code}@c
@table @strong
@item Initargs
@t{:code}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {invalid-function-return-spec} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>INVALID-FUNCTION-RETURN-SPEC condition}@c
@conditionsubindex{invalid-function-return-spec}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} func
@slotsubindex{func}@c
@table @strong
@item Initargs
@t{:func}
@end table
@end defvr
@defvr {Slot} spec
@slotsubindex{spec}@c
@table @strong
@item Initargs
@t{:spec}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {invalid-glsl-numeric-literal} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>INVALID-GLSL-NUMERIC-LITERAL condition}@c
@conditionsubindex{invalid-glsl-numeric-literal}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} str
@slotsubindex{str}@c
@table @strong
@item Initargs
@t{:str}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {invalid-inline-glsl-stage-arg-layout} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>INVALID-INLINE-GLSL-STAGE-ARG-LAYOUT condition}@c
@conditionsubindex{invalid-inline-glsl-stage-arg-layout}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} arg
@slotsubindex{arg}@c
@table @strong
@item Initargs
@t{:arg}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {invalid-output-primitive-for-geometry} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>INVALID-OUTPUT-PRIMITIVE-FOR-GEOMETRY condition}@c
@conditionsubindex{invalid-output-primitive-for-geometry}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} kind
@slotsubindex{kind}@c
@table @strong
@item Initargs
@t{:kind}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {invalid-primitive-for-compute-stage} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>INVALID-PRIMITIVE-FOR-COMPUTE-STAGE condition}@c
@conditionsubindex{invalid-primitive-for-compute-stage}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} prim
@slotsubindex{prim}@c
@table @strong
@item Initargs
@t{:prim}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {invalid-primitive-for-geometry-stage} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>INVALID-PRIMITIVE-FOR-GEOMETRY-STAGE condition}@c
@conditionsubindex{invalid-primitive-for-geometry-stage}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} prim
@slotsubindex{prim}@c
@table @strong
@item Initargs
@t{:prim}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {invalid-shader-stage} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>INVALID-SHADER-STAGE condition}@c
@conditionsubindex{invalid-shader-stage}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} stage
@slotsubindex{stage}@c
@table @strong
@item Initargs
@t{:stage}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {invalid-special-function-arg-spec} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>INVALID-SPECIAL-FUNCTION-ARG-SPEC condition}@c
@conditionsubindex{invalid-special-function-arg-spec}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-CRITICAL-ERROR condition, , @t{varjo-critical-error}} (condition)
@item Direct slots
@defvr {Slot} name
@slotsubindex{name}@c
@table @strong
@item Initargs
@t{:name}
@end table
@end defvr
@defvr {Slot} spec
@slotsubindex{spec}@c
@table @strong
@item Initargs
@t{:spec}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {invalid-stage-kind} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>INVALID-STAGE-KIND condition}@c
@conditionsubindex{invalid-stage-kind}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} kind
@slotsubindex{kind}@c
@table @strong
@item Initargs
@t{:kind}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {invalid-symbol-macro-form} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>INVALID-SYMBOL-MACRO-FORM condition}@c
@conditionsubindex{invalid-symbol-macro-form}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} name
@slotsubindex{name}@c
@table @strong
@item Initargs
@t{:name}
@end table
@end defvr
@defvr {Slot} form
@slotsubindex{form}@c
@table @strong
@item Initargs
@t{:form}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {invalid-the-declaration} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>INVALID-THE-DECLARATION condition}@c
@conditionsubindex{invalid-the-declaration}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} form
@slotsubindex{form}@c
@table @strong
@item Initargs
@t{:form}
@end table
@end defvr
@defvr {Slot} declared-type
@slotsubindex{declared-type}@c
@table @strong
@item Initargs
@t{:declared-type}
@end table
@end defvr
@defvr {Slot} found-type
@slotsubindex{found-type}@c
@table @strong
@item Initargs
@t{:found-type}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {invalid-type-for-dummy-function} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>INVALID-TYPE-FOR-DUMMY-FUNCTION condition}@c
@conditionsubindex{invalid-type-for-dummy-function}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} type
@slotsubindex{type}@c
@table @strong
@item Initargs
@t{:type}
@end table
@end defvr
@defvr {Slot} form
@slotsubindex{form}@c
@table @strong
@item Initargs
@t{:form}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {invalid-v-defun-template} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>INVALID-V-DEFUN-TEMPLATE condition}@c
@conditionsubindex{invalid-v-defun-template}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} func-name
@slotsubindex{func-name}@c
@table @strong
@item Initargs
@t{:func-name}
@end table
@end defvr
@defvr {Slot} template
@slotsubindex{template}@c
@table @strong
@item Initargs
@t{:template}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {keyword-in-function-position} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>KEYWORD-IN-FUNCTION-POSITION condition}@c
@conditionsubindex{keyword-in-function-position}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} form
@slotsubindex{form}@c
@table @strong
@item Initargs
@t{:form}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {let-discarded} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>LET-DISCARDED condition}@c
@conditionsubindex{let-discarded}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} name
@slotsubindex{name}@c
@table @strong
@item Initargs
@t{:name}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {let-or} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>LET-OR condition}@c
@conditionsubindex{let-or}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} name
@slotsubindex{name}@c
@table @strong
@item Initargs
@t{:name}
@end table
@end defvr
@defvr {Slot} type
@slotsubindex{type}@c
@table @strong
@item Initargs
@t{:type}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {let-or-functions} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>LET-OR-FUNCTIONS condition}@c
@conditionsubindex{let-or-functions}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} name
@slotsubindex{name}@c
@table @strong
@item Initargs
@t{:name}
@end table
@end defvr
@defvr {Slot} type
@slotsubindex{type}@c
@table @strong
@item Initargs
@t{:type}
@end table
@end defvr
@defvr {Slot} form
@slotsubindex{form}@c
@table @strong
@item Initargs
@t{:form}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {let-returned} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>LET-RETURNED condition}@c
@conditionsubindex{let-returned}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} name
@slotsubindex{name}@c
@table @strong
@item Initargs
@t{:name}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {let-void} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>LET-VOID condition}@c
@conditionsubindex{let-void}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} name
@slotsubindex{name}@c
@table @strong
@item Initargs
@t{:name}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {loop-flow-analysis-failure} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>LOOP-FLOW-ANALYSIS-FAILURE condition}@c
@conditionsubindex{loop-flow-analysis-failure}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-CRITICAL-ERROR condition, , @t{varjo-critical-error}} (condition)
@end table
@end deftp
@deftp {Condition} {loop-will-never-halt} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>LOOP-WILL-NEVER-HALT condition}@c
@conditionsubindex{loop-will-never-halt}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} test-code
@slotsubindex{test-code}@c
@table @strong
@item Initargs
@t{:test-code}
@end table
@end defvr
@defvr {Slot} test-obj
@slotsubindex{test-obj}@c
@table @strong
@item Initargs
@t{:test-obj}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {make-array-cant-cast-args} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>MAKE-ARRAY-CANT-CAST-ARGS condition}@c
@conditionsubindex{make-array-cant-cast-args}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} element-type
@slotsubindex{element-type}@c
@table @strong
@item Initargs
@t{:element-type}
@end table
@end defvr
@defvr {Slot} initial-contents
@slotsubindex{initial-contents}@c
@table @strong
@item Initargs
@t{:initial-contents}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {make-array-cant-establish-default-value} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>MAKE-ARRAY-CANT-ESTABLISH-DEFAULT-VALUE condition}@c
@conditionsubindex{make-array-cant-establish-default-value}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} element-type
@slotsubindex{element-type}@c
@table @strong
@item Initargs
@t{:element-type}
@end table
@end defvr
@defvr {Slot} initial-contents
@slotsubindex{initial-contents}@c
@table @strong
@item Initargs
@t{:initial-contents}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {make-array-conflicting-args} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>MAKE-ARRAY-CONFLICTING-ARGS condition}@c
@conditionsubindex{make-array-conflicting-args}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} args
@slotsubindex{args}@c
@table @strong
@item Initargs
@t{:args}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {make-array-conflicting-lengths} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>MAKE-ARRAY-CONFLICTING-LENGTHS condition}@c
@conditionsubindex{make-array-conflicting-lengths}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} dims
@slotsubindex{dims}@c
@table @strong
@item Initargs
@t{:dims}
@end table
@end defvr
@defvr {Slot} initial-contents
@slotsubindex{initial-contents}@c
@table @strong
@item Initargs
@t{:initial-contents}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {make-array-mandatory-args} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>MAKE-ARRAY-MANDATORY-ARGS condition}@c
@conditionsubindex{make-array-mandatory-args}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} args
@slotsubindex{args}@c
@table @strong
@item Initargs
@t{:args}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {merge-env-func-scope-mismatch} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>MERGE-ENV-FUNC-SCOPE-MISMATCH condition}@c
@conditionsubindex{merge-env-func-scope-mismatch}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} env-a
@slotsubindex{env-a}@c
@table @strong
@item Initargs
@t{:env-a}
@end table
@end defvr
@defvr {Slot} env-b
@slotsubindex{env-b}@c
@table @strong
@item Initargs
@t{:env-b}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {merge-env-parent-mismatch} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>MERGE-ENV-PARENT-MISMATCH condition}@c
@conditionsubindex{merge-env-parent-mismatch}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} env-a
@slotsubindex{env-a}@c
@table @strong
@item Initargs
@t{:env-a}
@end table
@end defvr
@defvr {Slot} env-b
@slotsubindex{env-b}@c
@table @strong
@item Initargs
@t{:env-b}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {multi-dimensional-array} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>MULTI-DIMENSIONAL-ARRAY condition}@c
@conditionsubindex{multi-dimensional-array}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} dimensions
@slotsubindex{dimensions}@c
@table @strong
@item Initargs
@t{:dimensions}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {multi-func-stemcells} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>MULTI-FUNC-STEMCELLS condition}@c
@conditionsubindex{multi-func-stemcells}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} func-name
@slotsubindex{func-name}@c
@table @strong
@item Initargs
@t{:func-name}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {multi-val-bind-mismatch} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>MULTI-VAL-BIND-MISMATCH condition}@c
@conditionsubindex{multi-val-bind-mismatch}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} bindings
@slotsubindex{bindings}@c
@table @strong
@item Initargs
@t{:bindings}
@end table
@end defvr
@defvr {Slot} val-form
@slotsubindex{val-form}@c
@table @strong
@item Initargs
@t{:val-form}
@end table
@end defvr
@defvr {Slot} return-set
@slotsubindex{return-set}@c
@table @strong
@item Initargs
@t{:return-set}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {name-clash} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>NAME-CLASH condition}@c
@conditionsubindex{name-clash}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-CRITICAL-ERROR condition, , @t{varjo-critical-error}} (condition)
@item Direct slots
@defvr {Slot} lisp
@slotsubindex{lisp}@c
@table @strong
@item Initargs
@t{:lisp}
@end table
@end defvr
@defvr {Slot} glsl
@slotsubindex{glsl}@c
@table @strong
@item Initargs
@t{:glsl}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {name-mismatch} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>NAME-MISMATCH condition}@c
@conditionsubindex{name-mismatch}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-CRITICAL-ERROR condition, , @t{varjo-critical-error}} (condition)
@item Direct slots
@defvr {Slot} lisp
@slotsubindex{lisp}@c
@table @strong
@item Initargs
@t{:lisp}
@end table
@end defvr
@defvr {Slot} glsl
@slotsubindex{glsl}@c
@table @strong
@item Initargs
@t{:glsl}
@end table
@end defvr
@defvr {Slot} taken
@slotsubindex{taken}@c
@table @strong
@item Initargs
@t{:taken}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {name-unsuitable} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>NAME-UNSUITABLE condition}@c
@conditionsubindex{name-unsuitable}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} name
@slotsubindex{name}@c
@table @strong
@item Initargs
@t{:name}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {nil-return-set} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>NIL-RETURN-SET condition}@c
@conditionsubindex{nil-return-set}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} form
@slotsubindex{form}@c
@table @strong
@item Initargs
@t{:form}
@end table
@end defvr
@defvr {Slot} possible-set
@slotsubindex{possible-set}@c
@table @strong
@item Initargs
@t{:possible-set}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {no-args-remove-in-unrep-inlining} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>NO-ARGS-REMOVE-IN-UNREP-INLINING condition}@c
@conditionsubindex{no-args-remove-in-unrep-inlining}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} func
@slotsubindex{func}@c
@table @strong
@item Initargs
@t{:func}
@end table
@end defvr
@defvr {Slot} args
@slotsubindex{args}@c
@table @strong
@item Initargs
@t{:args}
@end table
@end defvr
@defvr {Slot} args-code
@slotsubindex{args-code}@c
@table @strong
@item Initargs
@t{:args-code}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {no-function-returns} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>NO-FUNCTION-RETURNS condition}@c
@conditionsubindex{no-function-returns}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} name
@slotsubindex{name}@c
@table @strong
@item Initargs
@t{:name}
@end table
@end defvr
@defvr {Slot} return-set
@slotsubindex{return-set}@c
@table @strong
@item Initargs
@t{:return-set}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {no-valid-function} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>NO-VALID-FUNCTION condition}@c
@conditionsubindex{no-valid-function}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} name
@slotsubindex{name}@c
@table @strong
@item Initargs
@t{:name}
@end table
@end defvr
@defvr {Slot} types
@slotsubindex{types}@c
@table @strong
@item Initargs
@t{:types}
@end table
@end defvr
@defvr {Slot} form
@slotsubindex{form}@c
@table @strong
@item Initargs
@t{:form}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {no-version-in-context} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>NO-VERSION-IN-CONTEXT condition}@c
@conditionsubindex{no-version-in-context}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} env
@slotsubindex{env}@c
@table @strong
@item Initargs
@t{:env}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {non-place-assign} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>NON-PLACE-ASSIGN condition}@c
@conditionsubindex{non-place-assign}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} glsl-code
@slotsubindex{glsl-code}@c
@table @strong
@item Initargs
@t{:glsl-code}
@end table
@end defvr
@defvr {Slot} lisp-code
@slotsubindex{lisp-code}@c
@table @strong
@item Initargs
@t{:lisp-code}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {none-type-in-out-vars} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>NONE-TYPE-IN-OUT-VARS condition}@c
@conditionsubindex{none-type-in-out-vars}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} glsl-name
@slotsubindex{glsl-name}@c
@table @strong
@item Initargs
@t{:glsl-name}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {not-core-type-error} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>NOT-CORE-TYPE-ERROR condition}@c
@conditionsubindex{not-core-type-error}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} type-name
@slotsubindex{type-name}@c
@table @strong
@item Initargs
@t{:type-name}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {opaque-data-found} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>OPAQUE-DATA-FOUND condition}@c
@conditionsubindex{opaque-data-found}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} arg-name
@slotsubindex{arg-name}@c
@table @strong
@item Initargs
@t{:arg-name}
@end table
@end defvr
@defvr {Slot} type-spec
@slotsubindex{type-spec}@c
@table @strong
@item Initargs
@t{:type-spec}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {out-var-name-taken} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>OUT-VAR-NAME-TAKEN condition}@c
@conditionsubindex{out-var-name-taken}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} out-var-name
@slotsubindex{out-var-name}@c
@table @strong
@item Initargs
@t{:out-var-name}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {out-var-type-mismatch} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>OUT-VAR-TYPE-MISMATCH condition}@c
@conditionsubindex{out-var-type-mismatch}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} var-name
@slotsubindex{var-name}@c
@table @strong
@item Initargs
@t{:var-name}
@end table
@end defvr
@defvr {Slot} var-types
@slotsubindex{var-types}@c
@table @strong
@item Initargs
@t{:var-types}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {primitive-in-context} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>PRIMITIVE-IN-CONTEXT condition}@c
@conditionsubindex{primitive-in-context}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} context
@slotsubindex{context}@c
@table @strong
@item Initargs
@t{:context}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {primitives-dont-match} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>PRIMITIVES-DONT-MATCH condition}@c
@conditionsubindex{primitives-dont-match}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} out-stage
@slotsubindex{out-stage}@c
@table @strong
@item Initargs
@t{:out-stage}
@end table
@end defvr
@defvr {Slot} out
@slotsubindex{out}@c
@table @strong
@item Initargs
@t{:out}
@end table
@end defvr
@defvr {Slot} in-stage
@slotsubindex{in-stage}@c
@table @strong
@item Initargs
@t{:in-stage}
@end table
@end defvr
@defvr {Slot} in
@slotsubindex{in}@c
@table @strong
@item Initargs
@t{:in}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {problem-with-the-compiler} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>PROBLEM-WITH-THE-COMPILER condition}@c
@conditionsubindex{problem-with-the-compiler}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} target
@slotsubindex{target}@c
@table @strong
@item Initargs
@t{:target}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {return-set-mismatch} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>RETURN-SET-MISMATCH condition}@c
@conditionsubindex{return-set-mismatch}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} form
@slotsubindex{form}@c
@table @strong
@item Initargs
@t{:form}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {return-type-mismatch} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>RETURN-TYPE-MISMATCH condition}@c
@conditionsubindex{return-type-mismatch}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} sets
@slotsubindex{sets}@c
@table @strong
@item Initargs
@t{:sets}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {returns-in-geometry-stage} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>RETURNS-IN-GEOMETRY-STAGE condition}@c
@conditionsubindex{returns-in-geometry-stage}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} return-set
@slotsubindex{return-set}@c
@table @strong
@item Initargs
@t{:return-set}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {rolling-translate-invalid-stage} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>ROLLING-TRANSLATE-INVALID-STAGE condition}@c
@conditionsubindex{rolling-translate-invalid-stage}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} invalid
@slotsubindex{invalid}@c
@table @strong
@item Initargs
@t{:invalid}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {setq-readonly} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>SETQ-READONLY condition}@c
@conditionsubindex{setq-readonly}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} var-name
@slotsubindex{var-name}@c
@table @strong
@item Initargs
@t{:var-name}
@end table
@end defvr
@defvr {Slot} code
@slotsubindex{code}@c
@table @strong
@item Initargs
@t{:code}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {setq-type-match} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>SETQ-TYPE-MATCH condition}@c
@conditionsubindex{setq-type-match}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-CRITICAL-ERROR condition, , @t{varjo-critical-error}} (condition)
@item Direct slots
@defvr {Slot} var-name
@slotsubindex{var-name}@c
@table @strong
@item Initargs
@t{:var-name}
@end table
@end defvr
@defvr {Slot} old-value
@slotsubindex{old-value}@c
@table @strong
@item Initargs
@t{:old-value}
@end table
@end defvr
@defvr {Slot} new-value
@slotsubindex{new-value}@c
@table @strong
@item Initargs
@t{:new-value}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {shared-opaque} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>SHARED-OPAQUE condition}@c
@conditionsubindex{shared-opaque}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} name
@slotsubindex{name}@c
@table @strong
@item Initargs
@t{:name}
@end table
@end defvr
@defvr {Slot} type
@slotsubindex{type}@c
@table @strong
@item Initargs
@t{:type}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {should-be-constant} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>SHOULD-BE-CONSTANT condition}@c
@conditionsubindex{should-be-constant}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} thing
@slotsubindex{thing}@c
@table @strong
@item Initargs
@t{:thing}
@end table
@end defvr
@defvr {Slot} val
@slotsubindex{val}@c
@table @strong
@item Initargs
@t{:val}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {should-be-quoted} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>SHOULD-BE-QUOTED condition}@c
@conditionsubindex{should-be-quoted}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} thing
@slotsubindex{thing}@c
@table @strong
@item Initargs
@t{:thing}
@end table
@end defvr
@defvr {Slot} val
@slotsubindex{val}@c
@table @strong
@item Initargs
@t{:val}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {slot-not-found} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>SLOT-NOT-FOUND condition}@c
@conditionsubindex{slot-not-found}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} type
@slotsubindex{type}@c
@table @strong
@item Initargs
@t{:type}
@end table
@end defvr
@defvr {Slot} slot-name
@slotsubindex{slot-name}@c
@table @strong
@item Initargs
@t{:slot-name}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {slot-value-on-non-struct} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>SLOT-VALUE-ON-NON-STRUCT condition}@c
@conditionsubindex{slot-value-on-non-struct}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} type
@slotsubindex{type}@c
@table @strong
@item Initargs
@t{:type}
@end table
@end defvr
@defvr {Slot} slot-name
@slotsubindex{slot-name}@c
@table @strong
@item Initargs
@t{:slot-name}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {stage-in-context} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>STAGE-IN-CONTEXT condition}@c
@conditionsubindex{stage-in-context}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} context
@slotsubindex{context}@c
@table @strong
@item Initargs
@t{:context}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {stage-must-have-local-size-declaration} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>STAGE-MUST-HAVE-LOCAL-SIZE-DECLARATION condition}@c
@conditionsubindex{stage-must-have-local-size-declaration}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} stage
@slotsubindex{stage}@c
@table @strong
@item Initargs
@t{:stage}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {stage-must-have-output-patch-declaration} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>STAGE-MUST-HAVE-OUTPUT-PATCH-DECLARATION condition}@c
@conditionsubindex{stage-must-have-output-patch-declaration}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} stage
@slotsubindex{stage}@c
@table @strong
@item Initargs
@t{:stage}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {stage-must-have-output-prim-declaration} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>STAGE-MUST-HAVE-OUTPUT-PRIM-DECLARATION condition}@c
@conditionsubindex{stage-must-have-output-prim-declaration}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} stage
@slotsubindex{stage}@c
@table @strong
@item Initargs
@t{:stage}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {stage-order-error} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>STAGE-ORDER-ERROR condition}@c
@conditionsubindex{stage-order-error}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} stage-type
@slotsubindex{stage-type}@c
@table @strong
@item Initargs
@t{:stage-type}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {stage-primary-type-mismatch} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>STAGE-PRIMARY-TYPE-MISMATCH condition}@c
@conditionsubindex{stage-primary-type-mismatch}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} stage-kind
@slotsubindex{stage-kind}@c
@table @strong
@item Initargs
@t{:stage-kind}
@end table
@end defvr
@defvr {Slot} type-found
@slotsubindex{type-found}@c
@table @strong
@item Initargs
@t{:type-found}
@end table
@end defvr
@defvr {Slot} type-expected
@slotsubindex{type-expected}@c
@table @strong
@item Initargs
@t{:type-expected}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {struct-cannot-hold-ephemeral-types} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>STRUCT-CANNOT-HOLD-EPHEMERAL-TYPES condition}@c
@conditionsubindex{struct-cannot-hold-ephemeral-types}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} name
@slotsubindex{name}@c
@table @strong
@item Initargs
@t{:name}
@end table
@end defvr
@defvr {Slot} slots
@slotsubindex{slots}@c
@table @strong
@item Initargs
@t{:slots}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {switch-type-error} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>SWITCH-TYPE-ERROR condition}@c
@conditionsubindex{switch-type-error}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} form
@slotsubindex{form}@c
@table @strong
@item Initargs
@t{:form}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {swizzle-keyword} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>SWIZZLE-KEYWORD condition}@c
@conditionsubindex{swizzle-keyword}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} item
@slotsubindex{item}@c
@table @strong
@item Initargs
@t{:item}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {symbol-unidentified} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>SYMBOL-UNIDENTIFIED condition}@c
@conditionsubindex{symbol-unidentified}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-CRITICAL-ERROR condition, , @t{varjo-critical-error}} (condition)
@item Direct slots
@defvr {Slot} sym
@slotsubindex{sym}@c
@table @strong
@item Initargs
@t{:sym}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {tessellation-control-expects-patches} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>TESSELLATION-CONTROL-EXPECTS-PATCHES condition}@c
@conditionsubindex{tessellation-control-expects-patches}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} primitive
@slotsubindex{primitive}@c
@table @strong
@item Initargs
@t{:primitive}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {tessellation-evaluation-invalid-primitive} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>TESSELLATION-EVALUATION-INVALID-PRIMITIVE condition}@c
@conditionsubindex{tessellation-evaluation-invalid-primitive}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} primitive
@slotsubindex{primitive}@c
@table @strong
@item Initargs
@t{:primitive}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {test-translate-failed} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>TEST-TRANSLATE-FAILED condition}@c
@conditionsubindex{test-translate-failed}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} grouped-errors
@slotsubindex{grouped-errors}@c
@table @strong
@item Initargs
@t{:grouped-errors}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {transform-feedback-incorrect-stage} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>TRANSFORM-FEEDBACK-INCORRECT-STAGE condition}@c
@conditionsubindex{transform-feedback-incorrect-stage}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} stage
@slotsubindex{stage}@c
@table @strong
@item Initargs
@t{:stage}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {ubo-ssbo-type-limitation} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>UBO-SSBO-TYPE-LIMITATION condition}@c
@conditionsubindex{ubo-ssbo-type-limitation}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} type
@slotsubindex{type}@c
@table @strong
@item Initargs
@t{:type}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {unable-to-resolve-func-type} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>UNABLE-TO-RESOLVE-FUNC-TYPE condition}@c
@conditionsubindex{unable-to-resolve-func-type}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} func-name
@slotsubindex{func-name}@c
@table @strong
@item Initargs
@t{:func-name}
@end table
@end defvr
@defvr {Slot} args
@slotsubindex{args}@c
@table @strong
@item Initargs
@t{:args}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {uniform-in-sfunc} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>UNIFORM-IN-SFUNC condition}@c
@conditionsubindex{uniform-in-sfunc}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} func-name
@slotsubindex{func-name}@c
@table @strong
@item Initargs
@t{:func-name}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {uniform-ubo-and-ssbo} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>UNIFORM-UBO-AND-SSBO condition}@c
@conditionsubindex{uniform-ubo-and-ssbo}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} arg
@slotsubindex{arg}@c
@table @strong
@item Initargs
@t{:arg}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {uninitialized-var} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>UNINITIALIZED-VAR condition}@c
@conditionsubindex{uninitialized-var}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} name
@slotsubindex{name}@c
@table @strong
@item Initargs
@t{:name}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {unknown-alt-type-name} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>UNKNOWN-ALT-TYPE-NAME condition}@c
@conditionsubindex{unknown-alt-type-name}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} name
@slotsubindex{name}@c
@table @strong
@item Initargs
@t{:name}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {unknown-layout-specifier} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>UNKNOWN-LAYOUT-SPECIFIER condition}@c
@conditionsubindex{unknown-layout-specifier}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} target-kind
@slotsubindex{target-kind}@c
@table @strong
@item Initargs
@t{:target-kind}
@end table
@end defvr
@defvr {Slot} name
@slotsubindex{name}@c
@table @strong
@item Initargs
@t{:name}
@end table
@end defvr
@defvr {Slot} specifier
@slotsubindex{specifier}@c
@table @strong
@item Initargs
@t{:specifier}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {unknown-type-spec} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>UNKNOWN-TYPE-SPEC condition}@c
@conditionsubindex{unknown-type-spec}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} type-spec
@slotsubindex{type-spec}@c
@table @strong
@item Initargs
@t{:type-spec}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {unknown-variable-type} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>UNKNOWN-VARIABLE-TYPE condition}@c
@conditionsubindex{unknown-variable-type}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} name
@slotsubindex{name}@c
@table @strong
@item Initargs
@t{:name}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {user-func-invalid-x} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>USER-FUNC-INVALID-X condition}@c
@conditionsubindex{user-func-invalid-x}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} kind
@slotsubindex{kind}@c
@table @strong
@item Initargs
@t{:kind}
@end table
@end defvr
@defvr {Slot} name
@slotsubindex{name}@c
@table @strong
@item Initargs
@t{:name}
@end table
@end defvr
@defvr {Slot} args
@slotsubindex{args}@c
@table @strong
@item Initargs
@t{:args}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {v-def-template-arg-mismatch} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>V-DEF-TEMPLATE-ARG-MISMATCH condition}@c
@conditionsubindex{v-def-template-arg-mismatch}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} args
@slotsubindex{args}@c
@table @strong
@item Initargs
@t{:args}
@end table
@end defvr
@defvr {Slot} types
@slotsubindex{types}@c
@table @strong
@item Initargs
@t{:types}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {v-deprecated} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>V-DEPRECATED condition}@c
@conditionsubindex{v-deprecated}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@t{style-warning} (condition)
@item Direct slots
@defvr {Slot} old
@slotsubindex{old}@c
@table @strong
@item Initargs
@t{:old}
@end table
@end defvr
@defvr {Slot} new
@slotsubindex{new}@c
@table @strong
@item Initargs
@t{:new}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {values-safe-wasnt-safe} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>VALUES-SAFE-WASNT-SAFE condition}@c
@conditionsubindex{values-safe-wasnt-safe}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-CRITICAL-ERROR condition, , @t{varjo-critical-error}} (condition)
@item Direct slots
@defvr {Slot} args
@slotsubindex{args}@c
@table @strong
@item Initargs
@t{:args}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {var-type-mismatch} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>VAR-TYPE-MISMATCH condition}@c
@conditionsubindex{var-type-mismatch}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} var-type
@slotsubindex{var-type}@c
@table @strong
@item Initargs
@t{:var-type}
@end table
@end defvr
@defvr {Slot} code-obj
@slotsubindex{code-obj}@c
@table @strong
@item Initargs
@t{:code-obj}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {void-type-for-conditional-test} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>VOID-TYPE-FOR-CONDITIONAL-TEST condition}@c
@conditionsubindex{void-type-for-conditional-test}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} kind
@slotsubindex{kind}@c
@table @strong
@item Initargs
@t{:kind}
@end table
@end defvr
@defvr {Slot} form
@slotsubindex{form}@c
@table @strong
@item Initargs
@t{:form}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {with-fresh-env-scope-missing-env} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>WITH-FRESH-ENV-SCOPE-MISSING-ENV condition}@c
@conditionsubindex{with-fresh-env-scope-missing-env}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@end table
@end deftp
" :AFTER-MENU-CONTENTS NIL) :PREVIOUS #13# :UP #1# :CHILDREN NIL :BEFORE-MENU-CONTENTS "@deffn {Generic Function} {%glsl-decl} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>%GLSL-DECL generic function}@c
@genericsubindex{%glsl-decl}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {%glsl-decl} (UNIFORM-VARIABLE @t{uniform-variable})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>%GLSL-DECL VARJO<dot>INTERNALS<colon><colon>UNIFORM-VARIABLE method}@c
@methodsubindex{%glsl-decl}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {%uniform-name} THING ENV
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>%UNIFORM-NAME generic function}@c
@genericsubindex{%uniform-name}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {%uniform-name} (VAL @t{v-value}) (ENV @t{extended-environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>%UNIFORM-NAME VARJO<dot>INTERNALS<colon><colon>V-VALUE VARJO<dot>INTERNALS<colon><colon>EXTENDED-ENVIRONMENT method}@c
@methodsubindex{%uniform-name}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>api/environment<dot>lisp file, , @t{src/varjo.api/environment.lisp}} (file)
@end table
@end deffn
@deffn {Method} {%uniform-name} (COMPILED @t{compiled}) (ENV @t{extended-environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>%UNIFORM-NAME VARJO<dot>INTERNALS<colon><colon>COMPILED VARJO<dot>INTERNALS<colon><colon>EXTENDED-ENVIRONMENT method}@c
@methodsubindex{%uniform-name}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>api/environment<dot>lisp file, , @t{src/varjo.api/environment.lisp}} (file)
@end table
@end deffn
@deffn {Method} {%uniform-name} (ID @t{flow-identifier}) (ENV @t{extended-environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>%UNIFORM-NAME VARJO<dot>INTERNALS<colon><colon>FLOW-IDENTIFIER VARJO<dot>INTERNALS<colon><colon>EXTENDED-ENVIRONMENT method}@c
@methodsubindex{%uniform-name}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>api/environment<dot>lisp file, , @t{src/varjo.api/environment.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {add-equivalent-name} EXISTING-NAME NEW-NAME
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ADD-EQUIVALENT-NAME generic function}@c
@genericsubindex{add-equivalent-name}@c

`add-equivalent-name`
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {add-equivalent-name} EXISTING-NAME NEW-NAME
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ADD-EQUIVALENT-NAME COMMON-LISP<colon><colon>T COMMON-LISP<colon><colon>T method}@c
@methodsubindex{add-equivalent-name}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/environment<dot>lisp file, , @t{src/varjo.internals/environment.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {add-external-function} NAME IN-ARGS UNIFORMS CODE &optional VALID-GLSL-VERSIONS
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ADD-EXTERNAL-FUNCTION generic function}@c
@genericsubindex{add-external-function}@c

`add-external-function` is a function that takes the following:@*

- a name as a symbol@*
- a list of input parameters declartions in the form:@*
  `(,name ,type-spec ,@@qualifiers)`@*
- a list of uniforms in the form:@*
  `(,name ,type-spec ,@@qualifiers)`@*
- a list of forms that make up the body of the function@*
- [optional] as list of glsl versions this function is valid for.@*
             nil means it is valid for all versions@*

After doing basic checks on the arguments the function will be added to the
'external function registry' such that it call be called from any future
compilation task (assuming appropriate glsl versions).@*

Please note that this function does not attempt to validate the body of the
function as doing so would require knowledge of the context in which it is
used. If you need to test that the function could be valid, refer to the
`test-translate-function-split-details` function.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {add-external-function} NAME IN-ARGS UNIFORMS CODE &optional VALID-GLSL-VERSIONS
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ADD-EXTERNAL-FUNCTION COMMON-LISP<colon><colon>T COMMON-LISP<colon><colon>T COMMON-LISP<colon><colon>T COMMON-LISP<colon><colon>T method}@c
@methodsubindex{add-external-function}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/external-functions<dot>lisp file, , @t{src/varjo.internals/external-functions.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {add-form-binding} FUNC/MACRO ENV
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ADD-FORM-BINDING generic function}@c
@genericsubindex{add-form-binding}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {add-form-binding} ANYTHING (ENV @t{base-environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ADD-FORM-BINDING COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>BASE-ENVIRONMENT method}@c
@methodsubindex{add-form-binding}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/environment<dot>lisp file, , @t{src/varjo.internals/environment.lisp}} (file)
@end table
@end deffn
@deffn {Method} {add-form-binding} (MACRO @t{v-regular-macro}) (ENV @t{environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ADD-FORM-BINDING VARJO<dot>INTERNALS<colon><colon>V-REGULAR-MACRO VARJO<dot>INTERNALS<colon><colon>ENVIRONMENT method}@c
@methodsubindex{add-form-binding}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/environment<dot>lisp file, , @t{src/varjo.internals/environment.lisp}} (file)
@end table
@end deffn
@deffn {Method} {add-form-binding} (FUNC @t{v-function}) (ENV @t{environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ADD-FORM-BINDING VARJO<dot>INTERNALS<colon><colon>V-FUNCTION VARJO<dot>INTERNALS<colon><colon>ENVIRONMENT method}@c
@methodsubindex{add-form-binding}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/environment<dot>lisp file, , @t{src/varjo.internals/environment.lisp}} (file)
@end table
@end deffn
@deffn {Method} {add-form-binding} (COMPILED-FUNC @t{compiled-function-result}) (ENV @t{environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ADD-FORM-BINDING VARJO<dot>INTERNALS<colon><colon>COMPILED-FUNCTION-RESULT VARJO<dot>INTERNALS<colon><colon>ENVIRONMENT method}@c
@methodsubindex{add-form-binding}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/environment<dot>lisp file, , @t{src/varjo.internals/environment.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {add-form-bindings} FUNCS/MACROS ENV
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ADD-FORM-BINDINGS generic function}@c
@genericsubindex{add-form-bindings}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {add-form-bindings} (FUNCS @t{list}) (ENV @t{environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ADD-FORM-BINDINGS COMMON-LISP<colon><colon>LIST VARJO<dot>INTERNALS<colon><colon>ENVIRONMENT method}@c
@methodsubindex{add-form-bindings}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/environment<dot>lisp file, , @t{src/varjo.internals/environment.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {add-global-form-binding} FUNC/MACRO
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ADD-GLOBAL-FORM-BINDING generic function}@c
@genericsubindex{add-global-form-binding}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {add-global-form-binding} (FUNC-OBJ @t{v-function})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ADD-GLOBAL-FORM-BINDING VARJO<dot>INTERNALS<colon><colon>V-FUNCTION method}@c
@methodsubindex{add-global-form-binding}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/environment<dot>lisp file, , @t{src/varjo.internals/environment.lisp}} (file)
@end table
@end deffn
@deffn {Method} {add-global-form-binding} (MACRO-OBJ @t{v-regular-macro})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ADD-GLOBAL-FORM-BINDING VARJO<dot>INTERNALS<colon><colon>V-REGULAR-MACRO method}@c
@methodsubindex{add-global-form-binding}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/environment<dot>lisp file, , @t{src/varjo.internals/environment.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {add-lisp-form-as-uniform} FORM TYPE-SPEC ENV &optional NAME
@anchor{go to the VARJO<dot>API<colon><colon>ADD-LISP-FORM-AS-UNIFORM generic function}@c
@genericsubindex{add-lisp-form-as-uniform}@c

`add-lisp-form-as-uniform` is an intersting beast. Its goal it to make it easy
to inject uniforms into the resulting GLSL which will be populated by the
result of a specific Common Lisp form.@*

You provide:@*
- a value which will be assumed to be a valid Common lisp form@*
- a Vari `type-spec` which will be the type of the uniform@*
- a Varjo environment object, which must have been obtained from the `
  &environment` paramater in a Vari macro.@*
- an optional name@*

Varjo will then add a uniform (as it would be using uniform list in
`make-stage`). You can then use the symbol provided as the 'name' argument
in your Vari code.@*

When the compilation completes you can query the `compiled-stage` object using
the `implicit-uniforms` function which will return a list of
`implicit-uniform-variable` objects which can be queried using the following
functions:@*

- `name` - the vari name of the uniform@*
- `glsl-name` - returns a string with the glsl name of the uniform variable
- `v-type-of` - Returns the Varjo type object@*
- `cpu-side-transform` - this is how you obtain the Common Lisp code that
                         was passed to `add-lisp-form-as-uniform`
@table @strong
@item Package
@ref{go to the VARJO<dot>API package, , @t{varjo.api}}
@item Source
@ref{go to the varjo/src/varjo<dot>api/environment<dot>lisp file, , @t{src/varjo.api/environment.lisp}} (file)
@item Methods
@deffn {Method} {add-lisp-form-as-uniform} FORM TYPE-SPEC (ENV @t{extended-environment}) &optional NAME
@anchor{go to the VARJO<dot>API<colon><colon>ADD-LISP-FORM-AS-UNIFORM COMMON-LISP<colon><colon>T COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>EXTENDED-ENVIRONMENT method}@c
@methodsubindex{add-lisp-form-as-uniform}@c
@end deffn
@end table
@end deffn
@deffn {Generic Function} {add-symbol-binding} VAR-NAME VAL ENV
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ADD-SYMBOL-BINDING generic function}@c
@genericsubindex{add-symbol-binding}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {add-symbol-binding} NAME (MACRO @t{v-symbol-macro}) (ENV @t{environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ADD-SYMBOL-BINDING COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>V-SYMBOL-MACRO VARJO<dot>INTERNALS<colon><colon>ENVIRONMENT method}@c
@methodsubindex{add-symbol-binding}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/environment<dot>lisp file, , @t{src/varjo.internals/environment.lisp}} (file)
@end table
@end deffn
@deffn {Method} {add-symbol-binding} NAME (VAL @t{v-value}) (ENV @t{environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ADD-SYMBOL-BINDING COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>V-VALUE VARJO<dot>INTERNALS<colon><colon>ENVIRONMENT method}@c
@methodsubindex{add-symbol-binding}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/environment<dot>lisp file, , @t{src/varjo.internals/environment.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {all-bound-symbols} ENV
@anchor{go to the VARJO<dot>API<colon><colon>ALL-BOUND-SYMBOLS generic function}@c
@genericsubindex{all-bound-symbols}@c

When given an `environment` object from a Vari macro `all-bound-symbols`
returns a list of all the symbols currently bound.
@table @strong
@item Package
@ref{go to the VARJO<dot>API package, , @t{varjo.api}}
@item Source
@ref{go to the varjo/src/varjo<dot>api/environment<dot>lisp file, , @t{src/varjo.api/environment.lisp}} (file)
@item Methods
@deffn {Method} {all-bound-symbols} (ENV @t{extended-environment})
@anchor{go to the VARJO<dot>API<colon><colon>ALL-BOUND-SYMBOLS VARJO<dot>INTERNALS<colon><colon>EXTENDED-ENVIRONMENT method}@c
@methodsubindex{all-bound-symbols}@c
@end deffn
@end table
@end deffn
@deffn {Generic Function} {all-functions} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ALL-FUNCTIONS generic function}@c
@genericsubindex{all-functions}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Writer
@ref{go to the VARJO<dot>INTERNALS<colon><colon>(SETF ALL-FUNCTIONS) generic function, , @t{(setf all-functions)}} (generic function)
@item Methods
@deffn {Method} {all-functions} (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ALL-FUNCTIONS VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{all-functions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {(setf all-functions)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF ALL-FUNCTIONS) generic function}@c
@genericsubindex{(setf all-functions)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Reader
@ref{go to the VARJO<dot>INTERNALS<colon><colon>ALL-FUNCTIONS generic function, , @t{all-functions}} (generic function)
@item Methods
@deffn {Method} {(setf all-functions)} NEW-VALUE (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF ALL-FUNCTIONS) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{(setf all-functions)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {allows-stemcellsp} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ALLOWS-STEMCELLSP generic function}@c
@genericsubindex{allows-stemcellsp}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {allows-stemcellsp} (E @t{environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ALLOWS-STEMCELLSP VARJO<dot>INTERNALS<colon><colon>ENVIRONMENT method}@c
@methodsubindex{allows-stemcellsp}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/environment<dot>lisp file, , @t{src/varjo.internals/environment.lisp}} (file)
@end table
@end deffn
@deffn {Method} {allows-stemcellsp} (BASE-ENVIRONMENT @t{base-environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ALLOWS-STEMCELLSP VARJO<dot>INTERNALS<colon><colon>BASE-ENVIRONMENT method}@c
@methodsubindex{allows-stemcellsp}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {arg-num} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ARG-NUM generic function}@c
@genericsubindex{arg-num}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {arg-num} (RET-GEN-ELEMENT-OF-NTH-ARG-TYPE @t{ret-gen-element-of-nth-arg-type})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ARG-NUM VARJO<dot>INTERNALS<colon><colon>RET-GEN-ELEMENT-OF-NTH-ARG-TYPE method}@c
@methodsubindex{arg-num}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {arg-num} (RET-GEN-NTH-ARG-TYPE @t{ret-gen-nth-arg-type})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ARG-NUM VARJO<dot>INTERNALS<colon><colon>RET-GEN-NTH-ARG-TYPE method}@c
@methodsubindex{arg-num}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {argument-is-uniform-p} NAME ENV
@anchor{go to the VARJO<dot>API<colon><colon>ARGUMENT-IS-UNIFORM-P generic function}@c
@genericsubindex{argument-is-uniform-p}@c

When given an `environment` object from a Vari macro and a symbol that names
one of the arguments to the compiler-macro, `argument-is-uniform-p` returns T
if the value of the argument comes from a uniform variable.
@table @strong
@item Package
@ref{go to the VARJO<dot>API package, , @t{varjo.api}}
@item Source
@ref{go to the varjo/src/varjo<dot>api/environment<dot>lisp file, , @t{src/varjo.api/environment.lisp}} (file)
@item Methods
@deffn {Method} {argument-is-uniform-p} (NAME @t{symbol}) (ENV @t{macro-expansion-environment})
@anchor{go to the VARJO<dot>API<colon><colon>ARGUMENT-IS-UNIFORM-P COMMON-LISP<colon><colon>SYMBOL VARJO<dot>INTERNALS<colon><colon>MACRO-EXPANSION-ENVIRONMENT method}@c
@methodsubindex{argument-is-uniform-p}@c
@end deffn
@deffn {Method} {argument-is-uniform-p} (NAME @t{symbol}) (ENV @t{compiler-macro-expansion-environment})
@anchor{go to the VARJO<dot>API<colon><colon>ARGUMENT-IS-UNIFORM-P COMMON-LISP<colon><colon>SYMBOL VARJO<dot>INTERNALS<colon><colon>COMPILER-MACRO-EXPANSION-ENVIRONMENT method}@c
@methodsubindex{argument-is-uniform-p}@c
@end deffn
@end table
@end deffn
@deffn {Generic Function} {argument-type} NAME ENV
@anchor{go to the VARJO<dot>API<colon><colon>ARGUMENT-TYPE generic function}@c
@genericsubindex{argument-type}@c

When given an `environment` object from a Vari macro and a symbol that names
a variable bound in the current scope, `argument-type` returns the Varjo
type object that represents the Vari type of that variable.
@table @strong
@item Package
@ref{go to the VARJO<dot>API package, , @t{varjo.api}}
@item Source
@ref{go to the varjo/src/varjo<dot>api/environment<dot>lisp file, , @t{src/varjo.api/environment.lisp}} (file)
@item Methods
@deffn {Method} {argument-type} (NAME @t{symbol}) (ENV @t{compiler-macro-expansion-environment})
@anchor{go to the VARJO<dot>API<colon><colon>ARGUMENT-TYPE COMMON-LISP<colon><colon>SYMBOL VARJO<dot>INTERNALS<colon><colon>COMPILER-MACRO-EXPANSION-ENVIRONMENT method}@c
@methodsubindex{argument-type}@c
@end deffn
@deffn {Method} {argument-type} (NAME @t{symbol}) (ENV @t{macro-expansion-environment})
@anchor{go to the VARJO<dot>API<colon><colon>ARGUMENT-TYPE COMMON-LISP<colon><colon>SYMBOL VARJO<dot>INTERNALS<colon><colon>MACRO-EXPANSION-ENVIRONMENT method}@c
@methodsubindex{argument-type}@c
@end deffn
@end table
@end deffn
@deffn {Generic Function} {argument-uniform-name} NAME ENV
@anchor{go to the VARJO<dot>API<colon><colon>ARGUMENT-UNIFORM-NAME generic function}@c
@genericsubindex{argument-uniform-name}@c

When given an `environment` object from a Vari macro and a symbol that names
an argument to the current compiler-macro, `argument-uniform-name` returns
the the symbol which names the uniform in the stage if the value passed to
the named paramater has come from a uniform.
@table @strong
@item Package
@ref{go to the VARJO<dot>API package, , @t{varjo.api}}
@item Source
@ref{go to the varjo/src/varjo<dot>api/environment<dot>lisp file, , @t{src/varjo.api/environment.lisp}} (file)
@item Methods
@deffn {Method} {argument-uniform-name} (NAME @t{symbol}) (ENV @t{macro-expansion-environment})
@anchor{go to the VARJO<dot>API<colon><colon>ARGUMENT-UNIFORM-NAME COMMON-LISP<colon><colon>SYMBOL VARJO<dot>INTERNALS<colon><colon>MACRO-EXPANSION-ENVIRONMENT method}@c
@methodsubindex{argument-uniform-name}@c
@end deffn
@deffn {Method} {argument-uniform-name} (NAME @t{symbol}) (ENV @t{compiler-macro-expansion-environment})
@anchor{go to the VARJO<dot>API<colon><colon>ARGUMENT-UNIFORM-NAME COMMON-LISP<colon><colon>SYMBOL VARJO<dot>INTERNALS<colon><colon>COMPILER-MACRO-EXPANSION-ENVIRONMENT method}@c
@methodsubindex{argument-uniform-name}@c
@end deffn
@end table
@end deffn
@deffn {Generic Function} {arguments} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ARGUMENTS generic function}@c
@genericsubindex{arguments}@c
@deffnx {Generic Function} {(setf arguments)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF ARGUMENTS) generic function}@c
@genericsubindex{(setf arguments)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {arguments} (V-COMPILER-MACRO @t{v-compiler-macro})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ARGUMENTS VARJO<dot>INTERNALS<colon><colon>V-COMPILER-MACRO method}@c
@methodsubindex{arguments}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf arguments)} NEW-VALUE (V-COMPILER-MACRO @t{v-compiler-macro})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF ARGUMENTS) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>V-COMPILER-MACRO method}@c
@methodsubindex{(setf arguments)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {arguments} (V-REGULAR-MACRO @t{v-regular-macro})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ARGUMENTS VARJO<dot>INTERNALS<colon><colon>V-REGULAR-MACRO method}@c
@methodsubindex{arguments}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf arguments)} NEW-VALUE (V-REGULAR-MACRO @t{v-regular-macro})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF ARGUMENTS) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>V-REGULAR-MACRO method}@c
@methodsubindex{(setf arguments)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {arguments} (FUNC-MATCH @t{func-match})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ARGUMENTS VARJO<dot>INTERNALS<colon><colon>FUNC-MATCH method}@c
@methodsubindex{arguments}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {block-name} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>BLOCK-NAME generic function}@c
@genericsubindex{block-name}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {block-name} (V-BLOCK-ARRAY @t{v-block-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>BLOCK-NAME VARI<dot>TYPES<colon><colon>V-BLOCK-ARRAY method}@c
@methodsubindex{block-name}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {block-name} (V-BLOCK-STRUCT @t{v-block-struct})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>BLOCK-NAME VARI<dot>TYPES<colon><colon>V-BLOCK-STRUCT method}@c
@methodsubindex{block-name}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {block-name} (OUTPUT-VARIABLE @t{output-variable})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>BLOCK-NAME VARJO<dot>INTERNALS<colon><colon>OUTPUT-VARIABLE method}@c
@methodsubindex{block-name}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {block-name-string} BLOCK-NAME
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>BLOCK-NAME-STRING generic function}@c
@genericsubindex{block-name-string}@c

When passed an instance of `output-variable` this will return the name of
the interface-block that contained the variable as a string.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {block-name-string} (VAR @t{output-variable})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>BLOCK-NAME-STRING VARJO<dot>INTERNALS<colon><colon>OUTPUT-VARIABLE method}@c
@methodsubindex{block-name-string}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/glsl-generation/string-generation<dot>lisp file, , @t{src/varjo.internals/glsl-generation/string-generation.lisp}} (file)
@end table
@end deffn
@deffn {Method} {block-name-string} BLOCK-NAME
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>BLOCK-NAME-STRING COMMON-LISP<colon><colon>T method}@c
@methodsubindex{block-name-string}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/glsl-generation/string-generation<dot>lisp file, , @t{src/varjo.internals/glsl-generation/string-generation.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {captured-vars} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CAPTURED-VARS generic function}@c
@genericsubindex{captured-vars}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {captured-vars} (FN @t{v-function})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CAPTURED-VARS VARJO<dot>INTERNALS<colon><colon>V-FUNCTION method}@c
@methodsubindex{captured-vars}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/function-obj<dot>lisp file, , @t{src/varjo.internals/function-obj.lisp}} (file)
@end table
@end deffn
@deffn {Method} {captured-vars} (V-USER-FUNCTION @t{v-user-function})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CAPTURED-VARS VARI<dot>TYPES<colon><colon>V-USER-FUNCTION method}@c
@methodsubindex{captured-vars}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {code} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CODE generic function}@c
@genericsubindex{code}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {code} (EXTERNAL-FUNCTION @t{external-function})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CODE VARJO<dot>INTERNALS<colon><colon>EXTERNAL-FUNCTION method}@c
@methodsubindex{code}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {combine-metadata} META-A META-B
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>COMBINE-METADATA generic function}@c
@genericsubindex{combine-metadata}@c

`combine-metadata` takes 2 metadata (or null) objects and attempts to combine
them if possible. It is valid for the system to return nil for non-null
arguments.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/value-metadata<dot>lisp file, , @t{src/varjo.internals/value-metadata.lisp}} (file)
@item Methods
@deffn {Method} {combine-metadata} (META-A @t{standard-value-metadata}) (META-B @t{standard-value-metadata})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>COMBINE-METADATA VARJO<dot>INTERNALS<colon><colon>STANDARD-VALUE-METADATA VARJO<dot>INTERNALS<colon><colon>STANDARD-VALUE-METADATA method}@c
@methodsubindex{combine-metadata}@c
@end deffn
@deffn {Method} {combine-metadata} (META-A @t{standard-value-metadata}) (META-B @t{null})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>COMBINE-METADATA VARJO<dot>INTERNALS<colon><colon>STANDARD-VALUE-METADATA COMMON-LISP<colon><colon>NULL method}@c
@methodsubindex{combine-metadata}@c
@end deffn
@deffn {Method} {combine-metadata} (META-A @t{null}) (META-B @t{standard-value-metadata})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>COMBINE-METADATA COMMON-LISP<colon><colon>NULL VARJO<dot>INTERNALS<colon><colon>STANDARD-VALUE-METADATA method}@c
@methodsubindex{combine-metadata}@c
@end deffn
@deffn {Method} {combine-metadata} (META-A @t{null}) (META-B @t{null})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>COMBINE-METADATA COMMON-LISP<colon><colon>NULL COMMON-LISP<colon><colon>NULL method}@c
@methodsubindex{combine-metadata}@c
@end deffn
@end table
@end deffn
@deffn {Generic Function} {compile-form} CODE ENV
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>COMPILE-FORM generic function}@c
@genericsubindex{compile-form}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {compile-form} CODE ENV
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>COMPILE-FORM COMMON-LISP<colon><colon>T COMMON-LISP<colon><colon>T method}@c
@methodsubindex{compile-form}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/compile-form<dot>lisp file, , @t{src/varjo.internals/compile-form.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {compile-literal} CODE ENV &key ERRORP
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>COMPILE-LITERAL generic function}@c
@genericsubindex{compile-literal}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {compile-literal} CODE ENV &key ERRORP
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>COMPILE-LITERAL COMMON-LISP<colon><colon>T COMMON-LISP<colon><colon>T method}@c
@methodsubindex{compile-literal}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/compile-form<dot>lisp file, , @t{src/varjo.internals/compile-form.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {compile-place} CODE ENV &key ALLOW-UNBOUND
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>COMPILE-PLACE generic function}@c
@genericsubindex{compile-place}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {compile-place} CODE ENV &key ALLOW-UNBOUND
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>COMPILE-PLACE COMMON-LISP<colon><colon>T COMMON-LISP<colon><colon>T method}@c
@methodsubindex{compile-place}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/compile-form<dot>lisp file, , @t{src/varjo.internals/compile-form.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {context} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CONTEXT generic function}@c
@genericsubindex{context}@c

When passed an instance of `stage` this function returns a list of
GLSL versions which this stage was/is to be compiled with
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Writer
@ref{go to the VARJO<dot>INTERNALS<colon><colon>(SETF CONTEXT) generic function, , @t{(setf context)}} (generic function)
@item Methods
@deffn {Method} {context} (STAGE @t{stage})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CONTEXT VARJO<dot>INTERNALS<colon><colon>STAGE method}@c
@methodsubindex{context}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {(setf context)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF CONTEXT) generic function}@c
@genericsubindex{(setf context)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Reader
@ref{go to the VARJO<dot>INTERNALS<colon><colon>CONTEXT generic function, , @t{context}} (generic function)
@item Methods
@deffn {Method} {(setf context)} NEW-VALUE (STAGE @t{stage})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF CONTEXT) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>STAGE method}@c
@methodsubindex{(setf context)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {copy-compiled} CODE-OBJ &key TYPE-SET CURRENT-LINE TO-BLOCK EMIT-SET RETURN-SET STEMCELLS OUT-OF-SCOPE-ARGS PLACE-TREE PURE USED-TYPES
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>COPY-COMPILED generic function}@c
@genericsubindex{copy-compiled}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {copy-compiled} (CODE-OBJ @t{compiled}) &key TYPE-SET CURRENT-LINE TO-BLOCK EMIT-SET RETURN-SET STEMCELLS OUT-OF-SCOPE-ARGS PLACE-TREE PURE USED-TYPES
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>COPY-COMPILED VARJO<dot>INTERNALS<colon><colon>COMPILED method}@c
@methodsubindex{copy-compiled}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/code-object<dot>lisp file, , @t{src/varjo.internals/code-object.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {core-typep} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP generic function}@c
@genericsubindex{core-typep}@c

`core-typep` returns T if the Varjo type object provided is a core GLSL type
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {core-typep} (V-UIMAGE-2D-MS-ARRAY @t{v-uimage-2d-ms-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-UIMAGE-2D-MS-ARRAY method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-IIMAGE-2D-MS-ARRAY @t{v-iimage-2d-ms-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-IIMAGE-2D-MS-ARRAY method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-IMAGE-2D-MS-ARRAY @t{v-image-2d-ms-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-IMAGE-2D-MS-ARRAY method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-UIMAGE-2D-MS @t{v-uimage-2d-ms})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-UIMAGE-2D-MS method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-IIMAGE-2D-MS @t{v-iimage-2d-ms})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-IIMAGE-2D-MS method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-IMAGE-2D-MS @t{v-image-2d-ms})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-IMAGE-2D-MS method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-UIMAGE-CUBE-ARRAY @t{v-uimage-cube-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-UIMAGE-CUBE-ARRAY method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-IIMAGE-CUBE-ARRAY @t{v-iimage-cube-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-IIMAGE-CUBE-ARRAY method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-IMAGE-CUBE-ARRAY @t{v-image-cube-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-IMAGE-CUBE-ARRAY method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-UIMAGE-2D-ARRAY @t{v-uimage-2d-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-UIMAGE-2D-ARRAY method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-IIMAGE-2D-ARRAY @t{v-iimage-2d-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-IIMAGE-2D-ARRAY method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-IMAGE-2D-ARRAY @t{v-image-2d-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-IMAGE-2D-ARRAY method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-UIMAGE-1D-ARRAY @t{v-uimage-1d-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-UIMAGE-1D-ARRAY method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-IIMAGE-1D-ARRAY @t{v-iimage-1d-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-IIMAGE-1D-ARRAY method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-IMAGE-1D-ARRAY @t{v-image-1d-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-IMAGE-1D-ARRAY method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-UIMAGE-BUFFER @t{v-uimage-buffer})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-UIMAGE-BUFFER method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-IIMAGE-BUFFER @t{v-iimage-buffer})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-IIMAGE-BUFFER method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-IMAGE-BUFFER @t{v-image-buffer})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-IMAGE-BUFFER method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-UIMAGE-CUBE @t{v-uimage-cube})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-UIMAGE-CUBE method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-IIMAGE-CUBE @t{v-iimage-cube})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-IIMAGE-CUBE method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-IMAGE-CUBE @t{v-image-cube})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-IMAGE-CUBE method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-UIMAGE-2D-RECT @t{v-uimage-2d-rect})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-UIMAGE-2D-RECT method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-IIMAGE-2D-RECT @t{v-iimage-2d-rect})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-IIMAGE-2D-RECT method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-IMAGE-2D-RECT @t{v-image-2d-rect})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-IMAGE-2D-RECT method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-UIMAGE-RECT @t{v-uimage-rect})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-UIMAGE-RECT method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-IIMAGE-RECT @t{v-iimage-rect})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-IIMAGE-RECT method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-IMAGE-RECT @t{v-image-rect})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-IMAGE-RECT method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-UIMAGE-3D @t{v-uimage-3d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-UIMAGE-3D method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-IIMAGE-3D @t{v-iimage-3d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-IIMAGE-3D method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-IMAGE-3D @t{v-image-3d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-IMAGE-3D method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-UIMAGE-2D @t{v-uimage-2d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-UIMAGE-2D method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-IIMAGE-2D @t{v-iimage-2d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-IIMAGE-2D method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-IMAGE-2D @t{v-image-2d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-IMAGE-2D method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-UIMAGE-1D @t{v-uimage-1d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-UIMAGE-1D method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-IIMAGE-1D @t{v-iimage-1d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-IIMAGE-1D method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-IMAGE-1D @t{v-image-1d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-IMAGE-1D method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-ATOMIC-UINT @t{v-atomic-uint})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-ATOMIC-UINT method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-USAMPLER-RECT @t{v-usampler-rect})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-USAMPLER-RECT method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-ISAMPLER-RECT @t{v-isampler-rect})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-ISAMPLER-RECT method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-SAMPLER-RECT @t{v-sampler-rect})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-SAMPLER-RECT method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-USAMPLER-CUBE-ARRAY @t{v-usampler-cube-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-USAMPLER-CUBE-ARRAY method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-USAMPLER-CUBE @t{v-usampler-cube})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-USAMPLER-CUBE method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-USAMPLER-BUFFER @t{v-usampler-buffer})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-USAMPLER-BUFFER method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-USAMPLER-3D @t{v-usampler-3d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-USAMPLER-3D method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-USAMPLER-2D-RECT @t{v-usampler-2d-rect})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-USAMPLER-2D-RECT method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-USAMPLER-2D-MS-ARRAY @t{v-usampler-2d-ms-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-USAMPLER-2D-MS-ARRAY method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-USAMPLER-2D-MS @t{v-usampler-2d-ms})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-USAMPLER-2D-MS method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-USAMPLER-2D-ARRAY @t{v-usampler-2d-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-USAMPLER-2D-ARRAY method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-USAMPLER-2D @t{v-usampler-2d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-USAMPLER-2D method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-USAMPLER-1D-ARRAY @t{v-usampler-1d-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-USAMPLER-1D-ARRAY method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-USAMPLER-1D @t{v-usampler-1d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-USAMPLER-1D method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-SAMPLER-CUBE-SHADOW @t{v-sampler-cube-shadow})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-SAMPLER-CUBE-SHADOW method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-SAMPLER-CUBE-ARRAY-SHADOW @t{v-sampler-cube-array-shadow})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-SAMPLER-CUBE-ARRAY-SHADOW method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-SAMPLER-CUBE-ARRAY @t{v-sampler-cube-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-SAMPLER-CUBE-ARRAY method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-SAMPLER-CUBE @t{v-sampler-cube})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-SAMPLER-CUBE method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-SAMPLER-BUFFER @t{v-sampler-buffer})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-SAMPLER-BUFFER method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-SAMPLER-3D @t{v-sampler-3d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-SAMPLER-3D method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-SAMPLER-2D-SHADOW @t{v-sampler-2d-shadow})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-SAMPLER-2D-SHADOW method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-SAMPLER-2D-RECT-SHADOW @t{v-sampler-2d-rect-shadow})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-SAMPLER-2D-RECT-SHADOW method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-SAMPLER-2D-RECT @t{v-sampler-2d-rect})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-SAMPLER-2D-RECT method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-SAMPLER-2D-MS-ARRAY @t{v-sampler-2d-ms-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-SAMPLER-2D-MS-ARRAY method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-SAMPLER-2D-MS @t{v-sampler-2d-ms})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-SAMPLER-2D-MS method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-SAMPLER-2D-ARRAY-SHADOW @t{v-sampler-2d-array-shadow})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-SAMPLER-2D-ARRAY-SHADOW method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-SAMPLER-2D-ARRAY @t{v-sampler-2d-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-SAMPLER-2D-ARRAY method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-SAMPLER-2D @t{v-sampler-2d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-SAMPLER-2D method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-SAMPLER-1D-SHADOW @t{v-sampler-1d-shadow})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-SAMPLER-1D-SHADOW method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-SAMPLER-1D-ARRAY-SHADOW @t{v-sampler-1d-array-shadow})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-SAMPLER-1D-ARRAY-SHADOW method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-SAMPLER-1D-ARRAY @t{v-sampler-1d-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-SAMPLER-1D-ARRAY method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-SAMPLER-1D @t{v-sampler-1d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-SAMPLER-1D method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-ISAMPLER-CUBE-ARRAY @t{v-isampler-cube-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-ISAMPLER-CUBE-ARRAY method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-ISAMPLER-CUBE @t{v-isampler-cube})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-ISAMPLER-CUBE method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-ISAMPLER-BUFFER @t{v-isampler-buffer})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-ISAMPLER-BUFFER method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-ISAMPLER-3D @t{v-isampler-3d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-ISAMPLER-3D method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-ISAMPLER-2D-RECT @t{v-isampler-2d-rect})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-ISAMPLER-2D-RECT method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-ISAMPLER-2D-MS-ARRAY @t{v-isampler-2d-ms-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-ISAMPLER-2D-MS-ARRAY method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-ISAMPLER-2D-MS @t{v-isampler-2d-ms})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-ISAMPLER-2D-MS method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-ISAMPLER-2D-ARRAY @t{v-isampler-2d-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-ISAMPLER-2D-ARRAY method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-ISAMPLER-2D @t{v-isampler-2d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-ISAMPLER-2D method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-ISAMPLER-1D-ARRAY @t{v-isampler-1d-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-ISAMPLER-1D-ARRAY method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-ISAMPLER-1D @t{v-isampler-1d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-ISAMPLER-1D method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-DVEC4 @t{v-dvec4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-DVEC4 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-DVEC3 @t{v-dvec3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-DVEC3 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-DVEC2 @t{v-dvec2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-DVEC2 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-IVEC4 @t{v-ivec4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-IVEC4 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-IVEC3 @t{v-ivec3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-IVEC3 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-IVEC2 @t{v-ivec2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-IVEC2 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-UVEC4 @t{v-uvec4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-UVEC4 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-UVEC3 @t{v-uvec3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-UVEC3 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-UVEC2 @t{v-uvec2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-UVEC2 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-BVEC4 @t{v-bvec4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-BVEC4 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-BVEC3 @t{v-bvec3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-BVEC3 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-BVEC2 @t{v-bvec2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-BVEC2 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-VEC4 @t{v-vec4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-VEC4 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-VEC3 @t{v-vec3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-VEC3 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-VEC2 @t{v-vec2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-VEC2 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-DMAT4X4 @t{v-dmat4x4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-DMAT4X4 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-DMAT4X3 @t{v-dmat4x3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-DMAT4X3 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-DMAT4X2 @t{v-dmat4x2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-DMAT4X2 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-DMAT3X4 @t{v-dmat3x4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-DMAT3X4 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-DMAT3X3 @t{v-dmat3x3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-DMAT3X3 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-DMAT3X2 @t{v-dmat3x2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-DMAT3X2 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-DMAT2X4 @t{v-dmat2x4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-DMAT2X4 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-DMAT2X3 @t{v-dmat2x3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-DMAT2X3 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-DMAT2X2 @t{v-dmat2x2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-DMAT2X2 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-DMAT4 @t{v-dmat4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-DMAT4 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-DMAT3 @t{v-dmat3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-DMAT3 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-DMAT2 @t{v-dmat2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-DMAT2 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-MAT4X4 @t{v-mat4x4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-MAT4X4 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-MAT4X3 @t{v-mat4x3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-MAT4X3 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-MAT4X2 @t{v-mat4x2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-MAT4X2 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-MAT3X4 @t{v-mat3x4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-MAT3X4 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-MAT3X3 @t{v-mat3x3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-MAT3X3 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-MAT3X2 @t{v-mat3x2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-MAT3X2 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-MAT2X4 @t{v-mat2x4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-MAT2X4 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-MAT2X3 @t{v-mat2x3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-MAT2X3 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-MAT2X2 @t{v-mat2x2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-MAT2X2 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-MAT4 @t{v-mat4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-MAT4 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-MAT3 @t{v-mat3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-MAT3 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-MAT2 @t{v-mat2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-MAT2 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-DOUBLE @t{v-double})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-DOUBLE method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-SHORT-FLOAT @t{v-short-float})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-SHORT-FLOAT method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-FLOAT @t{v-float})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-FLOAT method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-UINT @t{v-uint})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-UINT method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-INT @t{v-int})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-INT method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-BOOL @t{v-bool})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-BOOL method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-VOID @t{v-void})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-VOID method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-TYPE @t{v-type})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-TYPE method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/early-types<dot>lisp file, , @t{src/varjo.internals/types/early-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {cpu-side-transform} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CPU-SIDE-TRANSFORM generic function}@c
@genericsubindex{cpu-side-transform}@c

When passed an instance of `implicit-uniform-variable` this returns the lisp
code that was to be used to populate the implicit uniform.@*

See `add-lisp-form-as-uniform` for more details.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {cpu-side-transform} (IMPLICIT-UNIFORM-VARIABLE @t{implicit-uniform-variable})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CPU-SIDE-TRANSFORM VARJO<dot>INTERNALS<colon><colon>IMPLICIT-UNIFORM-VARIABLE method}@c
@methodsubindex{cpu-side-transform}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {current-line} CODE-OBJ &optional EVEN-WHEN-EPHEMERAL
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CURRENT-LINE generic function}@c
@genericsubindex{current-line}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@item Methods
@deffn {Method} {current-line} CODE-OBJ &optional EVEN-WHEN-EPHEMERAL
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CURRENT-LINE COMMON-LISP<colon><colon>T method}@c
@methodsubindex{current-line}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/code-object<dot>lisp file, , @t{src/varjo.internals/code-object.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {delete-external-function} NAME IN-ARGS-TYPES
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>DELETE-EXTERNAL-FUNCTION generic function}@c
@genericsubindex{delete-external-function}@c

`delete-external-function` removes a function from the 'external function
registry' such that any attempt to use it in a functure compilation task will
fail.@*

The 'in-arg-types' parameter expects a list of Vari `type-spec`s.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {delete-external-function} NAME IN-ARGS-TYPES
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>DELETE-EXTERNAL-FUNCTION COMMON-LISP<colon><colon>T COMMON-LISP<colon><colon>T method}@c
@methodsubindex{delete-external-function}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/external-functions<dot>lisp file, , @t{src/varjo.internals/external-functions.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {emit-set} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>EMIT-SET generic function}@c
@genericsubindex{emit-set}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {emit-set} (V-FUNCTION @t{v-function})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>EMIT-SET VARJO<dot>INTERNALS<colon><colon>V-FUNCTION method}@c
@methodsubindex{emit-set}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {emit-set} (COMPILED-FUNCTION-RESULT @t{compiled-function-result})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>EMIT-SET VARJO<dot>INTERNALS<colon><colon>COMPILED-FUNCTION-RESULT method}@c
@methodsubindex{emit-set}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {emit-set} (COMPILED @t{compiled})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>EMIT-SET VARJO<dot>INTERNALS<colon><colon>COMPILED method}@c
@methodsubindex{emit-set}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {env} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ENV generic function}@c
@genericsubindex{env}@c
@deffnx {Generic Function} {(setf env)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF ENV) generic function}@c
@genericsubindex{(setf env)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {env} (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ENV VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{env}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf env)} NEW-VALUE (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF ENV) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{(setf env)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {env-depth} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ENV-DEPTH generic function}@c
@genericsubindex{env-depth}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {env-depth} (BASE-ENVIRONMENT @t{base-environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ENV-DEPTH VARJO<dot>INTERNALS<colon><colon>BASE-ENVIRONMENT method}@c
@methodsubindex{env-depth}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {env-depth} (ENVIRONMENT @t{environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ENV-DEPTH VARJO<dot>INTERNALS<colon><colon>ENVIRONMENT method}@c
@methodsubindex{env-depth}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {expanded-input-variables} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>EXPANDED-INPUT-VARIABLES generic function}@c
@genericsubindex{expanded-input-variables}@c
@deffnx {Generic Function} {(setf expanded-input-variables)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF EXPANDED-INPUT-VARIABLES) generic function}@c
@genericsubindex{(setf expanded-input-variables)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {expanded-input-variables} (ENV @t{environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>EXPANDED-INPUT-VARIABLES VARJO<dot>INTERNALS<colon><colon>ENVIRONMENT method}@c
@methodsubindex{expanded-input-variables}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/environment<dot>lisp file, , @t{src/varjo.internals/environment.lisp}} (file)
@end table
@end deffn
@deffn {Method} {expanded-input-variables} (BASE-ENVIRONMENT @t{base-environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>EXPANDED-INPUT-VARIABLES VARJO<dot>INTERNALS<colon><colon>BASE-ENVIRONMENT method}@c
@methodsubindex{expanded-input-variables}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf expanded-input-variables)} NEW-VALUE (BASE-ENVIRONMENT @t{base-environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF EXPANDED-INPUT-VARIABLES) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>BASE-ENVIRONMENT method}@c
@methodsubindex{(setf expanded-input-variables)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {expansion} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>EXPANSION generic function}@c
@genericsubindex{expansion}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {expansion} (V-SYMBOL-MACRO @t{v-symbol-macro})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>EXPANSION VARJO<dot>INTERNALS<colon><colon>V-SYMBOL-MACRO method}@c
@methodsubindex{expansion}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {ext-func-compile-chain} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>EXT-FUNC-COMPILE-CHAIN generic function}@c
@genericsubindex{ext-func-compile-chain}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {ext-func-compile-chain} (ENVIRONMENT @t{environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>EXT-FUNC-COMPILE-CHAIN VARJO<dot>INTERNALS<colon><colon>ENVIRONMENT method}@c
@methodsubindex{ext-func-compile-chain}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {feedback-group} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>FEEDBACK-GROUP generic function}@c
@genericsubindex{feedback-group}@c

`feedback-group` given an instance of `feedback-qualifier` this function
returns the group ID from the qualifier.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {feedback-group} (FEEDBACK-QUALIFIER @t{feedback-qualifier})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>FEEDBACK-GROUP VARJO<dot>INTERNALS<colon><colon>FEEDBACK-QUALIFIER method}@c
@methodsubindex{feedback-group}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {find-form-binding-by-literal} NAME ENV
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>FIND-FORM-BINDING-BY-LITERAL generic function}@c
@genericsubindex{find-form-binding-by-literal}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {find-form-binding-by-literal} (FUNC-NAME @t{list}) ENV
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>FIND-FORM-BINDING-BY-LITERAL COMMON-LISP<colon><colon>LIST COMMON-LISP<colon><colon>T method}@c
@methodsubindex{find-form-binding-by-literal}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/functions<dot>lisp file, , @t{src/varjo.internals/functions.lisp}} (file)
@end table
@end deffn
@deffn {Method} {find-form-binding-by-literal} (NAME @t{symbol}) ENV
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>FIND-FORM-BINDING-BY-LITERAL COMMON-LISP<colon><colon>SYMBOL COMMON-LISP<colon><colon>T method}@c
@methodsubindex{find-form-binding-by-literal}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/functions<dot>lisp file, , @t{src/varjo.internals/functions.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {flow-ids} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>FLOW-IDS generic function}@c
@genericsubindex{flow-ids}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {flow-ids} (OBJ @t{typed-external-name})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>FLOW-IDS VARJO<dot>INTERNALS<colon><colon>TYPED-EXTERNAL-NAME method}@c
@methodsubindex{flow-ids}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {flow-ids} (OBJ @t{v-value})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>FLOW-IDS VARJO<dot>INTERNALS<colon><colon>V-VALUE method}@c
@methodsubindex{flow-ids}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/flow<dot>lisp file, , @t{src/varjo.internals/flow.lisp}} (file)
@end table
@end deffn
@deffn {Method} {flow-ids} (OBJ @t{compiled})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>FLOW-IDS VARJO<dot>INTERNALS<colon><colon>COMPILED method}@c
@methodsubindex{flow-ids}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/flow<dot>lisp file, , @t{src/varjo.internals/flow.lisp}} (file)
@end table
@end deffn
@deffn {Method} {flow-ids} (V-TYPE @t{v-type})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>FLOW-IDS VARI<dot>TYPES<colon><colon>V-TYPE method}@c
@methodsubindex{flow-ids}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/early-types<dot>lisp file, , @t{src/varjo.internals/types/early-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {flow-ids} (V-FUNCTION @t{v-function})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>FLOW-IDS VARJO<dot>INTERNALS<colon><colon>V-FUNCTION method}@c
@methodsubindex{flow-ids}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {flow-ids} (STEMCELL @t{stemcell})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>FLOW-IDS VARJO<dot>INTERNALS<colon><colon>STEMCELL method}@c
@methodsubindex{flow-ids}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {func} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>FUNC generic function}@c
@genericsubindex{func}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {func} (FUNC-MATCH @t{func-match})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>FUNC VARJO<dot>INTERNALS<colon><colon>FUNC-MATCH method}@c
@methodsubindex{func}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {function-obj} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>FUNCTION-OBJ generic function}@c
@genericsubindex{function-obj}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {function-obj} (COMPILED-FUNCTION-RESULT @t{compiled-function-result})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>FUNCTION-OBJ VARJO<dot>INTERNALS<colon><colon>COMPILED-FUNCTION-RESULT method}@c
@methodsubindex{function-obj}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {functions} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>FUNCTIONS generic function}@c
@genericsubindex{functions}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {functions} (V-FUNCTION-SET @t{v-function-set})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>FUNCTIONS VARJO<dot>INTERNALS<colon><colon>V-FUNCTION-SET method}@c
@methodsubindex{functions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/function-obj<dot>lisp file, , @t{src/varjo.internals/function-obj.lisp}} (file)
@end table
@end deffn
@deffn {Method} {functions} (FN @t{v-user-function})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>FUNCTIONS VARI<dot>TYPES<colon><colon>V-USER-FUNCTION method}@c
@methodsubindex{functions}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/function-obj<dot>lisp file, , @t{src/varjo.internals/function-obj.lisp}} (file)
@end table
@end deffn
@deffn {Method} {functions} (FN @t{v-function})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>FUNCTIONS VARJO<dot>INTERNALS<colon><colon>V-FUNCTION method}@c
@methodsubindex{functions}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {get-stemcell-name-for-flow-id} ID ENV
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GET-STEMCELL-NAME-FOR-FLOW-ID generic function}@c
@genericsubindex{get-stemcell-name-for-flow-id}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {get-stemcell-name-for-flow-id} ID (E @t{environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GET-STEMCELL-NAME-FOR-FLOW-ID COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>ENVIRONMENT method}@c
@methodsubindex{get-stemcell-name-for-flow-id}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/environment<dot>lisp file, , @t{src/varjo.internals/environment.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {get-symbol-binding} SYMBOL RESPECT-SCOPE-RULES ENV
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GET-SYMBOL-BINDING generic function}@c
@genericsubindex{get-symbol-binding}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {get-symbol-binding} SYMBOL RESPECT-SCOPE-RULES (ENV @t{environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GET-SYMBOL-BINDING COMMON-LISP<colon><colon>T COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>ENVIRONMENT method}@c
@methodsubindex{get-symbol-binding}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/environment<dot>lisp file, , @t{src/varjo.internals/environment.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {glsl-code} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-CODE generic function}@c
@genericsubindex{glsl-code}@c

When passed an instance of `compiled-stage` this function returns a string
containing the glsl code that resulted from the compilation.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Writer
@ref{go to the VARJO<dot>INTERNALS<colon><colon>(SETF GLSL-CODE) generic function, , @t{(setf glsl-code)}} (generic function)
@item Methods
@deffn {Method} {glsl-code} (OBJS @t{list})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-CODE COMMON-LISP<colon><colon>LIST method}@c
@methodsubindex{glsl-code}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/compile-result<dot>lisp file, , @t{src/varjo.internals/compile-result.lisp}} (file)
@end table
@end deffn
@deffn {Method} {glsl-code} (COMPILED-STAGE @t{compiled-stage})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-CODE VARJO<dot>INTERNALS<colon><colon>COMPILED-STAGE method}@c
@methodsubindex{glsl-code}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {glsl-code} (COMPILED-FUNCTION-RESULT @t{compiled-function-result})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-CODE VARJO<dot>INTERNALS<colon><colon>COMPILED-FUNCTION-RESULT method}@c
@methodsubindex{glsl-code}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {(setf glsl-code)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF GLSL-CODE) generic function}@c
@genericsubindex{(setf glsl-code)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Reader
@ref{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-CODE generic function, , @t{glsl-code}} (generic function)
@item Methods
@deffn {Method} {(setf glsl-code)} NEW-VALUE (COMPILED-STAGE @t{compiled-stage})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF GLSL-CODE) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>COMPILED-STAGE method}@c
@methodsubindex{(setf glsl-code)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {glsl-name} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-NAME generic function}@c
@genericsubindex{glsl-name}@c

When passed an instance of `shader-variable` this function returns a string
containing the name that the variable was given in the glsl code.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Writer
@ref{go to the VARJO<dot>INTERNALS<colon><colon>(SETF GLSL-NAME) generic function, , @t{(setf glsl-name)}} (generic function)
@item Methods
@deffn {Method} {glsl-name} (V-FUNCTION @t{v-function})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-NAME VARJO<dot>INTERNALS<colon><colon>V-FUNCTION method}@c
@methodsubindex{glsl-name}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {glsl-name} (TYPED-EXTERNAL-NAME @t{typed-external-name})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-NAME VARJO<dot>INTERNALS<colon><colon>TYPED-EXTERNAL-NAME method}@c
@methodsubindex{glsl-name}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {glsl-name} (V-VALUE @t{v-value})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-NAME VARJO<dot>INTERNALS<colon><colon>V-VALUE method}@c
@methodsubindex{glsl-name}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {glsl-name} (SHADER-VARIABLE @t{shader-variable})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-NAME VARJO<dot>INTERNALS<colon><colon>SHADER-VARIABLE method}@c
@methodsubindex{glsl-name}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {(setf glsl-name)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF GLSL-NAME) generic function}@c
@genericsubindex{(setf glsl-name)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Reader
@ref{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-NAME generic function, , @t{glsl-name}} (generic function)
@item Methods
@deffn {Method} {(setf glsl-name)} NEW-VALUE (V-FUNCTION @t{v-function})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF GLSL-NAME) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>V-FUNCTION method}@c
@methodsubindex{(setf glsl-name)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf glsl-name)} NEW-VALUE (V-VALUE @t{v-value})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF GLSL-NAME) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>V-VALUE method}@c
@methodsubindex{(setf glsl-name)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {glsl-string} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-STRING generic function}@c
@genericsubindex{glsl-string}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {glsl-string} (V-SAMPLER-CUBE-ARRAY-SHADOW @t{v-sampler-cube-array-shadow})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-STRING VARI<dot>TYPES<colon><colon>V-SAMPLER-CUBE-ARRAY-SHADOW method}@c
@methodsubindex{glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {glsl-string} (V-SAMPLER-2D-RECT-SHADOW @t{v-sampler-2d-rect-shadow})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-STRING VARI<dot>TYPES<colon><colon>V-SAMPLER-2D-RECT-SHADOW method}@c
@methodsubindex{glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {glsl-string} (V-SAMPLER-2D-ARRAY-SHADOW @t{v-sampler-2d-array-shadow})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-STRING VARI<dot>TYPES<colon><colon>V-SAMPLER-2D-ARRAY-SHADOW method}@c
@methodsubindex{glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {glsl-string} (V-SAMPLER-1D-ARRAY-SHADOW @t{v-sampler-1d-array-shadow})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-STRING VARI<dot>TYPES<colon><colon>V-SAMPLER-1D-ARRAY-SHADOW method}@c
@methodsubindex{glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {glsl-string} (QUADS @t{quads})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-STRING VARJO<dot>INTERNALS<colon><colon>QUADS method}@c
@methodsubindex{glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {glsl-string} (TRIANGLE-STRIP-ADJACENCY @t{triangle-strip-adjacency})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-STRING VARJO<dot>INTERNALS<colon><colon>TRIANGLE-STRIP-ADJACENCY method}@c
@methodsubindex{glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {glsl-string} (TRIANGLES-ADJACENCY @t{triangles-adjacency})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-STRING VARJO<dot>INTERNALS<colon><colon>TRIANGLES-ADJACENCY method}@c
@methodsubindex{glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {glsl-string} (TRIANGLE-STRIP @t{triangle-strip})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-STRING VARJO<dot>INTERNALS<colon><colon>TRIANGLE-STRIP method}@c
@methodsubindex{glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {glsl-string} (TRIANGLE-FAN @t{triangle-fan})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-STRING VARJO<dot>INTERNALS<colon><colon>TRIANGLE-FAN method}@c
@methodsubindex{glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {glsl-string} (TRIANGLES @t{triangles})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-STRING VARJO<dot>INTERNALS<colon><colon>TRIANGLES method}@c
@methodsubindex{glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {glsl-string} (LINE-STRIP-ADJACENCY @t{line-strip-adjacency})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-STRING VARJO<dot>INTERNALS<colon><colon>LINE-STRIP-ADJACENCY method}@c
@methodsubindex{glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {glsl-string} (LINES-ADJACENCY @t{lines-adjacency})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-STRING VARJO<dot>INTERNALS<colon><colon>LINES-ADJACENCY method}@c
@methodsubindex{glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {glsl-string} (LINE-STRIP @t{line-strip})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-STRING VARJO<dot>INTERNALS<colon><colon>LINE-STRIP method}@c
@methodsubindex{glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {glsl-string} (LINE-LOOP @t{line-loop})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-STRING VARJO<dot>INTERNALS<colon><colon>LINE-LOOP method}@c
@methodsubindex{glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {glsl-string} (ISO-LINES @t{iso-lines})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-STRING VARJO<dot>INTERNALS<colon><colon>ISO-LINES method}@c
@methodsubindex{glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {glsl-string} (LINES @t{lines})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-STRING VARJO<dot>INTERNALS<colon><colon>LINES method}@c
@methodsubindex{glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {glsl-string} (POINTS @t{points})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-STRING VARJO<dot>INTERNALS<colon><colon>POINTS method}@c
@methodsubindex{glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {glsl-string} (QUALIFIER @t{qualifier})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-STRING VARJO<dot>INTERNALS<colon><colon>QUALIFIER method}@c
@methodsubindex{glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {glsl-versions} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-VERSIONS generic function}@c
@genericsubindex{glsl-versions}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {glsl-versions} (EXTERNAL-FUNCTION @t{external-function})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-VERSIONS VARJO<dot>INTERNALS<colon><colon>EXTERNAL-FUNCTION method}@c
@methodsubindex{glsl-versions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {ids} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>IDS generic function}@c
@genericsubindex{ids}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {ids} (FLOW-IDENTIFIER @t{flow-identifier})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>IDS VARJO<dot>INTERNALS<colon><colon>FLOW-IDENTIFIER method}@c
@methodsubindex{ids}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {implicit-args} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>IMPLICIT-ARGS generic function}@c
@genericsubindex{implicit-args}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {implicit-args} (V-FUNCTION @t{v-function})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>IMPLICIT-ARGS VARJO<dot>INTERNALS<colon><colon>V-FUNCTION method}@c
@methodsubindex{implicit-args}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {implicit-uniforms} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>IMPLICIT-UNIFORMS generic function}@c
@genericsubindex{implicit-uniforms}@c

When passed an instance of `compiled-stage` this function returns a list
of instances of `implicit-uniform-variable` which represent the uniforms
which were added implicitly during the compilation of the given stage.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Writer
@ref{go to the VARJO<dot>INTERNALS<colon><colon>(SETF IMPLICIT-UNIFORMS) generic function, , @t{(setf implicit-uniforms)}} (generic function)
@item Methods
@deffn {Method} {implicit-uniforms} (COMPILED-STAGE @t{compiled-stage})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>IMPLICIT-UNIFORMS VARJO<dot>INTERNALS<colon><colon>COMPILED-STAGE method}@c
@methodsubindex{implicit-uniforms}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {(setf implicit-uniforms)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF IMPLICIT-UNIFORMS) generic function}@c
@genericsubindex{(setf implicit-uniforms)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Reader
@ref{go to the VARJO<dot>INTERNALS<colon><colon>IMPLICIT-UNIFORMS generic function, , @t{implicit-uniforms}} (generic function)
@item Methods
@deffn {Method} {(setf implicit-uniforms)} NEW-VALUE (COMPILED-STAGE @t{compiled-stage})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF IMPLICIT-UNIFORMS) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>COMPILED-STAGE method}@c
@methodsubindex{(setf implicit-uniforms)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {in-arg-flow-ids} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>IN-ARG-FLOW-IDS generic function}@c
@genericsubindex{in-arg-flow-ids}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {in-arg-flow-ids} (V-FUNCTION @t{v-function})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>IN-ARG-FLOW-IDS VARJO<dot>INTERNALS<colon><colon>V-FUNCTION method}@c
@methodsubindex{in-arg-flow-ids}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {in-args} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>IN-ARGS generic function}@c
@genericsubindex{in-args}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {in-args} (EXTERNAL-FUNCTION @t{external-function})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>IN-ARGS VARJO<dot>INTERNALS<colon><colon>EXTERNAL-FUNCTION method}@c
@methodsubindex{in-args}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {in-declarations} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>IN-DECLARATIONS generic function}@c
@genericsubindex{in-declarations}@c
@deffnx {Generic Function} {(setf in-declarations)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF IN-DECLARATIONS) generic function}@c
@genericsubindex{(setf in-declarations)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {in-declarations} (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>IN-DECLARATIONS VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{in-declarations}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf in-declarations)} NEW-VALUE (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF IN-DECLARATIONS) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{(setf in-declarations)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {in-out-args} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>IN-OUT-ARGS generic function}@c
@genericsubindex{in-out-args}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {in-out-args} (V-FUNCTION @t{v-function})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>IN-OUT-ARGS VARJO<dot>INTERNALS<colon><colon>V-FUNCTION method}@c
@methodsubindex{in-out-args}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {input-variable-glsl} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>INPUT-VARIABLE-GLSL generic function}@c
@genericsubindex{input-variable-glsl}@c
@deffnx {Generic Function} {(setf input-variable-glsl)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF INPUT-VARIABLE-GLSL) generic function}@c
@genericsubindex{(setf input-variable-glsl)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {input-variable-glsl} (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>INPUT-VARIABLE-GLSL VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{input-variable-glsl}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf input-variable-glsl)} NEW-VALUE (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF INPUT-VARIABLE-GLSL) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{(setf input-variable-glsl)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {input-variables} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>INPUT-VARIABLES generic function}@c
@genericsubindex{input-variables}@c

When passed an instance of `stage` this function returns a list of
`input-variable` objects which respresent the input paramaters to
the stage
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Writer
@ref{go to the VARJO<dot>INTERNALS<colon><colon>(SETF INPUT-VARIABLES) generic function, , @t{(setf input-variables)}} (generic function)
@item Methods
@deffn {Method} {input-variables} (STAGE @t{stage})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>INPUT-VARIABLES VARJO<dot>INTERNALS<colon><colon>STAGE method}@c
@methodsubindex{input-variables}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {input-variables} (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>INPUT-VARIABLES VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{input-variables}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {(setf input-variables)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF INPUT-VARIABLES) generic function}@c
@genericsubindex{(setf input-variables)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Reader
@ref{go to the VARJO<dot>INTERNALS<colon><colon>INPUT-VARIABLES generic function, , @t{input-variables}} (generic function)
@item Methods
@deffn {Method} {(setf input-variables)} NEW-VALUE (STAGE @t{stage})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF INPUT-VARIABLES) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>STAGE method}@c
@methodsubindex{(setf input-variables)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf input-variables)} NEW-VALUE (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF INPUT-VARIABLES) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{(setf input-variables)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {kind} METADATA
@anchor{go to the VARI<dot>CL<colon><colon>KIND generic function}@c
@genericsubindex{kind}@c
@table @strong
@item Package
@ref{go to the VARI<dot>CL package, , @t{vari.cl}}
@item Source
@ref{go to the varjo/src/vari<dot>cl/special-operators/emit<dot>lisp file, , @t{src/vari.cl/special-operators/emit.lisp}} (file)
@item Methods
@deffn {Method} {kind} (METADATA @t{output-primitive})
@anchor{go to the VARI<dot>CL<colon><colon>KIND VARI<dot>CL<colon><colon>OUTPUT-PRIMITIVE method}@c
@methodsubindex{kind}@c
@end deffn
@deffn {Method} {kind} (METADATA-COLLECTION @t{list})
@anchor{go to the VARI<dot>CL<colon><colon>KIND COMMON-LISP<colon><colon>LIST method}@c
@methodsubindex{kind}@c
@end deffn
@end table
@end deffn
@deffn {Generic Function} {lisp-code} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>LISP-CODE generic function}@c
@genericsubindex{lisp-code}@c

When passed an instance of `stage`, `lisp-code` returns the Vari code that
acts as the body of the stage.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Writer
@ref{go to the VARJO<dot>INTERNALS<colon><colon>(SETF LISP-CODE) generic function, , @t{(setf lisp-code)}} (generic function)
@item Methods
@deffn {Method} {lisp-code} (STAGE @t{stage})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>LISP-CODE VARJO<dot>INTERNALS<colon><colon>STAGE method}@c
@methodsubindex{lisp-code}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {(setf lisp-code)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF LISP-CODE) generic function}@c
@genericsubindex{(setf lisp-code)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Reader
@ref{go to the VARJO<dot>INTERNALS<colon><colon>LISP-CODE generic function, , @t{lisp-code}} (generic function)
@item Methods
@deffn {Method} {(setf lisp-code)} NEW-VALUE (STAGE @t{stage})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF LISP-CODE) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>STAGE method}@c
@methodsubindex{(setf lisp-code)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {lisp-name} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>LISP-NAME generic function}@c
@genericsubindex{lisp-name}@c

When passed an instance of `primitive` this function returns the keyword
name of the primitive. This is the name one would pass to functions like
`make-stage`.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {lisp-name} (PATCHES @t{patches})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>LISP-NAME VARJO<dot>INTERNALS<colon><colon>PATCHES method}@c
@methodsubindex{lisp-name}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {lisp-name} (QUADS @t{quads})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>LISP-NAME VARJO<dot>INTERNALS<colon><colon>QUADS method}@c
@methodsubindex{lisp-name}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {lisp-name} (TRIANGLE-STRIP-ADJACENCY @t{triangle-strip-adjacency})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>LISP-NAME VARJO<dot>INTERNALS<colon><colon>TRIANGLE-STRIP-ADJACENCY method}@c
@methodsubindex{lisp-name}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {lisp-name} (TRIANGLES-ADJACENCY @t{triangles-adjacency})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>LISP-NAME VARJO<dot>INTERNALS<colon><colon>TRIANGLES-ADJACENCY method}@c
@methodsubindex{lisp-name}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {lisp-name} (TRIANGLE-STRIP @t{triangle-strip})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>LISP-NAME VARJO<dot>INTERNALS<colon><colon>TRIANGLE-STRIP method}@c
@methodsubindex{lisp-name}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {lisp-name} (TRIANGLE-FAN @t{triangle-fan})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>LISP-NAME VARJO<dot>INTERNALS<colon><colon>TRIANGLE-FAN method}@c
@methodsubindex{lisp-name}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {lisp-name} (TRIANGLES @t{triangles})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>LISP-NAME VARJO<dot>INTERNALS<colon><colon>TRIANGLES method}@c
@methodsubindex{lisp-name}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {lisp-name} (LINE-STRIP-ADJACENCY @t{line-strip-adjacency})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>LISP-NAME VARJO<dot>INTERNALS<colon><colon>LINE-STRIP-ADJACENCY method}@c
@methodsubindex{lisp-name}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {lisp-name} (LINES-ADJACENCY @t{lines-adjacency})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>LISP-NAME VARJO<dot>INTERNALS<colon><colon>LINES-ADJACENCY method}@c
@methodsubindex{lisp-name}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {lisp-name} (LINE-STRIP @t{line-strip})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>LISP-NAME VARJO<dot>INTERNALS<colon><colon>LINE-STRIP method}@c
@methodsubindex{lisp-name}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {lisp-name} (LINE-LOOP @t{line-loop})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>LISP-NAME VARJO<dot>INTERNALS<colon><colon>LINE-LOOP method}@c
@methodsubindex{lisp-name}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {lisp-name} (ISO-LINES @t{iso-lines})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>LISP-NAME VARJO<dot>INTERNALS<colon><colon>ISO-LINES method}@c
@methodsubindex{lisp-name}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {lisp-name} (LINES @t{lines})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>LISP-NAME VARJO<dot>INTERNALS<colon><colon>LINES method}@c
@methodsubindex{lisp-name}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {lisp-name} (POINTS @t{points})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>LISP-NAME VARJO<dot>INTERNALS<colon><colon>POINTS method}@c
@methodsubindex{lisp-name}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {location} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>LOCATION generic function}@c
@genericsubindex{location}@c

When called with an instance of `output-variable` this returns the location[0]
of the variable. These will only be populated from `output-variable`s from a
`fragment-stage`.@*

> `[0]` For info on the fragment output locations please see:@*
>       https://www.khronos.org/opengl/wiki/Fragment_Shader#Output_buffers
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {location} (OUTPUT-VARIABLE @t{output-variable})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>LOCATION VARJO<dot>INTERNALS<colon><colon>OUTPUT-VARIABLE method}@c
@methodsubindex{location}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {main-metadata} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>MAIN-METADATA generic function}@c
@genericsubindex{main-metadata}@c
@deffnx {Generic Function} {(setf main-metadata)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF MAIN-METADATA) generic function}@c
@genericsubindex{(setf main-metadata)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {main-metadata} (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>MAIN-METADATA VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{main-metadata}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf main-metadata)} NEW-VALUE (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF MAIN-METADATA) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{(setf main-metadata)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {make-regular-macro} NAME MACRO-FUNCTION CONTEXT ENV
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>MAKE-REGULAR-MACRO generic function}@c
@genericsubindex{make-regular-macro}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/macros<dot>lisp file, , @t{src/varjo.internals/macros.lisp}} (file)
@item Methods
@deffn {Method} {make-regular-macro} NAME MACRO-FUNCTION CONTEXT ENV
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>MAKE-REGULAR-MACRO COMMON-LISP<colon><colon>T COMMON-LISP<colon><colon>T COMMON-LISP<colon><colon>T COMMON-LISP<colon><colon>T method}@c
@methodsubindex{make-regular-macro}@c
@end deffn
@end table
@end deffn
@deffn {Generic Function} {make-symbol-macro} EXPANSION-FORM FUNCTION-SCOPE ENV
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>MAKE-SYMBOL-MACRO generic function}@c
@genericsubindex{make-symbol-macro}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/macros<dot>lisp file, , @t{src/varjo.internals/macros.lisp}} (file)
@item Methods
@deffn {Method} {make-symbol-macro} EXPANSION-FORM FUNCTION-SCOPE ENV
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>MAKE-SYMBOL-MACRO COMMON-LISP<colon><colon>T COMMON-LISP<colon><colon>T COMMON-LISP<colon><colon>T method}@c
@methodsubindex{make-symbol-macro}@c
@end deffn
@end table
@end deffn
@deffn {Generic Function} {max-vertices} METADATA
@anchor{go to the VARI<dot>CL<colon><colon>MAX-VERTICES generic function}@c
@genericsubindex{max-vertices}@c
@table @strong
@item Package
@ref{go to the VARI<dot>CL package, , @t{vari.cl}}
@item Source
@ref{go to the varjo/src/vari<dot>cl/special-operators/emit<dot>lisp file, , @t{src/vari.cl/special-operators/emit.lisp}} (file)
@item Methods
@deffn {Method} {max-vertices} (METADATA @t{output-primitive})
@anchor{go to the VARI<dot>CL<colon><colon>MAX-VERTICES VARI<dot>CL<colon><colon>OUTPUT-PRIMITIVE method}@c
@methodsubindex{max-vertices}@c
@end deffn
@deffn {Method} {max-vertices} (METADATA-COLLECTION @t{list})
@anchor{go to the VARI<dot>CL<colon><colon>MAX-VERTICES COMMON-LISP<colon><colon>LIST method}@c
@methodsubindex{max-vertices}@c
@end deffn
@end table
@end deffn
@deffn {Generic Function} {merge-compiled} OBJS &key TYPE-SET EMIT-SET RETURN-SET CURRENT-LINE TO-BLOCK STEMCELLS OUT-OF-SCOPE-ARGS PLACE-TREE PURE USED-TYPES
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>MERGE-COMPILED generic function}@c
@genericsubindex{merge-compiled}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {merge-compiled} (OBJS @t{list}) &key TYPE-SET CURRENT-LINE TO-BLOCK EMIT-SET RETURN-SET STEMCELLS OUT-OF-SCOPE-ARGS PLACE-TREE PURE USED-TYPES
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>MERGE-COMPILED COMMON-LISP<colon><colon>LIST method}@c
@methodsubindex{merge-compiled}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/code-object<dot>lisp file, , @t{src/varjo.internals/code-object.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {metadata-for-argument} NAME METADATA-KEY ENV
@anchor{go to the VARJO<dot>API<colon><colon>METADATA-FOR-ARGUMENT generic function}@c
@genericsubindex{metadata-for-argument}@c

When given an `environment` object from a Vari compiler-macro and a symbol
that names one of the arguments to the macro[0], `metadata-for-argument`
returns an object that holds the compile time metadata for the value@*

[0] the argument cannot be the &whole or &environment argument.
@table @strong
@item Package
@ref{go to the VARJO<dot>API package, , @t{varjo.api}}
@item Source
@ref{go to the varjo/src/varjo<dot>api/environment<dot>lisp file, , @t{src/varjo.api/environment.lisp}} (file)
@item Methods
@deffn {Method} {metadata-for-argument} (NAME @t{symbol}) (METADATA-KEY @t{symbol}) (ENV @t{macro-expansion-environment})
@anchor{go to the VARJO<dot>API<colon><colon>METADATA-FOR-ARGUMENT COMMON-LISP<colon><colon>SYMBOL COMMON-LISP<colon><colon>SYMBOL VARJO<dot>INTERNALS<colon><colon>MACRO-EXPANSION-ENVIRONMENT method}@c
@methodsubindex{metadata-for-argument}@c
@end deffn
@deffn {Method} {metadata-for-argument} (NAME @t{symbol}) (METADATA-KEY @t{symbol}) (ENV @t{compiler-macro-expansion-environment})
@anchor{go to the VARJO<dot>API<colon><colon>METADATA-FOR-ARGUMENT COMMON-LISP<colon><colon>SYMBOL COMMON-LISP<colon><colon>SYMBOL VARJO<dot>INTERNALS<colon><colon>COMPILER-MACRO-EXPANSION-ENVIRONMENT method}@c
@methodsubindex{metadata-for-argument}@c
@end deffn
@end table
@end deffn
@deffn {Generic Function} {metadata-for-flow-id} METADATA-KIND FLOW-ID ENV
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>METADATA-FOR-FLOW-ID generic function}@c
@genericsubindex{metadata-for-flow-id}@c
@deffnx {Generic Function} {(setf metadata-for-flow-id)} VALUE FLOW-ID ENV
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF METADATA-FOR-FLOW-ID) generic function}@c
@genericsubindex{(setf metadata-for-flow-id)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {metadata-for-flow-id} METADATA-KIND FLOW-ID (ENV @t{expansion-env})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>METADATA-FOR-FLOW-ID COMMON-LISP<colon><colon>T COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>EXPANSION-ENV method}@c
@methodsubindex{metadata-for-flow-id}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/environment<dot>lisp file, , @t{src/varjo.internals/environment.lisp}} (file)
@end table
@end deffn
@deffn {Method} {metadata-for-flow-id} (METADATA-KIND @t{symbol}) (FLOW-ID @t{flow-identifier}) (ENV @t{environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>METADATA-FOR-FLOW-ID COMMON-LISP<colon><colon>SYMBOL VARJO<dot>INTERNALS<colon><colon>FLOW-IDENTIFIER VARJO<dot>INTERNALS<colon><colon>ENVIRONMENT method}@c
@methodsubindex{metadata-for-flow-id}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/environment<dot>lisp file, , @t{src/varjo.internals/environment.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf metadata-for-flow-id)} (DATA @t{standard-value-metadata}) (FLOW-ID @t{flow-identifier}) (ENV @t{environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF METADATA-FOR-FLOW-ID) VARJO<dot>INTERNALS<colon><colon>STANDARD-VALUE-METADATA VARJO<dot>INTERNALS<colon><colon>FLOW-IDENTIFIER VARJO<dot>INTERNALS<colon><colon>ENVIRONMENT method}@c
@methodsubindex{(setf metadata-for-flow-id)}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/environment<dot>lisp file, , @t{src/varjo.internals/environment.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {metadata-for-variable} NAME METADATA-KEY ENV
@anchor{go to the VARJO<dot>API<colon><colon>METADATA-FOR-VARIABLE generic function}@c
@genericsubindex{metadata-for-variable}@c

When given an `environment` object from a Vari compiler-macro and a symbol
that names a variable currently in scope to the macro[0],
`metadata-for-variable` returns an object that holds the compile time metadata
for the value bound to that variable.@*

[0] the argument cannot be the &whole or &environment argument.
@table @strong
@item Package
@ref{go to the VARJO<dot>API package, , @t{varjo.api}}
@item Source
@ref{go to the varjo/src/varjo<dot>api/environment<dot>lisp file, , @t{src/varjo.api/environment.lisp}} (file)
@item Methods
@deffn {Method} {metadata-for-variable} (NAME @t{symbol}) (METADATA-KEY @t{symbol}) (ENV @t{extended-environment})
@anchor{go to the VARJO<dot>API<colon><colon>METADATA-FOR-VARIABLE COMMON-LISP<colon><colon>SYMBOL COMMON-LISP<colon><colon>SYMBOL VARJO<dot>INTERNALS<colon><colon>EXTENDED-ENVIRONMENT method}@c
@methodsubindex{metadata-for-variable}@c
@end deffn
@end table
@end deffn
@deffn {Generic Function} {name} OBJ
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>NAME generic function}@c
@genericsubindex{name}@c

When passed an instance of `qualfiier` `shader-variable or `external-function`
the function returns the name of the qualfiier/variable/function respectively.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {name} (V-FUNCTION @t{v-function})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>NAME VARJO<dot>INTERNALS<colon><colon>V-FUNCTION method}@c
@methodsubindex{name}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {name} (V-COMPILER-MACRO @t{v-compiler-macro})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>NAME VARJO<dot>INTERNALS<colon><colon>V-COMPILER-MACRO method}@c
@methodsubindex{name}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {name} (V-REGULAR-MACRO @t{v-regular-macro})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>NAME VARJO<dot>INTERNALS<colon><colon>V-REGULAR-MACRO method}@c
@methodsubindex{name}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {name} (CAPTURED-VAR @t{captured-var})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>NAME VARJO<dot>INTERNALS<colon><colon>CAPTURED-VAR method}@c
@methodsubindex{name}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {name} (STEMCELL @t{stemcell})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>NAME VARJO<dot>INTERNALS<colon><colon>STEMCELL method}@c
@methodsubindex{name}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {name} (EXTERNAL-FUNCTION @t{external-function})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>NAME VARJO<dot>INTERNALS<colon><colon>EXTERNAL-FUNCTION method}@c
@methodsubindex{name}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {name} (QUALIFIER @t{qualifier})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>NAME VARJO<dot>INTERNALS<colon><colon>QUALIFIER method}@c
@methodsubindex{name}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {name} (SHADER-VARIABLE @t{shader-variable})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>NAME VARJO<dot>INTERNALS<colon><colon>SHADER-VARIABLE method}@c
@methodsubindex{name}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {name} (COMPILED-FUNC @t{compiled-function-result})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>NAME VARJO<dot>INTERNALS<colon><colon>COMPILED-FUNCTION-RESULT method}@c
@methodsubindex{name}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {nth-return-name} N STAGE &optional INCLUDE-INSTANCE-NAME
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>NTH-RETURN-NAME generic function}@c
@genericsubindex{nth-return-name}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/return-set<dot>lisp file, , @t{src/varjo.internals/return-set.lisp}} (file)
@item Methods
@deffn {Method} {nth-return-name} N (STAGE @t{stage}) &optional INCLUDE-INSTANCE-NAME
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>NTH-RETURN-NAME COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>STAGE method}@c
@methodsubindex{nth-return-name}@c
@end deffn
@deffn {Method} {nth-return-name} N (STAGE @t{tessellation-control-stage}) &optional INCLUDE-INSTANCE-NAME
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>NTH-RETURN-NAME COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>TESSELLATION-CONTROL-STAGE method}@c
@methodsubindex{nth-return-name}@c
@end deffn
@deffn {Method} {nth-return-name} N (STAGE @t{tessellation-evaluation-stage}) &optional INCLUDE-INSTANCE-NAME
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>NTH-RETURN-NAME COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>TESSELLATION-EVALUATION-STAGE method}@c
@methodsubindex{nth-return-name}@c
@end deffn
@deffn {Method} {nth-return-name} N (STAGE @t{vertex-stage}) &optional INCLUDE-INSTANCE-NAME
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>NTH-RETURN-NAME COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>VERTEX-STAGE method}@c
@methodsubindex{nth-return-name}@c
@end deffn
@deffn {Method} {nth-return-name} N (STAGE @t{fragment-stage}) &optional INCLUDE-INSTANCE-NAME
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>NTH-RETURN-NAME COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>FRAGMENT-STAGE method}@c
@methodsubindex{nth-return-name}@c
@end deffn
@end table
@end deffn
@deffn {Generic Function} {order} METADATA
@anchor{go to the VARI<dot>CL<colon><colon>ORDER generic function}@c
@genericsubindex{order}@c
@table @strong
@item Package
@ref{go to the VARI<dot>CL package, , @t{vari.cl}}
@item Source
@ref{go to the varjo/src/vari<dot>cl/special-operators/emit<dot>lisp file, , @t{src/vari.cl/special-operators/emit.lisp}} (file)
@item Methods
@deffn {Method} {order} (METADATA @t{tessellate-to})
@anchor{go to the VARI<dot>CL<colon><colon>ORDER VARI<dot>CL<colon><colon>TESSELLATE-TO method}@c
@methodsubindex{order}@c
@end deffn
@deffn {Method} {order} (METADATA-COLLECTION @t{list})
@anchor{go to the VARI<dot>CL<colon><colon>ORDER COMMON-LISP<colon><colon>LIST method}@c
@methodsubindex{order}@c
@end deffn
@end table
@end deffn
@deffn {Generic Function} {origin-env} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ORIGIN-ENV generic function}@c
@genericsubindex{origin-env}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {origin-env} (CAPTURED-VAR @t{captured-var})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ORIGIN-ENV VARJO<dot>INTERNALS<colon><colon>CAPTURED-VAR method}@c
@methodsubindex{origin-env}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {out-declarations} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>OUT-DECLARATIONS generic function}@c
@genericsubindex{out-declarations}@c
@deffnx {Generic Function} {(setf out-declarations)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF OUT-DECLARATIONS) generic function}@c
@genericsubindex{(setf out-declarations)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {out-declarations} (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>OUT-DECLARATIONS VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{out-declarations}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf out-declarations)} NEW-VALUE (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF OUT-DECLARATIONS) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{(setf out-declarations)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {out-of-scope-args} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>OUT-OF-SCOPE-ARGS generic function}@c
@genericsubindex{out-of-scope-args}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {out-of-scope-args} (COMPILED @t{compiled})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>OUT-OF-SCOPE-ARGS VARJO<dot>INTERNALS<colon><colon>COMPILED method}@c
@methodsubindex{out-of-scope-args}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {out-set} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>OUT-SET generic function}@c
@genericsubindex{out-set}@c
@deffnx {Generic Function} {(setf out-set)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF OUT-SET) generic function}@c
@genericsubindex{(setf out-set)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {out-set} (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>OUT-SET VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{out-set}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf out-set)} NEW-VALUE (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF OUT-SET) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{(setf out-set)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {output-variable-glsl} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>OUTPUT-VARIABLE-GLSL generic function}@c
@genericsubindex{output-variable-glsl}@c
@deffnx {Generic Function} {(setf output-variable-glsl)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF OUTPUT-VARIABLE-GLSL) generic function}@c
@genericsubindex{(setf output-variable-glsl)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {output-variable-glsl} (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>OUTPUT-VARIABLE-GLSL VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{output-variable-glsl}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf output-variable-glsl)} NEW-VALUE (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF OUTPUT-VARIABLE-GLSL) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{(setf output-variable-glsl)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {output-variables} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>OUTPUT-VARIABLES generic function}@c
@genericsubindex{output-variables}@c

When passed an instance of `compiled-stage` this function returns a list
of instances of `output-variable` which represent the data output from
the given stage.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Writer
@ref{go to the VARJO<dot>INTERNALS<colon><colon>(SETF OUTPUT-VARIABLES) generic function, , @t{(setf output-variables)}} (generic function)
@item Methods
@deffn {Method} {output-variables} (COMPILED-STAGE @t{compiled-stage})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>OUTPUT-VARIABLES VARJO<dot>INTERNALS<colon><colon>COMPILED-STAGE method}@c
@methodsubindex{output-variables}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {output-variables} (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>OUTPUT-VARIABLES VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{output-variables}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {(setf output-variables)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF OUTPUT-VARIABLES) generic function}@c
@genericsubindex{(setf output-variables)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Reader
@ref{go to the VARJO<dot>INTERNALS<colon><colon>OUTPUT-VARIABLES generic function, , @t{output-variables}} (generic function)
@item Methods
@deffn {Method} {(setf output-variables)} NEW-VALUE (COMPILED-STAGE @t{compiled-stage})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF OUTPUT-VARIABLES) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>COMPILED-STAGE method}@c
@methodsubindex{(setf output-variables)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf output-variables)} NEW-VALUE (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF OUTPUT-VARIABLES) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{(setf output-variables)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {place-tree} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>PLACE-TREE generic function}@c
@genericsubindex{place-tree}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {place-tree} (COMPILED @t{compiled})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>PLACE-TREE VARJO<dot>INTERNALS<colon><colon>COMPILED method}@c
@methodsubindex{place-tree}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {previous-stage} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>PREVIOUS-STAGE generic function}@c
@genericsubindex{previous-stage}@c
@deffnx {Generic Function} {(setf previous-stage)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF PREVIOUS-STAGE) generic function}@c
@genericsubindex{(setf previous-stage)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {previous-stage} (STAGE @t{stage})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>PREVIOUS-STAGE VARJO<dot>INTERNALS<colon><colon>STAGE method}@c
@methodsubindex{previous-stage}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf previous-stage)} NEW-VALUE (STAGE @t{stage})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF PREVIOUS-STAGE) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>STAGE method}@c
@methodsubindex{(setf previous-stage)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {primary-type} COMPILED
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>PRIMARY-TYPE generic function}@c
@genericsubindex{primary-type}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {primary-type} (SET @t{vector})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>PRIMARY-TYPE COMMON-LISP<colon><colon>VECTOR method}@c
@methodsubindex{primary-type}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/code-object<dot>lisp file, , @t{src/varjo.internals/code-object.lisp}} (file)
@end table
@end deffn
@deffn {Method} {primary-type} (COMPILED @t{compiled})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>PRIMARY-TYPE VARJO<dot>INTERNALS<colon><colon>COMPILED method}@c
@methodsubindex{primary-type}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/code-object<dot>lisp file, , @t{src/varjo.internals/code-object.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {primitive} METADATA
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>PRIMITIVE generic function}@c
@genericsubindex{primitive}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/vari<dot>cl/special-operators/emit<dot>lisp file, , @t{src/vari.cl/special-operators/emit.lisp}} (file)
@item Methods
@deffn {Method} {primitive} (METADATA @t{tessellate-to})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>PRIMITIVE VARI<dot>CL<colon><colon>TESSELLATE-TO method}@c
@methodsubindex{primitive}@c
@end deffn
@deffn {Method} {primitive} (METADATA-COLLECTION @t{list})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>PRIMITIVE COMMON-LISP<colon><colon>LIST method}@c
@methodsubindex{primitive}@c
@end deffn
@end table
@end deffn
@deffn {Generic Function} {primitive-in} PP
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>PRIMITIVE-IN generic function}@c
@genericsubindex{primitive-in}@c

When passed an instance of `stage` this function returns an instance of `primitive`
or nil.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Writer
@ref{go to the VARJO<dot>INTERNALS<colon><colon>(SETF PRIMITIVE-IN) generic function, , @t{(setf primitive-in)}} (generic function)
@item Methods
@deffn {Method} {primitive-in} (ENV @t{environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>PRIMITIVE-IN VARJO<dot>INTERNALS<colon><colon>ENVIRONMENT method}@c
@methodsubindex{primitive-in}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/environment<dot>lisp file, , @t{src/varjo.internals/environment.lisp}} (file)
@end table
@end deffn
@deffn {Method} {primitive-in} (STAGE @t{stage})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>PRIMITIVE-IN VARJO<dot>INTERNALS<colon><colon>STAGE method}@c
@methodsubindex{primitive-in}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {primitive-in} (PP @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>PRIMITIVE-IN VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{primitive-in}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {(setf primitive-in)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF PRIMITIVE-IN) generic function}@c
@genericsubindex{(setf primitive-in)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Reader
@ref{go to the VARJO<dot>INTERNALS<colon><colon>PRIMITIVE-IN generic function, , @t{primitive-in}} (generic function)
@item Methods
@deffn {Method} {(setf primitive-in)} NEW-VALUE (STAGE @t{stage})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF PRIMITIVE-IN) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>STAGE method}@c
@methodsubindex{(setf primitive-in)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {primitive-out} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>PRIMITIVE-OUT generic function}@c
@genericsubindex{primitive-out}@c

When passed an instance of `compiled-stage` this function returns either
NIL or an instance of 'primitive'. This represent the primitive that
could/was be passed to the next stage.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Writer
@ref{go to the VARJO<dot>INTERNALS<colon><colon>(SETF PRIMITIVE-OUT) generic function, , @t{(setf primitive-out)}} (generic function)
@item Methods
@deffn {Method} {primitive-out} (COMPILED-STAGE @t{compiled-stage})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>PRIMITIVE-OUT VARJO<dot>INTERNALS<colon><colon>COMPILED-STAGE method}@c
@methodsubindex{primitive-out}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {primitive-out} (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>PRIMITIVE-OUT VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{primitive-out}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {(setf primitive-out)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF PRIMITIVE-OUT) generic function}@c
@genericsubindex{(setf primitive-out)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Reader
@ref{go to the VARJO<dot>INTERNALS<colon><colon>PRIMITIVE-OUT generic function, , @t{primitive-out}} (generic function)
@item Methods
@deffn {Method} {(setf primitive-out)} NEW-VALUE (COMPILED-STAGE @t{compiled-stage})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF PRIMITIVE-OUT) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>COMPILED-STAGE method}@c
@methodsubindex{(setf primitive-out)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf primitive-out)} NEW-VALUE (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF PRIMITIVE-OUT) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{(setf primitive-out)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {pure-p} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>PURE-P generic function}@c
@genericsubindex{pure-p}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {pure-p} (V-FUNCTION @t{v-function})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>PURE-P VARJO<dot>INTERNALS<colon><colon>V-FUNCTION method}@c
@methodsubindex{pure-p}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {pure-p} (COMPILED @t{compiled})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>PURE-P VARJO<dot>INTERNALS<colon><colon>COMPILED method}@c
@methodsubindex{pure-p}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {qualifier=} QUAL-A QUAL-B
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>QUALIFIER= generic function}@c
@genericsubindex{qualifier=}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {qualifier=} A B
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>QUALIFIER= COMMON-LISP<colon><colon>T COMMON-LISP<colon><colon>T method}@c
@methodsubindex{qualifier=}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/qualifiers<dot>lisp file, , @t{src/varjo.internals/qualifiers.lisp}} (file)
@end table
@end deffn
@deffn {Method} {qualifier=} (QUAL-A @t{feedback-qualifier}) (QUAL-B @t{feedback-qualifier})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>QUALIFIER= VARJO<dot>INTERNALS<colon><colon>FEEDBACK-QUALIFIER VARJO<dot>INTERNALS<colon><colon>FEEDBACK-QUALIFIER method}@c
@methodsubindex{qualifier=}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/qualifiers<dot>lisp file, , @t{src/varjo.internals/qualifiers.lisp}} (file)
@end table
@end deffn
@deffn {Method} {qualifier=} (QUAL-A @t{qualifier}) (QUAL-B @t{qualifier})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>QUALIFIER= VARJO<dot>INTERNALS<colon><colon>QUALIFIER VARJO<dot>INTERNALS<colon><colon>QUALIFIER method}@c
@methodsubindex{qualifier=}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/qualifiers<dot>lisp file, , @t{src/varjo.internals/qualifiers.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {qualifiers} OBJ
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>QUALIFIERS generic function}@c
@genericsubindex{qualifiers}@c

When passed an instance of `shader-variable` or Varjo type object this function
returns a list of any qualifiers that apply to the value (of the variable or
the value to which the type applies)
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {qualifiers} (V-TYPE @t{v-type})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>QUALIFIERS VARI<dot>TYPES<colon><colon>V-TYPE method}@c
@methodsubindex{qualifiers}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/early-types<dot>lisp file, , @t{src/varjo.internals/types/early-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {qualifiers} (OBJ @t{shader-variable})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>QUALIFIERS VARJO<dot>INTERNALS<colon><colon>SHADER-VARIABLE method}@c
@methodsubindex{qualifiers}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/qualifiers<dot>lisp file, , @t{src/varjo.internals/qualifiers.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {qualify-type} TYPE QUALIFIERS
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>QUALIFY-TYPE generic function}@c
@genericsubindex{qualify-type}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {qualify-type} (TYPE @t{v-type}) QUALIFIERS
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>QUALIFY-TYPE VARI<dot>TYPES<colon><colon>V-TYPE COMMON-LISP<colon><colon>T method}@c
@methodsubindex{qualify-type}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/early-types<dot>lisp file, , @t{src/varjo.internals/types/early-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {raw-out-set} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>RAW-OUT-SET generic function}@c
@genericsubindex{raw-out-set}@c
@deffnx {Generic Function} {(setf raw-out-set)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF RAW-OUT-SET) generic function}@c
@genericsubindex{(setf raw-out-set)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {raw-out-set} (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>RAW-OUT-SET VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{raw-out-set}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf raw-out-set)} NEW-VALUE (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF RAW-OUT-SET) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{(setf raw-out-set)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {replace-flow-id} TYPE FLOW-ID
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>REPLACE-FLOW-ID generic function}@c
@genericsubindex{replace-flow-id}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/flow<dot>lisp file, , @t{src/varjo.internals/flow.lisp}} (file)
@item Methods
@deffn {Method} {replace-flow-id} (TYPE @t{v-type}) (FLOW-ID @t{flow-identifier})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>REPLACE-FLOW-ID VARI<dot>TYPES<colon><colon>V-TYPE VARJO<dot>INTERNALS<colon><colon>FLOW-IDENTIFIER method}@c
@methodsubindex{replace-flow-id}@c
@end deffn
@end table
@end deffn
@deffn {Generic Function} {return-set} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>RETURN-SET generic function}@c
@genericsubindex{return-set}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {return-set} (COMPILED-FUNCTION-RESULT @t{compiled-function-result})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>RETURN-SET VARJO<dot>INTERNALS<colon><colon>COMPILED-FUNCTION-RESULT method}@c
@methodsubindex{return-set}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {return-set} (COMPILED @t{compiled})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>RETURN-SET VARJO<dot>INTERNALS<colon><colon>COMPILED method}@c
@methodsubindex{return-set}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {score} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>SCORE generic function}@c
@genericsubindex{score}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {score} (FUNC-MATCH @t{func-match})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>SCORE VARJO<dot>INTERNALS<colon><colon>FUNC-MATCH method}@c
@methodsubindex{score}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {secondary-score} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>SECONDARY-SCORE generic function}@c
@genericsubindex{secondary-score}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {secondary-score} (FUNC-MATCH @t{func-match})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>SECONDARY-SCORE VARJO<dot>INTERNALS<colon><colon>FUNC-MATCH method}@c
@methodsubindex{secondary-score}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {set-flow-id} TYPE FLOW-ID
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>SET-FLOW-ID generic function}@c
@genericsubindex{set-flow-id}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/flow<dot>lisp file, , @t{src/varjo.internals/flow.lisp}} (file)
@item Methods
@deffn {Method} {set-flow-id} (TYPE @t{v-type}) (FLOW-ID @t{flow-identifier})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>SET-FLOW-ID VARI<dot>TYPES<colon><colon>V-TYPE VARJO<dot>INTERNALS<colon><colon>FLOW-IDENTIFIER method}@c
@methodsubindex{set-flow-id}@c
@end deffn
@end table
@end deffn
@deffn {Generic Function} {signatures} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>SIGNATURES generic function}@c
@genericsubindex{signatures}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {signatures} (E @t{environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>SIGNATURES VARJO<dot>INTERNALS<colon><colon>ENVIRONMENT method}@c
@methodsubindex{signatures}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/environment<dot>lisp file, , @t{src/varjo.internals/environment.lisp}} (file)
@end table
@end deffn
@deffn {Method} {signatures} (COMPILED-FUNCTION-RESULT @t{compiled-function-result})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>SIGNATURES VARJO<dot>INTERNALS<colon><colon>COMPILED-FUNCTION-RESULT method}@c
@methodsubindex{signatures}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {spacing} METADATA
@anchor{go to the VARI<dot>CL<colon><colon>SPACING generic function}@c
@genericsubindex{spacing}@c
@table @strong
@item Package
@ref{go to the VARI<dot>CL package, , @t{vari.cl}}
@item Source
@ref{go to the varjo/src/vari<dot>cl/special-operators/emit<dot>lisp file, , @t{src/vari.cl/special-operators/emit.lisp}} (file)
@item Methods
@deffn {Method} {spacing} (METADATA @t{tessellate-to})
@anchor{go to the VARI<dot>CL<colon><colon>SPACING VARI<dot>CL<colon><colon>TESSELLATE-TO method}@c
@methodsubindex{spacing}@c
@end deffn
@deffn {Method} {spacing} (METADATA-COLLECTION @t{list})
@anchor{go to the VARI<dot>CL<colon><colon>SPACING COMMON-LISP<colon><colon>LIST method}@c
@methodsubindex{spacing}@c
@end deffn
@end table
@end deffn
@deffn {Generic Function} {stage} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>STAGE generic function}@c
@genericsubindex{stage}@c
@deffnx {Generic Function} {(setf stage)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF STAGE) generic function}@c
@genericsubindex{(setf stage)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {stage} (ENV @t{environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>STAGE VARJO<dot>INTERNALS<colon><colon>ENVIRONMENT method}@c
@methodsubindex{stage}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/environment<dot>lisp file, , @t{src/varjo.internals/environment.lisp}} (file)
@end table
@end deffn
@deffn {Method} {stage} (BASE-ENVIRONMENT @t{base-environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>STAGE VARJO<dot>INTERNALS<colon><colon>BASE-ENVIRONMENT method}@c
@methodsubindex{stage}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {stage} (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>STAGE VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{stage}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf stage)} NEW-VALUE (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF STAGE) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{(setf stage)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {stage-where-first-return-is-position-p} STAGE
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>STAGE-WHERE-FIRST-RETURN-IS-POSITION-P generic function}@c
@genericsubindex{stage-where-first-return-is-position-p}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/stages<dot>lisp file, , @t{src/varjo.internals/stages.lisp}} (file)
@item Methods
@deffn {Method} {stage-where-first-return-is-position-p} (STAGE @t{stage})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>STAGE-WHERE-FIRST-RETURN-IS-POSITION-P VARJO<dot>INTERNALS<colon><colon>STAGE method}@c
@methodsubindex{stage-where-first-return-is-position-p}@c
@end deffn
@end table
@end deffn
@deffn {Generic Function} {starting-stage} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>STARTING-STAGE generic function}@c
@genericsubindex{starting-stage}@c
@deffnx {Generic Function} {(setf starting-stage)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF STARTING-STAGE) generic function}@c
@genericsubindex{(setf starting-stage)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {starting-stage} (COMPILED-STAGE @t{compiled-stage})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>STARTING-STAGE VARJO<dot>INTERNALS<colon><colon>COMPILED-STAGE method}@c
@methodsubindex{starting-stage}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf starting-stage)} NEW-VALUE (COMPILED-STAGE @t{compiled-stage})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF STARTING-STAGE) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>COMPILED-STAGE method}@c
@methodsubindex{(setf starting-stage)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {stemcells} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>STEMCELLS generic function}@c
@genericsubindex{stemcells}@c
@deffnx {Generic Function} {(setf stemcells)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF STEMCELLS) generic function}@c
@genericsubindex{(setf stemcells)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {stemcells} (COMPILED-FUNCTION-RESULT @t{compiled-function-result})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>STEMCELLS VARJO<dot>INTERNALS<colon><colon>COMPILED-FUNCTION-RESULT method}@c
@methodsubindex{stemcells}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {stemcells} (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>STEMCELLS VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{stemcells}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf stemcells)} NEW-VALUE (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF STEMCELLS) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{(setf stemcells)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {stemcells} (COMPILED @t{compiled})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>STEMCELLS VARJO<dot>INTERNALS<colon><colon>COMPILED method}@c
@methodsubindex{stemcells}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {stemcells-allowed} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>STEMCELLS-ALLOWED generic function}@c
@genericsubindex{stemcells-allowed}@c

When passed an instance of `stage` this function returns a `generalized-boolean`

If this argument is not NIL then the compiler will allow the capture@*
of globally scoped variables from Common Lisp and use of `add-lisp-form-as-uniform`
from within macros.@*

For details on how to support 'global variable capture' please see the documentation
for `with-stemcell-infer-hook` & `with-constant-inject-hook`
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Writer
@ref{go to the VARJO<dot>INTERNALS<colon><colon>(SETF STEMCELLS-ALLOWED) generic function, , @t{(setf stemcells-allowed)}} (generic function)
@item Methods
@deffn {Method} {stemcells-allowed} (STAGE @t{stage})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>STEMCELLS-ALLOWED VARJO<dot>INTERNALS<colon><colon>STAGE method}@c
@methodsubindex{stemcells-allowed}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {(setf stemcells-allowed)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF STEMCELLS-ALLOWED) generic function}@c
@genericsubindex{(setf stemcells-allowed)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Reader
@ref{go to the VARJO<dot>INTERNALS<colon><colon>STEMCELLS-ALLOWED generic function, , @t{stemcells-allowed}} (generic function)
@item Methods
@deffn {Method} {(setf stemcells-allowed)} NEW-VALUE (STAGE @t{stage})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF STEMCELLS-ALLOWED) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>STAGE method}@c
@methodsubindex{(setf stemcells-allowed)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {swizzlable-p} X
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>SWIZZLABLE-P generic function}@c
@genericsubindex{swizzlable-p}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@item Methods
@deffn {Method} {swizzlable-p} (X @t{compiled})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>SWIZZLABLE-P VARJO<dot>INTERNALS<colon><colon>COMPILED method}@c
@methodsubindex{swizzlable-p}@c
@end deffn
@deffn {Method} {swizzlable-p} (X @t{v-type})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>SWIZZLABLE-P VARI<dot>TYPES<colon><colon>V-TYPE method}@c
@methodsubindex{swizzlable-p}@c
@end deffn
@end table
@end deffn
@deffn {Generic Function} {to-arg-form} UNIFORM
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>TO-ARG-FORM generic function}@c
@genericsubindex{to-arg-form}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {to-arg-form} (OUT-VAR @t{output-variable})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>TO-ARG-FORM VARJO<dot>INTERNALS<colon><colon>OUTPUT-VARIABLE method}@c
@methodsubindex{to-arg-form}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/rolling-translate<dot>lisp file, , @t{src/varjo.internals/rolling-translate.lisp}} (file)
@end table
@end deffn
@deffn {Method} {to-arg-form} (IN-VAR @t{input-variable})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>TO-ARG-FORM VARJO<dot>INTERNALS<colon><colon>INPUT-VARIABLE method}@c
@methodsubindex{to-arg-form}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/rolling-translate<dot>lisp file, , @t{src/varjo.internals/rolling-translate.lisp}} (file)
@end table
@end deffn
@deffn {Method} {to-arg-form} (UNIFORM @t{uniform-variable})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>TO-ARG-FORM VARJO<dot>INTERNALS<colon><colon>UNIFORM-VARIABLE method}@c
@methodsubindex{to-arg-form}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/rolling-translate<dot>lisp file, , @t{src/varjo.internals/rolling-translate.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {to-block} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>TO-BLOCK generic function}@c
@genericsubindex{to-block}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {to-block} (COMPILED @t{compiled})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>TO-BLOCK VARJO<dot>INTERNALS<colon><colon>COMPILED method}@c
@methodsubindex{to-block}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {top-level-scoped-metadata} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>TOP-LEVEL-SCOPED-METADATA generic function}@c
@genericsubindex{top-level-scoped-metadata}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {top-level-scoped-metadata} (COMPILED-FUNCTION-RESULT @t{compiled-function-result})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>TOP-LEVEL-SCOPED-METADATA VARJO<dot>INTERNALS<colon><colon>COMPILED-FUNCTION-RESULT method}@c
@methodsubindex{top-level-scoped-metadata}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {translate} STAGE
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>TRANSLATE generic function}@c
@genericsubindex{translate}@c

When called with an instance of `stage` `translate` compiles it, returning
an instance of `compiled-stage`
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/translate<dot>lisp file, , @t{src/varjo.internals/translate.lisp}} (file)
@item Methods
@deffn {Method} {translate} (STAGE @t{stage})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>TRANSLATE VARJO<dot>INTERNALS<colon><colon>STAGE method}@c
@methodsubindex{translate}@c
@end deffn
@end table
@end deffn
@deffn {Generic Function} {type->type-spec} TYPE
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>TYPE->TYPE-SPEC generic function}@c
@genericsubindex{type->type-spec}@c

`type->type-spec` takes a Varjo type object and returns a Vari `type-spec`.

As (during compilation) type objects can carry metadata that may not be
representable in a `type-spec` this conversion can be 'lossy'.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {type->type-spec} (TYPE @t{v-depth-range-parameters})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>TYPE->TYPE-SPEC VARI<dot>GLSL<colon><colon>V-DEPTH-RANGE-PARAMETERS method}@c
@methodsubindex{type->type-spec}@c
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>glsl/built-in-types<dot>lisp file, , @t{src/vari.glsl/built-in-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {type->type-spec} (TYPE @t{v-function-type})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>TYPE->TYPE-SPEC VARI<dot>TYPES<colon><colon>V-FUNCTION-TYPE method}@c
@methodsubindex{type->type-spec}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {type->type-spec} (TYPE @t{return-type-generator})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>TYPE->TYPE-SPEC VARJO<dot>INTERNALS<colon><colon>RETURN-TYPE-GENERATOR method}@c
@methodsubindex{type->type-spec}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {type->type-spec} (TYPE @t{v-any-one-of})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>TYPE->TYPE-SPEC VARI<dot>TYPES<colon><colon>V-ANY-ONE-OF method}@c
@methodsubindex{type->type-spec}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {type->type-spec} (TYPE @t{v-or})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>TYPE->TYPE-SPEC VARI<dot>TYPES<colon><colon>V-OR method}@c
@methodsubindex{type->type-spec}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {type->type-spec} (TYPE @t{v-block-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>TYPE->TYPE-SPEC VARI<dot>TYPES<colon><colon>V-BLOCK-ARRAY method}@c
@methodsubindex{type->type-spec}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {type->type-spec} (TYPE @t{v-block-struct})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>TYPE->TYPE-SPEC VARI<dot>TYPES<colon><colon>V-BLOCK-STRUCT method}@c
@methodsubindex{type->type-spec}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {type->type-spec} (TYPE @t{v-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>TYPE->TYPE-SPEC VARI<dot>TYPES<colon><colon>V-ARRAY method}@c
@methodsubindex{type->type-spec}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {type->type-spec} (TYPE @t{v-type})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>TYPE->TYPE-SPEC VARI<dot>TYPES<colon><colon>V-TYPE method}@c
@methodsubindex{type->type-spec}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/early-types<dot>lisp file, , @t{src/varjo.internals/types/early-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {type-set} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>TYPE-SET generic function}@c
@genericsubindex{type-set}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {type-set} (COMPILED @t{compiled})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>TYPE-SET VARJO<dot>INTERNALS<colon><colon>COMPILED method}@c
@methodsubindex{type-set}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {type-spec->type} SPEC &optional FLOW-ID
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>TYPE-SPEC->TYPE generic function}@c
@genericsubindex{type-spec->type}@c

`type-spec->type` takes a Vari `type-spec` and returns a new instance of
Varjo type object that represents it.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {type-spec->type} SPEC &optional FLOW-ID
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>TYPE-SPEC->TYPE COMMON-LISP<colon><colon>T method}@c
@methodsubindex{type-spec->type}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/early-types<dot>lisp file, , @t{src/varjo.internals/types/early-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {uniform-variables} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>UNIFORM-VARIABLES generic function}@c
@genericsubindex{uniform-variables}@c

When passed an instance of `stage` this function returns a list of
`uniform-variable` objects which respresent the uniform paramaters to
the stage
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Writer
@ref{go to the VARJO<dot>INTERNALS<colon><colon>(SETF UNIFORM-VARIABLES) generic function, , @t{(setf uniform-variables)}} (generic function)
@item Methods
@deffn {Method} {uniform-variables} (STAGE @t{stage})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>UNIFORM-VARIABLES VARJO<dot>INTERNALS<colon><colon>STAGE method}@c
@methodsubindex{uniform-variables}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {(setf uniform-variables)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF UNIFORM-VARIABLES) generic function}@c
@genericsubindex{(setf uniform-variables)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Reader
@ref{go to the VARJO<dot>INTERNALS<colon><colon>UNIFORM-VARIABLES generic function, , @t{uniform-variables}} (generic function)
@item Methods
@deffn {Method} {(setf uniform-variables)} NEW-VALUE (STAGE @t{stage})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF UNIFORM-VARIABLES) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>STAGE method}@c
@methodsubindex{(setf uniform-variables)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {uniforms} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>UNIFORMS generic function}@c
@genericsubindex{uniforms}@c
@deffnx {Generic Function} {(setf uniforms)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF UNIFORMS) generic function}@c
@genericsubindex{(setf uniforms)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {uniforms} (EXTERNAL-FUNCTION @t{external-function})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>UNIFORMS VARJO<dot>INTERNALS<colon><colon>EXTERNAL-FUNCTION method}@c
@methodsubindex{uniforms}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {uniforms} (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>UNIFORMS VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{uniforms}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf uniforms)} NEW-VALUE (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF UNIFORMS) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{(setf uniforms)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {used-external-functions} E
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>USED-EXTERNAL-FUNCTIONS generic function}@c
@genericsubindex{used-external-functions}@c

When passed an instance of `compiled-stage` this function returns a list
of `external-function` objects which were used by the given stage.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Writer
@ref{go to the VARJO<dot>INTERNALS<colon><colon>(SETF USED-EXTERNAL-FUNCTIONS) generic function, , @t{(setf used-external-functions)}} (generic function)
@item Methods
@deffn {Method} {used-external-functions} (E @t{environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>USED-EXTERNAL-FUNCTIONS VARJO<dot>INTERNALS<colon><colon>ENVIRONMENT method}@c
@methodsubindex{used-external-functions}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/environment<dot>lisp file, , @t{src/varjo.internals/environment.lisp}} (file)
@end table
@end deffn
@deffn {Method} {used-external-functions} (COMPILED-STAGE @t{compiled-stage})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>USED-EXTERNAL-FUNCTIONS VARJO<dot>INTERNALS<colon><colon>COMPILED-STAGE method}@c
@methodsubindex{used-external-functions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {used-external-functions} (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>USED-EXTERNAL-FUNCTIONS VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{used-external-functions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {(setf used-external-functions)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF USED-EXTERNAL-FUNCTIONS) generic function}@c
@genericsubindex{(setf used-external-functions)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Reader
@ref{go to the VARJO<dot>INTERNALS<colon><colon>USED-EXTERNAL-FUNCTIONS generic function, , @t{used-external-functions}} (generic function)
@item Methods
@deffn {Method} {(setf used-external-functions)} NEW-VALUE (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF USED-EXTERNAL-FUNCTIONS) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{(setf used-external-functions)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {used-types} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>USED-TYPES generic function}@c
@genericsubindex{used-types}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {used-types} (COMPILED-FUNCTION-RESULT @t{compiled-function-result})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>USED-TYPES VARJO<dot>INTERNALS<colon><colon>COMPILED-FUNCTION-RESULT method}@c
@methodsubindex{used-types}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {used-types} (COMPILED @t{compiled})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>USED-TYPES VARJO<dot>INTERNALS<colon><colon>COMPILED method}@c
@methodsubindex{used-types}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {used-user-structs} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>USED-USER-STRUCTS generic function}@c
@genericsubindex{used-user-structs}@c
@deffnx {Generic Function} {(setf used-user-structs)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF USED-USER-STRUCTS) generic function}@c
@genericsubindex{(setf used-user-structs)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {used-user-structs} (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>USED-USER-STRUCTS VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{used-user-structs}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf used-user-structs)} NEW-VALUE (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF USED-USER-STRUCTS) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{(setf used-user-structs)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {v-allowed-outer-vars} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-ALLOWED-OUTER-VARS generic function}@c
@genericsubindex{v-allowed-outer-vars}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {v-allowed-outer-vars} (ENVIRONMENT @t{environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-ALLOWED-OUTER-VARS VARJO<dot>INTERNALS<colon><colon>ENVIRONMENT method}@c
@methodsubindex{v-allowed-outer-vars}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {v-argument-spec} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-ARGUMENT-SPEC generic function}@c
@genericsubindex{v-argument-spec}@c
@deffnx {Generic Function} {(setf v-argument-spec)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF V-ARGUMENT-SPEC) generic function}@c
@genericsubindex{(setf v-argument-spec)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {v-argument-spec} (FUNC @t{external-function})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-ARGUMENT-SPEC VARJO<dot>INTERNALS<colon><colon>EXTERNAL-FUNCTION method}@c
@methodsubindex{v-argument-spec}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/external-functions<dot>lisp file, , @t{src/varjo.internals/external-functions.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-argument-spec} (V-FUNCTION-TYPE @t{v-function-type})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-ARGUMENT-SPEC VARI<dot>TYPES<colon><colon>V-FUNCTION-TYPE method}@c
@methodsubindex{v-argument-spec}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf v-argument-spec)} NEW-VALUE (V-FUNCTION-TYPE @t{v-function-type})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF V-ARGUMENT-SPEC) COMMON-LISP<colon><colon>T VARI<dot>TYPES<colon><colon>V-FUNCTION-TYPE method}@c
@methodsubindex{(setf v-argument-spec)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-argument-spec} (V-FUNCTION @t{v-function})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-ARGUMENT-SPEC VARJO<dot>INTERNALS<colon><colon>V-FUNCTION method}@c
@methodsubindex{v-argument-spec}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf v-argument-spec)} NEW-VALUE (V-FUNCTION @t{v-function})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF V-ARGUMENT-SPEC) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>V-FUNCTION method}@c
@methodsubindex{(setf v-argument-spec)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-argument-spec} (V-COMPILER-MACRO @t{v-compiler-macro})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-ARGUMENT-SPEC VARJO<dot>INTERNALS<colon><colon>V-COMPILER-MACRO method}@c
@methodsubindex{v-argument-spec}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf v-argument-spec)} NEW-VALUE (V-COMPILER-MACRO @t{v-compiler-macro})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF V-ARGUMENT-SPEC) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>V-COMPILER-MACRO method}@c
@methodsubindex{(setf v-argument-spec)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {v-array-type-of} ELEMENT-TYPE DIMENSIONS FLOW-ID
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-ARRAY-TYPE-OF generic function}@c
@genericsubindex{v-array-type-of}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {v-array-type-of} (ELEMENT-TYPE @t{v-type}) DIMENSIONS FLOW-ID
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-ARRAY-TYPE-OF VARI<dot>TYPES<colon><colon>V-TYPE COMMON-LISP<colon><colon>T COMMON-LISP<colon><colon>T method}@c
@methodsubindex{v-array-type-of}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {v-casts-to} FROM-TYPE TO-TYPE
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-CASTS-TO generic function}@c
@genericsubindex{v-casts-to}@c

The poorly names `v-casts-to` takes 2 Varjo type objects and attempts to cast
one to the other. If successful it returns the new type object and otherwise
returns NIL.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {v-casts-to} (FROM-TYPE @t{v-type}) (TO-TYPE @t{v-type})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-CASTS-TO VARI<dot>TYPES<colon><colon>V-TYPE VARI<dot>TYPES<colon><colon>V-TYPE method}@c
@methodsubindex{v-casts-to}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-casts-to} (FROM-TYPE @t{v-stemcell}) (TO-TYPE @t{v-type})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-CASTS-TO VARI<dot>TYPES<colon><colon>V-STEMCELL VARI<dot>TYPES<colon><colon>V-TYPE method}@c
@methodsubindex{v-casts-to}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-casts-to} (FROM-TYPE @t{v-any-one-of}) (TO-TYPE @t{v-function-type})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-CASTS-TO VARI<dot>TYPES<colon><colon>V-ANY-ONE-OF VARI<dot>TYPES<colon><colon>V-FUNCTION-TYPE method}@c
@methodsubindex{v-casts-to}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-casts-to} (FROM-TYPE @t{v-function-type}) (TO-TYPE @t{v-function-type})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-CASTS-TO VARI<dot>TYPES<colon><colon>V-FUNCTION-TYPE VARI<dot>TYPES<colon><colon>V-FUNCTION-TYPE method}@c
@methodsubindex{v-casts-to}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {v-casts-to-p} FROM-TYPE TO-TYPE
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-CASTS-TO-P generic function}@c
@genericsubindex{v-casts-to-p}@c

`v-casts-to-p` returns T if the first Varjo type object could be cast to the second
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {v-casts-to-p} FROM-TYPE TO-TYPE
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-CASTS-TO-P COMMON-LISP<colon><colon>T COMMON-LISP<colon><colon>T method}@c
@methodsubindex{v-casts-to-p}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {v-code} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-CODE generic function}@c
@genericsubindex{v-code}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {v-code} (V-USER-FUNCTION @t{v-user-function})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-CODE VARI<dot>TYPES<colon><colon>V-USER-FUNCTION method}@c
@methodsubindex{v-code}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {v-context} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-CONTEXT generic function}@c
@genericsubindex{v-context}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {v-context} (V-COMPILER-MACRO @t{v-compiler-macro})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-CONTEXT VARJO<dot>INTERNALS<colon><colon>V-COMPILER-MACRO method}@c
@methodsubindex{v-context}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-context} (V-REGULAR-MACRO @t{v-regular-macro})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-CONTEXT VARJO<dot>INTERNALS<colon><colon>V-REGULAR-MACRO method}@c
@methodsubindex{v-context}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-context} (BASE-ENVIRONMENT @t{base-environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-CONTEXT VARJO<dot>INTERNALS<colon><colon>BASE-ENVIRONMENT method}@c
@methodsubindex{v-context}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-context} (ENVIRONMENT @t{environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-CONTEXT VARJO<dot>INTERNALS<colon><colon>ENVIRONMENT method}@c
@methodsubindex{v-context}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {v-dimensions} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS generic function}@c
@genericsubindex{v-dimensions}@c

`v-dimensions` given an instance of the `v-array` type object this returns the
list of it's dimensions.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Writer
@ref{go to the VARJO<dot>INTERNALS<colon><colon>(SETF V-DIMENSIONS) generic function, , @t{(setf v-dimensions)}} (generic function)
@item Methods
@deffn {Method} {v-dimensions} (V-DVEC4 @t{v-dvec4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-DVEC4 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-DVEC3 @t{v-dvec3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-DVEC3 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-DVEC2 @t{v-dvec2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-DVEC2 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-IVEC4 @t{v-ivec4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-IVEC4 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-IVEC3 @t{v-ivec3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-IVEC3 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-IVEC2 @t{v-ivec2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-IVEC2 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-UVEC4 @t{v-uvec4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-UVEC4 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-UVEC3 @t{v-uvec3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-UVEC3 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-UVEC2 @t{v-uvec2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-UVEC2 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-BVEC4 @t{v-bvec4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-BVEC4 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-BVEC3 @t{v-bvec3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-BVEC3 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-BVEC2 @t{v-bvec2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-BVEC2 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-VEC4 @t{v-vec4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-VEC4 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-VEC3 @t{v-vec3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-VEC3 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-VEC2 @t{v-vec2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-VEC2 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-DMAT4X4 @t{v-dmat4x4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-DMAT4X4 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-DMAT4X3 @t{v-dmat4x3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-DMAT4X3 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-DMAT4X2 @t{v-dmat4x2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-DMAT4X2 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-DMAT3X4 @t{v-dmat3x4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-DMAT3X4 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-DMAT3X3 @t{v-dmat3x3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-DMAT3X3 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-DMAT3X2 @t{v-dmat3x2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-DMAT3X2 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-DMAT2X4 @t{v-dmat2x4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-DMAT2X4 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-DMAT2X3 @t{v-dmat2x3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-DMAT2X3 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-DMAT2X2 @t{v-dmat2x2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-DMAT2X2 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-DMAT4 @t{v-dmat4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-DMAT4 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-DMAT3 @t{v-dmat3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-DMAT3 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-DMAT2 @t{v-dmat2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-DMAT2 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-MAT4X4 @t{v-mat4x4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-MAT4X4 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-MAT4X3 @t{v-mat4x3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-MAT4X3 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-MAT4X2 @t{v-mat4x2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-MAT4X2 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-MAT3X4 @t{v-mat3x4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-MAT3X4 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-MAT3X3 @t{v-mat3x3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-MAT3X3 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-MAT3X2 @t{v-mat3x2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-MAT3X2 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-MAT2X4 @t{v-mat2x4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-MAT2X4 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-MAT2X3 @t{v-mat2x3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-MAT2X3 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-MAT2X2 @t{v-mat2x2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-MAT2X2 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-MAT4 @t{v-mat4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-MAT4 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-MAT3 @t{v-mat3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-MAT3 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-MAT2 @t{v-mat2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-MAT2 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (OBJECT @t{v-stemcell})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-STEMCELL method}@c
@methodsubindex{v-dimensions}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/stemcells<dot>lisp file, , @t{src/varjo.internals/stemcells.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-BLOCK-ARRAY @t{v-block-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-BLOCK-ARRAY method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-ARRAY @t{v-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-ARRAY method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS COMMON-LISP<colon><colon>T method}@c
@methodsubindex{v-dimensions}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-CONTAINER @t{v-container})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-CONTAINER method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {(setf v-dimensions)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF V-DIMENSIONS) generic function}@c
@genericsubindex{(setf v-dimensions)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Reader
@ref{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS generic function, , @t{v-dimensions}} (generic function)
@item Methods
@deffn {Method} {(setf v-dimensions)} NEW-VALUE (V-BLOCK-ARRAY @t{v-block-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF V-DIMENSIONS) COMMON-LISP<colon><colon>T VARI<dot>TYPES<colon><colon>V-BLOCK-ARRAY method}@c
@methodsubindex{(setf v-dimensions)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf v-dimensions)} NEW-VALUE (V-ARRAY @t{v-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF V-DIMENSIONS) COMMON-LISP<colon><colon>T VARI<dot>TYPES<colon><colon>V-ARRAY method}@c
@methodsubindex{(setf v-dimensions)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf v-dimensions)} NEW-VALUE (V-CONTAINER @t{v-container})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF V-DIMENSIONS) COMMON-LISP<colon><colon>T VARI<dot>TYPES<colon><colon>V-CONTAINER method}@c
@methodsubindex{(setf v-dimensions)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {v-doc-string} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DOC-STRING generic function}@c
@genericsubindex{v-doc-string}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {v-doc-string} (EXTERNAL-FUNCTION @t{external-function})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DOC-STRING VARJO<dot>INTERNALS<colon><colon>EXTERNAL-FUNCTION method}@c
@methodsubindex{v-doc-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {v-element-type} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-ELEMENT-TYPE generic function}@c
@genericsubindex{v-element-type}@c

`v-element-type` given an instance of the `v-container` type object this returns the
type object of it elements.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {v-element-type} (OBJECT @t{v-block-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-ELEMENT-TYPE VARI<dot>TYPES<colon><colon>V-BLOCK-ARRAY method}@c
@methodsubindex{v-element-type}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-element-type} (OBJECT @t{v-block-struct})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-ELEMENT-TYPE VARI<dot>TYPES<colon><colon>V-BLOCK-STRUCT method}@c
@methodsubindex{v-element-type}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-element-type} (OBJECT @t{v-container})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-ELEMENT-TYPE VARI<dot>TYPES<colon><colon>V-CONTAINER method}@c
@methodsubindex{v-element-type}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-element-type} (OBJECT @t{v-sampler})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-ELEMENT-TYPE VARI<dot>TYPES<colon><colon>V-SAMPLER method}@c
@methodsubindex{v-element-type}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {v-function-scope} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-FUNCTION-SCOPE generic function}@c
@genericsubindex{v-function-scope}@c
@deffnx {Generic Function} {(setf v-function-scope)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF V-FUNCTION-SCOPE) generic function}@c
@genericsubindex{(setf v-function-scope)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {v-function-scope} (V-COMPILER-MACRO @t{v-compiler-macro})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-FUNCTION-SCOPE VARJO<dot>INTERNALS<colon><colon>V-COMPILER-MACRO method}@c
@methodsubindex{v-function-scope}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf v-function-scope)} NEW-VALUE (V-COMPILER-MACRO @t{v-compiler-macro})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF V-FUNCTION-SCOPE) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>V-COMPILER-MACRO method}@c
@methodsubindex{(setf v-function-scope)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-function-scope} (V-REGULAR-MACRO @t{v-regular-macro})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-FUNCTION-SCOPE VARJO<dot>INTERNALS<colon><colon>V-REGULAR-MACRO method}@c
@methodsubindex{v-function-scope}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf v-function-scope)} NEW-VALUE (V-REGULAR-MACRO @t{v-regular-macro})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF V-FUNCTION-SCOPE) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>V-REGULAR-MACRO method}@c
@methodsubindex{(setf v-function-scope)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-function-scope} (V-SYMBOL-MACRO @t{v-symbol-macro})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-FUNCTION-SCOPE VARJO<dot>INTERNALS<colon><colon>V-SYMBOL-MACRO method}@c
@methodsubindex{v-function-scope}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf v-function-scope)} NEW-VALUE (V-SYMBOL-MACRO @t{v-symbol-macro})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF V-FUNCTION-SCOPE) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>V-SYMBOL-MACRO method}@c
@methodsubindex{(setf v-function-scope)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-function-scope} (V-VALUE @t{v-value})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-FUNCTION-SCOPE VARJO<dot>INTERNALS<colon><colon>V-VALUE method}@c
@methodsubindex{v-function-scope}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf v-function-scope)} NEW-VALUE (V-VALUE @t{v-value})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF V-FUNCTION-SCOPE) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>V-VALUE method}@c
@methodsubindex{(setf v-function-scope)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-function-scope} (ENVIRONMENT @t{environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-FUNCTION-SCOPE VARJO<dot>INTERNALS<colon><colon>ENVIRONMENT method}@c
@methodsubindex{v-function-scope}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {v-global-form-bindings} ()
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLOBAL-FORM-BINDINGS generic function}@c
@genericsubindex{v-global-form-bindings}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/environment<dot>lisp file, , @t{src/varjo.internals/environment.lisp}} (file)
@item Methods
@deffn {Method} {v-global-form-bindings} ()
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLOBAL-FORM-BINDINGS method}@c
@methodsubindex{v-global-form-bindings}@c
@end deffn
@end table
@end deffn
@deffn {Generic Function} {v-glsl-size} TYPE
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-SIZE generic function}@c
@genericsubindex{v-glsl-size}@c

Given a Varjo type object this function will return it's 'glsl size'. By this
we mean the number of 'positions' the value would take up (for example when
being passed into a `vertex-stage`)
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {v-glsl-size} (TYPE @t{v-user-struct})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-SIZE VARI<dot>TYPES<colon><colon>V-USER-STRUCT method}@c
@methodsubindex{v-glsl-size}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/structs<dot>lisp file, , @t{src/varjo.internals/structs.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-size} (TYPE @t{v-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-SIZE VARI<dot>TYPES<colon><colon>V-ARRAY method}@c
@methodsubindex{v-glsl-size}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-size} (V-TYPE @t{v-type})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-SIZE VARI<dot>TYPES<colon><colon>V-TYPE method}@c
@methodsubindex{v-glsl-size}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/early-types<dot>lisp file, , @t{src/varjo.internals/types/early-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {v-glsl-string} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING generic function}@c
@genericsubindex{v-glsl-string}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {v-glsl-string} (V-DEPTH-RANGE-PARAMETERS @t{v-depth-range-parameters})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>GLSL<colon><colon>V-DEPTH-RANGE-PARAMETERS method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>glsl/built-in-types<dot>lisp file, , @t{src/vari.glsl/built-in-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-UIMAGE-2D-MS-ARRAY @t{v-uimage-2d-ms-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-UIMAGE-2D-MS-ARRAY method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-IIMAGE-2D-MS-ARRAY @t{v-iimage-2d-ms-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-IIMAGE-2D-MS-ARRAY method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-IMAGE-2D-MS-ARRAY @t{v-image-2d-ms-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-IMAGE-2D-MS-ARRAY method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-UIMAGE-2D-MS @t{v-uimage-2d-ms})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-UIMAGE-2D-MS method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-IIMAGE-2D-MS @t{v-iimage-2d-ms})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-IIMAGE-2D-MS method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-IMAGE-2D-MS @t{v-image-2d-ms})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-IMAGE-2D-MS method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-UIMAGE-CUBE-ARRAY @t{v-uimage-cube-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-UIMAGE-CUBE-ARRAY method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-IIMAGE-CUBE-ARRAY @t{v-iimage-cube-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-IIMAGE-CUBE-ARRAY method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-IMAGE-CUBE-ARRAY @t{v-image-cube-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-IMAGE-CUBE-ARRAY method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-UIMAGE-2D-ARRAY @t{v-uimage-2d-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-UIMAGE-2D-ARRAY method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-IIMAGE-2D-ARRAY @t{v-iimage-2d-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-IIMAGE-2D-ARRAY method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-IMAGE-2D-ARRAY @t{v-image-2d-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-IMAGE-2D-ARRAY method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-UIMAGE-1D-ARRAY @t{v-uimage-1d-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-UIMAGE-1D-ARRAY method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-IIMAGE-1D-ARRAY @t{v-iimage-1d-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-IIMAGE-1D-ARRAY method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-IMAGE-1D-ARRAY @t{v-image-1d-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-IMAGE-1D-ARRAY method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-UIMAGE-BUFFER @t{v-uimage-buffer})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-UIMAGE-BUFFER method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-IIMAGE-BUFFER @t{v-iimage-buffer})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-IIMAGE-BUFFER method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-IMAGE-BUFFER @t{v-image-buffer})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-IMAGE-BUFFER method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-UIMAGE-CUBE @t{v-uimage-cube})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-UIMAGE-CUBE method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-IIMAGE-CUBE @t{v-iimage-cube})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-IIMAGE-CUBE method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-IMAGE-CUBE @t{v-image-cube})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-IMAGE-CUBE method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-UIMAGE-2D-RECT @t{v-uimage-2d-rect})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-UIMAGE-2D-RECT method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-IIMAGE-2D-RECT @t{v-iimage-2d-rect})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-IIMAGE-2D-RECT method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-IMAGE-2D-RECT @t{v-image-2d-rect})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-IMAGE-2D-RECT method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-UIMAGE-RECT @t{v-uimage-rect})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-UIMAGE-RECT method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-IIMAGE-RECT @t{v-iimage-rect})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-IIMAGE-RECT method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-IMAGE-RECT @t{v-image-rect})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-IMAGE-RECT method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-UIMAGE-3D @t{v-uimage-3d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-UIMAGE-3D method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-IIMAGE-3D @t{v-iimage-3d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-IIMAGE-3D method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-IMAGE-3D @t{v-image-3d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-IMAGE-3D method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-UIMAGE-2D @t{v-uimage-2d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-UIMAGE-2D method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-IIMAGE-2D @t{v-iimage-2d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-IIMAGE-2D method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-IMAGE-2D @t{v-image-2d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-IMAGE-2D method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-UIMAGE-1D @t{v-uimage-1d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-UIMAGE-1D method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-IIMAGE-1D @t{v-iimage-1d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-IIMAGE-1D method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-IMAGE-1D @t{v-image-1d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-IMAGE-1D method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-ATOMIC-UINT @t{v-atomic-uint})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-ATOMIC-UINT method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-USAMPLER-RECT @t{v-usampler-rect})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-USAMPLER-RECT method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-ISAMPLER-RECT @t{v-isampler-rect})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-ISAMPLER-RECT method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-SAMPLER-RECT @t{v-sampler-rect})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-SAMPLER-RECT method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-USAMPLER-CUBE-ARRAY @t{v-usampler-cube-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-USAMPLER-CUBE-ARRAY method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-USAMPLER-CUBE @t{v-usampler-cube})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-USAMPLER-CUBE method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-USAMPLER-BUFFER @t{v-usampler-buffer})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-USAMPLER-BUFFER method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-USAMPLER-3D @t{v-usampler-3d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-USAMPLER-3D method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-USAMPLER-2D-RECT @t{v-usampler-2d-rect})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-USAMPLER-2D-RECT method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-USAMPLER-2D-MS-ARRAY @t{v-usampler-2d-ms-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-USAMPLER-2D-MS-ARRAY method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-USAMPLER-2D-MS @t{v-usampler-2d-ms})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-USAMPLER-2D-MS method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-USAMPLER-2D-ARRAY @t{v-usampler-2d-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-USAMPLER-2D-ARRAY method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-USAMPLER-2D @t{v-usampler-2d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-USAMPLER-2D method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-USAMPLER-1D-ARRAY @t{v-usampler-1d-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-USAMPLER-1D-ARRAY method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-USAMPLER-1D @t{v-usampler-1d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-USAMPLER-1D method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-SAMPLER-CUBE-SHADOW @t{v-sampler-cube-shadow})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-SAMPLER-CUBE-SHADOW method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-SAMPLER-CUBE-ARRAY @t{v-sampler-cube-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-SAMPLER-CUBE-ARRAY method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-SAMPLER-CUBE @t{v-sampler-cube})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-SAMPLER-CUBE method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-SAMPLER-BUFFER @t{v-sampler-buffer})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-SAMPLER-BUFFER method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-SAMPLER-3D @t{v-sampler-3d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-SAMPLER-3D method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-SAMPLER-2D-SHADOW @t{v-sampler-2d-shadow})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-SAMPLER-2D-SHADOW method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-SAMPLER-2D-RECT @t{v-sampler-2d-rect})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-SAMPLER-2D-RECT method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-SAMPLER-2D-MS-ARRAY @t{v-sampler-2d-ms-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-SAMPLER-2D-MS-ARRAY method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-SAMPLER-2D-MS @t{v-sampler-2d-ms})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-SAMPLER-2D-MS method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-SAMPLER-2D-ARRAY @t{v-sampler-2d-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-SAMPLER-2D-ARRAY method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-SAMPLER-2D @t{v-sampler-2d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-SAMPLER-2D method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-SAMPLER-1D-SHADOW @t{v-sampler-1d-shadow})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-SAMPLER-1D-SHADOW method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-SAMPLER-1D-ARRAY @t{v-sampler-1d-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-SAMPLER-1D-ARRAY method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-SAMPLER-1D @t{v-sampler-1d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-SAMPLER-1D method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-ISAMPLER-CUBE-ARRAY @t{v-isampler-cube-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-ISAMPLER-CUBE-ARRAY method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-ISAMPLER-CUBE @t{v-isampler-cube})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-ISAMPLER-CUBE method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-ISAMPLER-BUFFER @t{v-isampler-buffer})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-ISAMPLER-BUFFER method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-ISAMPLER-3D @t{v-isampler-3d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-ISAMPLER-3D method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-ISAMPLER-2D-RECT @t{v-isampler-2d-rect})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-ISAMPLER-2D-RECT method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-ISAMPLER-2D-MS-ARRAY @t{v-isampler-2d-ms-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-ISAMPLER-2D-MS-ARRAY method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-ISAMPLER-2D-MS @t{v-isampler-2d-ms})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-ISAMPLER-2D-MS method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-ISAMPLER-2D-ARRAY @t{v-isampler-2d-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-ISAMPLER-2D-ARRAY method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-ISAMPLER-2D @t{v-isampler-2d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-ISAMPLER-2D method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-ISAMPLER-1D-ARRAY @t{v-isampler-1d-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-ISAMPLER-1D-ARRAY method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-ISAMPLER-1D @t{v-isampler-1d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-ISAMPLER-1D method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-DVEC4 @t{v-dvec4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-DVEC4 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-DVEC3 @t{v-dvec3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-DVEC3 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-DVEC2 @t{v-dvec2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-DVEC2 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-IVEC4 @t{v-ivec4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-IVEC4 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-IVEC3 @t{v-ivec3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-IVEC3 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-IVEC2 @t{v-ivec2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-IVEC2 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-UVEC4 @t{v-uvec4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-UVEC4 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-UVEC3 @t{v-uvec3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-UVEC3 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-UVEC2 @t{v-uvec2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-UVEC2 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-BVEC4 @t{v-bvec4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-BVEC4 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-BVEC3 @t{v-bvec3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-BVEC3 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-BVEC2 @t{v-bvec2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-BVEC2 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-VEC4 @t{v-vec4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-VEC4 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-VEC3 @t{v-vec3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-VEC3 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-VEC2 @t{v-vec2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-VEC2 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-DMAT4X4 @t{v-dmat4x4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-DMAT4X4 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-DMAT4X3 @t{v-dmat4x3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-DMAT4X3 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-DMAT4X2 @t{v-dmat4x2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-DMAT4X2 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-DMAT3X4 @t{v-dmat3x4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-DMAT3X4 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-DMAT3X3 @t{v-dmat3x3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-DMAT3X3 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-DMAT3X2 @t{v-dmat3x2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-DMAT3X2 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-DMAT2X4 @t{v-dmat2x4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-DMAT2X4 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-DMAT2X3 @t{v-dmat2x3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-DMAT2X3 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-DMAT2X2 @t{v-dmat2x2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-DMAT2X2 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-DMAT4 @t{v-dmat4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-DMAT4 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-DMAT3 @t{v-dmat3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-DMAT3 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-DMAT2 @t{v-dmat2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-DMAT2 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-MAT4X4 @t{v-mat4x4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-MAT4X4 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-MAT4X3 @t{v-mat4x3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-MAT4X3 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-MAT4X2 @t{v-mat4x2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-MAT4X2 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-MAT3X4 @t{v-mat3x4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-MAT3X4 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-MAT3X3 @t{v-mat3x3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-MAT3X3 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-MAT3X2 @t{v-mat3x2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-MAT3X2 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-MAT2X4 @t{v-mat2x4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-MAT2X4 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-MAT2X3 @t{v-mat2x3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-MAT2X3 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-MAT2X2 @t{v-mat2x2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-MAT2X2 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-MAT4 @t{v-mat4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-MAT4 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-MAT3 @t{v-mat3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-MAT3 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-MAT2 @t{v-mat2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-MAT2 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-DOUBLE @t{v-double})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-DOUBLE method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-SHORT-FLOAT @t{v-short-float})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-SHORT-FLOAT method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-FLOAT @t{v-float})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-FLOAT method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-UINT @t{v-uint})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-UINT method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-INT @t{v-int})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-INT method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-BOOL @t{v-bool})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-BOOL method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-STRUCT @t{v-struct})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-STRUCT method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (OBJECT @t{v-block-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-BLOCK-ARRAY method}@c
@methodsubindex{v-glsl-string}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (OBJECT @t{v-block-struct})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-BLOCK-STRUCT method}@c
@methodsubindex{v-glsl-string}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (OBJECT @t{v-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-ARRAY method}@c
@methodsubindex{v-glsl-string}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-DISCARDED @t{v-discarded})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-DISCARDED method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-VOID @t{v-void})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-VOID method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-TYPE @t{v-type})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-TYPE method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/early-types<dot>lisp file, , @t{src/varjo.internals/types/early-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-FUNCTION @t{v-function})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARJO<dot>INTERNALS<colon><colon>V-FUNCTION method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {v-macro-function} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-MACRO-FUNCTION generic function}@c
@genericsubindex{v-macro-function}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {v-macro-function} (V-COMPILER-MACRO @t{v-compiler-macro})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-MACRO-FUNCTION VARJO<dot>INTERNALS<colon><colon>V-COMPILER-MACRO method}@c
@methodsubindex{v-macro-function}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-macro-function} (V-REGULAR-MACRO @t{v-regular-macro})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-MACRO-FUNCTION VARJO<dot>INTERNALS<colon><colon>V-REGULAR-MACRO method}@c
@methodsubindex{v-macro-function}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {v-make-value} TYPE ENV &key GLSL-NAME FUNCTION-SCOPE READ-ONLY
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-MAKE-VALUE generic function}@c
@genericsubindex{v-make-value}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {v-make-value} (TYPE @t{v-type}) ENV &key GLSL-NAME FUNCTION-SCOPE READ-ONLY
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-MAKE-VALUE VARI<dot>TYPES<colon><colon>V-TYPE COMMON-LISP<colon><colon>T method}@c
@methodsubindex{v-make-value}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/variables<dot>lisp file, , @t{src/varjo.internals/variables.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {v-multi-val-base} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-MULTI-VAL-BASE generic function}@c
@genericsubindex{v-multi-val-base}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {v-multi-val-base} (ENVIRONMENT @t{environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-MULTI-VAL-BASE VARJO<dot>INTERNALS<colon><colon>ENVIRONMENT method}@c
@methodsubindex{v-multi-val-base}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {v-multi-val-safe} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-MULTI-VAL-SAFE generic function}@c
@genericsubindex{v-multi-val-safe}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {v-multi-val-safe} (ENVIRONMENT @t{environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-MULTI-VAL-SAFE VARJO<dot>INTERNALS<colon><colon>ENVIRONMENT method}@c
@methodsubindex{v-multi-val-safe}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {v-parent-env} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-PARENT-ENV generic function}@c
@genericsubindex{v-parent-env}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {v-parent-env} (ENVIRONMENT @t{environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-PARENT-ENV VARJO<dot>INTERNALS<colon><colon>ENVIRONMENT method}@c
@methodsubindex{v-parent-env}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {v-place-index} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-PLACE-INDEX generic function}@c
@genericsubindex{v-place-index}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {v-place-index} (V-FUNCTION @t{v-function})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-PLACE-INDEX VARJO<dot>INTERNALS<colon><colon>V-FUNCTION method}@c
@methodsubindex{v-place-index}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {v-primary-type-eq} A B
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-PRIMARY-TYPE-EQ generic function}@c
@genericsubindex{v-primary-type-eq}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {v-primary-type-eq} (A @t{compiled}) (B @t{v-type})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-PRIMARY-TYPE-EQ VARJO<dot>INTERNALS<colon><colon>COMPILED VARI<dot>TYPES<colon><colon>V-TYPE method}@c
@methodsubindex{v-primary-type-eq}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/code-object<dot>lisp file, , @t{src/varjo.internals/code-object.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-primary-type-eq} (A @t{compiled}) (B @t{compiled})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-PRIMARY-TYPE-EQ VARJO<dot>INTERNALS<colon><colon>COMPILED VARJO<dot>INTERNALS<colon><colon>COMPILED method}@c
@methodsubindex{v-primary-type-eq}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/code-object<dot>lisp file, , @t{src/varjo.internals/code-object.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {v-read-only} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-READ-ONLY generic function}@c
@genericsubindex{v-read-only}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {v-read-only} (V-VALUE @t{v-value})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-READ-ONLY VARJO<dot>INTERNALS<colon><colon>V-VALUE method}@c
@methodsubindex{v-read-only}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {v-return-spec} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-RETURN-SPEC generic function}@c
@genericsubindex{v-return-spec}@c
@deffnx {Generic Function} {(setf v-return-spec)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF V-RETURN-SPEC) generic function}@c
@genericsubindex{(setf v-return-spec)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {v-return-spec} (V-FUNCTION-TYPE @t{v-function-type})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-RETURN-SPEC VARI<dot>TYPES<colon><colon>V-FUNCTION-TYPE method}@c
@methodsubindex{v-return-spec}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf v-return-spec)} NEW-VALUE (V-FUNCTION-TYPE @t{v-function-type})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF V-RETURN-SPEC) COMMON-LISP<colon><colon>T VARI<dot>TYPES<colon><colon>V-FUNCTION-TYPE method}@c
@methodsubindex{(setf v-return-spec)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-return-spec} (V-FUNCTION @t{v-function})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-RETURN-SPEC VARJO<dot>INTERNALS<colon><colon>V-FUNCTION method}@c
@methodsubindex{v-return-spec}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf v-return-spec)} NEW-VALUE (V-FUNCTION @t{v-function})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF V-RETURN-SPEC) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>V-FUNCTION method}@c
@methodsubindex{(setf v-return-spec)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {v-slots} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-SLOTS generic function}@c
@genericsubindex{v-slots}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {v-slots} (V-DEPTH-RANGE-PARAMETERS @t{v-depth-range-parameters})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-SLOTS VARI<dot>GLSL<colon><colon>V-DEPTH-RANGE-PARAMETERS method}@c
@methodsubindex{v-slots}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>glsl/built-in-types<dot>lisp file, , @t{src/vari.glsl/built-in-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-slots} (V-STRUCT @t{v-struct})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-SLOTS VARI<dot>TYPES<colon><colon>V-STRUCT method}@c
@methodsubindex{v-slots}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {v-special-functionp} FUNC
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-SPECIAL-FUNCTIONP generic function}@c
@genericsubindex{v-special-functionp}@c

`v-special-functionp` returns T if the Varjo function object provided is a
special form.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {v-special-functionp} (FUNC @t{v-function})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-SPECIAL-FUNCTIONP VARJO<dot>INTERNALS<colon><colon>V-FUNCTION method}@c
@methodsubindex{v-special-functionp}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/functions<dot>lisp file, , @t{src/varjo.internals/functions.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-special-functionp} (FUNC @t{external-function})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-SPECIAL-FUNCTIONP VARJO<dot>INTERNALS<colon><colon>EXTERNAL-FUNCTION method}@c
@methodsubindex{v-special-functionp}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/external-functions<dot>lisp file, , @t{src/varjo.internals/external-functions.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-special-functionp} (V-FUNCTION-SET @t{v-function-set})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-SPECIAL-FUNCTIONP VARJO<dot>INTERNALS<colon><colon>V-FUNCTION-SET method}@c
@methodsubindex{v-special-functionp}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/function-obj<dot>lisp file, , @t{src/varjo.internals/function-obj.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {v-symbol-bindings} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-SYMBOL-BINDINGS generic function}@c
@genericsubindex{v-symbol-bindings}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {v-symbol-bindings} (ENVIRONMENT @t{environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-SYMBOL-BINDINGS VARJO<dot>INTERNALS<colon><colon>ENVIRONMENT method}@c
@methodsubindex{v-symbol-bindings}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {v-type-eq} A B
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-TYPE-EQ generic function}@c
@genericsubindex{v-type-eq}@c

`v-type-eq` returns T if the Varjo type object provided represents the given
Vari type.@*

The second argument can be a Varjo type object or a Vari `type-spec`
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {v-type-eq} (A @t{v-function-type}) (B @t{v-function-type})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-TYPE-EQ VARI<dot>TYPES<colon><colon>V-FUNCTION-TYPE VARI<dot>TYPES<colon><colon>V-FUNCTION-TYPE method}@c
@methodsubindex{v-type-eq}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-type-eq} (A @t{v-type}) (B @t{list})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-TYPE-EQ VARI<dot>TYPES<colon><colon>V-TYPE COMMON-LISP<colon><colon>LIST method}@c
@methodsubindex{v-type-eq}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-type-eq} (A @t{v-type}) (B @t{symbol})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-TYPE-EQ VARI<dot>TYPES<colon><colon>V-TYPE COMMON-LISP<colon><colon>SYMBOL method}@c
@methodsubindex{v-type-eq}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-type-eq} (A @t{v-block-struct}) (B @t{v-block-struct})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-TYPE-EQ VARI<dot>TYPES<colon><colon>V-BLOCK-STRUCT VARI<dot>TYPES<colon><colon>V-BLOCK-STRUCT method}@c
@methodsubindex{v-type-eq}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-type-eq} (A @t{v-block-array}) (B @t{v-block-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-TYPE-EQ VARI<dot>TYPES<colon><colon>V-BLOCK-ARRAY VARI<dot>TYPES<colon><colon>V-BLOCK-ARRAY method}@c
@methodsubindex{v-type-eq}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-type-eq} (A @t{v-array}) (B @t{v-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-TYPE-EQ VARI<dot>TYPES<colon><colon>V-ARRAY VARI<dot>TYPES<colon><colon>V-ARRAY method}@c
@methodsubindex{v-type-eq}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-type-eq} (A @t{v-type}) (B @t{v-type})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-TYPE-EQ VARI<dot>TYPES<colon><colon>V-TYPE VARI<dot>TYPES<colon><colon>V-TYPE method}@c
@methodsubindex{v-type-eq}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {v-type-of} FUNC
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-TYPE-OF generic function}@c
@genericsubindex{v-type-of}@c

When called with an instance of `shader-variable` this will return the
Varjo type object which represents the variables Vari type.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Writer
@ref{go to the VARJO<dot>INTERNALS<colon><colon>(SETF V-TYPE-OF) generic function, , @t{(setf v-type-of)}} (generic function)
@item Methods
@deffn {Method} {v-type-of} (FUNC-SET @t{v-function-set})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-TYPE-OF VARJO<dot>INTERNALS<colon><colon>V-FUNCTION-SET method}@c
@methodsubindex{v-type-of}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/function-obj<dot>lisp file, , @t{src/varjo.internals/function-obj.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-type-of} (FUNC @t{v-function})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-TYPE-OF VARJO<dot>INTERNALS<colon><colon>V-FUNCTION method}@c
@methodsubindex{v-type-of}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/function-obj<dot>lisp file, , @t{src/varjo.internals/function-obj.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-type-of} (TYPED-EXTERNAL-NAME @t{typed-external-name})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-TYPE-OF VARJO<dot>INTERNALS<colon><colon>TYPED-EXTERNAL-NAME method}@c
@methodsubindex{v-type-of}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-type-of} (V-VALUE @t{v-value})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-TYPE-OF VARJO<dot>INTERNALS<colon><colon>V-VALUE method}@c
@methodsubindex{v-type-of}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-type-of} (STEMCELL @t{stemcell})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-TYPE-OF VARJO<dot>INTERNALS<colon><colon>STEMCELL method}@c
@methodsubindex{v-type-of}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-type-of} (SHADER-VARIABLE @t{shader-variable})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-TYPE-OF VARJO<dot>INTERNALS<colon><colon>SHADER-VARIABLE method}@c
@methodsubindex{v-type-of}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {(setf v-type-of)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF V-TYPE-OF) generic function}@c
@genericsubindex{(setf v-type-of)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Reader
@ref{go to the VARJO<dot>INTERNALS<colon><colon>V-TYPE-OF generic function, , @t{v-type-of}} (generic function)
@item Methods
@deffn {Method} {(setf v-type-of)} NEW-VALUE (V-VALUE @t{v-value})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF V-TYPE-OF) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>V-VALUE method}@c
@methodsubindex{(setf v-type-of)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {v-typep} A B
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-TYPEP generic function}@c
@genericsubindex{v-typep}@c

`v-typep` returns T if the Varjo type object provided represents the given
Vari type or a subtype of that type.@*

The second argument can be a Varjo type object or a Vari `type-spec`
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {v-typep} (A @t{v-stemcell}) B
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-TYPEP VARI<dot>TYPES<colon><colon>V-STEMCELL COMMON-LISP<colon><colon>T method}@c
@methodsubindex{v-typep}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-typep} (A @t{v-function-type}) (B @t{v-function-type})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-TYPEP VARI<dot>TYPES<colon><colon>V-FUNCTION-TYPE VARI<dot>TYPES<colon><colon>V-FUNCTION-TYPE method}@c
@methodsubindex{v-typep}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-typep} (A @t{v-array}) (B @t{v-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-TYPEP VARI<dot>TYPES<colon><colon>V-ARRAY VARI<dot>TYPES<colon><colon>V-ARRAY method}@c
@methodsubindex{v-typep}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-typep} A (B @t{null})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-TYPEP COMMON-LISP<colon><colon>T COMMON-LISP<colon><colon>NULL method}@c
@methodsubindex{v-typep}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-typep} (A @t{null}) B
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-TYPEP COMMON-LISP<colon><colon>NULL COMMON-LISP<colon><colon>T method}@c
@methodsubindex{v-typep}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-typep} (A @t{v-type}) (B @t{v-type})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-TYPEP VARI<dot>TYPES<colon><colon>V-TYPE VARI<dot>TYPES<colon><colon>V-TYPE method}@c
@methodsubindex{v-typep}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-typep} (A @t{v-type}) (B @t{list})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-TYPEP VARI<dot>TYPES<colon><colon>V-TYPE COMMON-LISP<colon><colon>LIST method}@c
@methodsubindex{v-typep}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-typep} (A @t{v-type}) (B @t{symbol})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-TYPEP VARI<dot>TYPES<colon><colon>V-TYPE COMMON-LISP<colon><colon>SYMBOL method}@c
@methodsubindex{v-typep}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {v-uniforms} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-UNIFORMS generic function}@c
@genericsubindex{v-uniforms}@c
@deffnx {Generic Function} {(setf v-uniforms)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF V-UNIFORMS) generic function}@c
@genericsubindex{(setf v-uniforms)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {v-uniforms} (ENV @t{environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-UNIFORMS VARJO<dot>INTERNALS<colon><colon>ENVIRONMENT method}@c
@methodsubindex{v-uniforms}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/environment<dot>lisp file, , @t{src/varjo.internals/environment.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-uniforms} (BASE-ENVIRONMENT @t{base-environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-UNIFORMS VARJO<dot>INTERNALS<colon><colon>BASE-ENVIRONMENT method}@c
@methodsubindex{v-uniforms}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf v-uniforms)} NEW-VALUE (BASE-ENVIRONMENT @t{base-environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF V-UNIFORMS) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>BASE-ENVIRONMENT method}@c
@methodsubindex{(setf v-uniforms)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {v-value} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-VALUE generic function}@c
@genericsubindex{v-value}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {v-value} (CAPTURED-VAR @t{captured-var})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-VALUE VARJO<dot>INTERNALS<colon><colon>CAPTURED-VAR method}@c
@methodsubindex{v-value}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {v-versions} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-VERSIONS generic function}@c
@genericsubindex{v-versions}@c
@deffnx {Generic Function} {(setf v-versions)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF V-VERSIONS) generic function}@c
@genericsubindex{(setf v-versions)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {v-versions} (V-STRUCT @t{v-struct})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-VERSIONS VARI<dot>TYPES<colon><colon>V-STRUCT method}@c
@methodsubindex{v-versions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf v-versions)} NEW-VALUE (V-STRUCT @t{v-struct})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF V-VERSIONS) COMMON-LISP<colon><colon>T VARI<dot>TYPES<colon><colon>V-STRUCT method}@c
@methodsubindex{(setf v-versions)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-versions} (V-FUNCTION @t{v-function})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-VERSIONS VARJO<dot>INTERNALS<colon><colon>V-FUNCTION method}@c
@methodsubindex{v-versions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf v-versions)} NEW-VALUE (V-FUNCTION @t{v-function})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF V-VERSIONS) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>V-FUNCTION method}@c
@methodsubindex{(setf v-versions)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {v-voidp} X
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-VOIDP generic function}@c
@genericsubindex{v-voidp}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@item Methods
@deffn {Method} {v-voidp} (X @t{compiled})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-VOIDP VARJO<dot>INTERNALS<colon><colon>COMPILED method}@c
@methodsubindex{v-voidp}@c
@end deffn
@deffn {Method} {v-voidp} (X @t{v-type})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-VOIDP VARI<dot>TYPES<colon><colon>V-TYPE method}@c
@methodsubindex{v-voidp}@c
@end deffn
@deffn {Method} {v-voidp} (X @t{vector})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-VOIDP COMMON-LISP<colon><colon>VECTOR method}@c
@methodsubindex{v-voidp}@c
@end deffn
@end table
@end deffn
@deffn {Generic Function} {variable-in-scope-p} NAME ENV
@anchor{go to the VARJO<dot>API<colon><colon>VARIABLE-IN-SCOPE-P generic function}@c
@genericsubindex{variable-in-scope-p}@c

When given an `environment` object from a Vari compiler-macro and a symbol,
`variable-in-scope-p` returns T if that symbol names a variable that is
currently in scope.
@table @strong
@item Package
@ref{go to the VARJO<dot>API package, , @t{varjo.api}}
@item Source
@ref{go to the varjo/src/varjo<dot>api/environment<dot>lisp file, , @t{src/varjo.api/environment.lisp}} (file)
@item Methods
@deffn {Method} {variable-in-scope-p} (NAME @t{symbol}) (ENV @t{extended-environment})
@anchor{go to the VARJO<dot>API<colon><colon>VARIABLE-IN-SCOPE-P COMMON-LISP<colon><colon>SYMBOL VARJO<dot>INTERNALS<colon><colon>EXTENDED-ENVIRONMENT method}@c
@methodsubindex{variable-in-scope-p}@c
@end deffn
@end table
@end deffn
@deffn {Generic Function} {variable-is-uniform-p} NAME ENV
@anchor{go to the VARJO<dot>API<colon><colon>VARIABLE-IS-UNIFORM-P generic function}@c
@genericsubindex{variable-is-uniform-p}@c

When given an `environment` object from a Vari macro and a symbol,
`variable-is-uniform-p` returns T if that symbol names a uniform variable
in the current scope, or it contains the value from a uniform variable.
@table @strong
@item Package
@ref{go to the VARJO<dot>API package, , @t{varjo.api}}
@item Source
@ref{go to the varjo/src/varjo<dot>api/environment<dot>lisp file, , @t{src/varjo.api/environment.lisp}} (file)
@item Methods
@deffn {Method} {variable-is-uniform-p} (NAME @t{symbol}) (ENV @t{extended-environment})
@anchor{go to the VARJO<dot>API<colon><colon>VARIABLE-IS-UNIFORM-P COMMON-LISP<colon><colon>SYMBOL VARJO<dot>INTERNALS<colon><colon>EXTENDED-ENVIRONMENT method}@c
@methodsubindex{variable-is-uniform-p}@c
@end deffn
@end table
@end deffn
@deffn {Generic Function} {variable-type} NAME ENV
@anchor{go to the VARJO<dot>API<colon><colon>VARIABLE-TYPE generic function}@c
@genericsubindex{variable-type}@c

When given an `environment` object from a Vari macro and a symbol that names
a variable in the current scope, `variable-type` returns a Varjo type object
that represents the Vari type of the value bound to the variable.
@table @strong
@item Package
@ref{go to the VARJO<dot>API package, , @t{varjo.api}}
@item Source
@ref{go to the varjo/src/varjo<dot>api/environment<dot>lisp file, , @t{src/varjo.api/environment.lisp}} (file)
@item Methods
@deffn {Method} {variable-type} (NAME @t{symbol}) (ENV @t{extended-environment})
@anchor{go to the VARJO<dot>API<colon><colon>VARIABLE-TYPE COMMON-LISP<colon><colon>SYMBOL VARJO<dot>INTERNALS<colon><colon>EXTENDED-ENVIRONMENT method}@c
@methodsubindex{variable-type}@c
@end deffn
@end table
@end deffn
@deffn {Generic Function} {variable-uniform-name} NAME ENV
@anchor{go to the VARJO<dot>API<colon><colon>VARIABLE-UNIFORM-NAME generic function}@c
@genericsubindex{variable-uniform-name}@c

When given an `environment` object from a Vari macro and a symbol that names
a variable whos value is taken from a uniform, `argument-uniform-name` returns
the the symbol which names the uniform in the stage.
@table @strong
@item Package
@ref{go to the VARJO<dot>API package, , @t{varjo.api}}
@item Source
@ref{go to the varjo/src/varjo<dot>api/environment<dot>lisp file, , @t{src/varjo.api/environment.lisp}} (file)
@item Methods
@deffn {Method} {variable-uniform-name} (NAME @t{symbol}) (ENV @t{extended-environment})
@anchor{go to the VARJO<dot>API<colon><colon>VARIABLE-UNIFORM-NAME COMMON-LISP<colon><colon>SYMBOL VARJO<dot>INTERNALS<colon><colon>EXTENDED-ENVIRONMENT method}@c
@methodsubindex{variable-uniform-name}@c
@end deffn
@end table
@end deffn
@deffn {Generic Function} {variables-in-scope} ENV
@anchor{go to the VARJO<dot>API<colon><colon>VARIABLES-IN-SCOPE generic function}@c
@genericsubindex{variables-in-scope}@c

When given an `environment` object from a Vari macro, `variables-in-scope`
returns a list contains the names of all the variables currently in scope.
@table @strong
@item Package
@ref{go to the VARJO<dot>API package, , @t{varjo.api}}
@item Source
@ref{go to the varjo/src/varjo<dot>api/environment<dot>lisp file, , @t{src/varjo.api/environment.lisp}} (file)
@item Methods
@deffn {Method} {variables-in-scope} (ENV @t{extended-environment})
@anchor{go to the VARJO<dot>API<colon><colon>VARIABLES-IN-SCOPE VARJO<dot>INTERNALS<colon><colon>EXTENDED-ENVIRONMENT method}@c
@methodsubindex{variables-in-scope}@c
@end deffn
@end table
@end deffn
@deffn {Generic Function} {vertex-count} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>VERTEX-COUNT generic function}@c
@genericsubindex{vertex-count}@c

When passed an instance of `primitive` this function returns the number
of vertices that make up this kind of primitive.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {vertex-count} (PATCHES @t{patches})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>VERTEX-COUNT VARJO<dot>INTERNALS<colon><colon>PATCHES method}@c
@methodsubindex{vertex-count}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {vertex-count} (TRIANGLES-ADJACENCY @t{triangles-adjacency})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>VERTEX-COUNT VARJO<dot>INTERNALS<colon><colon>TRIANGLES-ADJACENCY method}@c
@methodsubindex{vertex-count}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {vertex-count} (TRIANGLES @t{triangles})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>VERTEX-COUNT VARJO<dot>INTERNALS<colon><colon>TRIANGLES method}@c
@methodsubindex{vertex-count}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {vertex-count} (LINES-ADJACENCY @t{lines-adjacency})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>VERTEX-COUNT VARJO<dot>INTERNALS<colon><colon>LINES-ADJACENCY method}@c
@methodsubindex{vertex-count}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {vertex-count} (ISO-LINES @t{iso-lines})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>VERTEX-COUNT VARJO<dot>INTERNALS<colon><colon>ISO-LINES method}@c
@methodsubindex{vertex-count}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {vertex-count} (LINES @t{lines})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>VERTEX-COUNT VARJO<dot>INTERNALS<colon><colon>LINES method}@c
@methodsubindex{vertex-count}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {vertex-count} (POINTS @t{points})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>VERTEX-COUNT VARJO<dot>INTERNALS<colon><colon>POINTS method}@c
@methodsubindex{vertex-count}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {vertices} METADATA
@anchor{go to the VARI<dot>CL<colon><colon>VERTICES generic function}@c
@genericsubindex{vertices}@c
@table @strong
@item Package
@ref{go to the VARI<dot>CL package, , @t{vari.cl}}
@item Source
@ref{go to the varjo/src/vari<dot>cl/special-operators/emit<dot>lisp file, , @t{src/vari.cl/special-operators/emit.lisp}} (file)
@item Methods
@deffn {Method} {vertices} (METADATA @t{output-patch})
@anchor{go to the VARI<dot>CL<colon><colon>VERTICES VARI<dot>CL<colon><colon>OUTPUT-PATCH method}@c
@methodsubindex{vertices}@c
@end deffn
@deffn {Method} {vertices} (METADATA-COLLECTION @t{list})
@anchor{go to the VARI<dot>CL<colon><colon>VERTICES COMMON-LISP<colon><colon>LIST method}@c
@methodsubindex{vertices}@c
@end deffn
@end table
@end deffn
" :AFTER-MENU-CONTENTS NIL) #15# #16#) :BEFORE-MENU-CONTENTS NIL :AFTER-MENU-CONTENTS NIL) #S(NET.DIDIERVERNA.DECLT::CONTEXT :SYSTEMS (#<ASDF/SYSTEM:SYSTEM "varjo">) :PACKAGES (#<PACKAGE "VARJO"> #<PACKAGE "VARI"> #<PACKAGE "VARI.CL"> #<PACKAGE "VARI.GLSL"> #<PACKAGE "VARJO.API"> #<PACKAGE "VARJO.INTERNALS"> #<PACKAGE "VARJO-CONDITIONS"> #<PACKAGE "VARI.TYPES"> #<PACKAGE "VARJO.UTILS">) :EXTERNAL-DEFINITIONS #<HASH-TABLE :TEST EQUAL :COUNT 694 {100B68C0C3}> :INTERNAL-DEFINITIONS #<HASH-TABLE :TEST EQUAL :COUNT 603 {1001BD5D23}> :HYPERLINKSP NIL) "exported" "classes" (#1=#S(NET.DIDIERVERNA.DECLT::CLASS-DEFINITION :SYMBOL VARI.CL:LOCAL-SIZE :FOREIGNP NIL :PARENTS (#S(NET.DIDIERVERNA.DECLT::CLASS-DEFINITION :SYMBOL VARJO.INTERNALS::STANDARD-SCOPE-METADATA :FOREIGNP NIL :PARENTS (#) :CHILDREN (#2=# #3=# #4=# #1#) :METHODS (#) :SLOTS NIL)) :CHILDREN NIL :METHODS (#S(NET.DIDIERVERNA.DECLT::METHOD-DEFINITION :SYMBOL PRINT-OBJECT :FOREIGNP T :METHOD NIL) #S(NET.DIDIERVERNA.DECLT::METHOD-DEFINITION :SYMBOL INITIALIZE-INSTANCE :FOREIGNP T :METHOD NIL) #S(NET.DIDIERVERNA.DECLT::METHOD-DEFINITION :SYMBOL VARI.CL::Z :FOREIGNP NIL :METHOD #<STANDARD-METHOD VARI.CL::Z (VARI.CL:LOCAL-SIZE) {100B8B5693}>) #S(NET.DIDIERVERNA.DECLT::METHOD-DEFINITION :SYMBOL VARI.CL::Y :FOREIGNP NIL :METHOD #<STANDARD-METHOD VARI.CL::Y (VARI.CL:LOCAL-SIZE) {100B8B56A3}>) #S(NET.DIDIERVERNA.DECLT::METHOD-DEFINITION :SYMBOL VARI.CL::X :FOREIGNP NIL :METHOD #<STANDARD-METHOD VARI.CL::X (VARI.CL:LOCAL-SIZE) {100B8B56B3}>)) :SLOTS (#S(NET.DIDIERVERNA.DECLT::SLOT-DEFINITION :SYMBOL VARI.CL::X :FOREIGNP NIL :SLOT #<SB-MOP:STANDARD-DIRECT-SLOT-DEFINITION VARI.CL::X> :READERS NIL :WRITERS NIL) #S(NET.DIDIERVERNA.DECLT::SLOT-DEFINITION :SYMBOL VARI.CL::Y :FOREIGNP NIL :SLOT #<SB-MOP:STANDARD-DIRECT-SLOT-DEFINITION VARI.CL::Y> :READERS NIL :WRITERS NIL) #S(NET.DIDIERVERNA.DECLT::SLOT-DEFINITION :SYMBOL VARI.CL::Z :FOREIGNP NIL :SLOT #<SB-MOP:STANDARD-DIRECT-SLOT-DEFINITION VARI.CL::Z> :READERS NIL :WRITERS NIL))) #5=#S(NET.DIDIERVERNA.DECLT::CLASS-DEFINITION :SYMBOL VARJO.INTERNALS:MACRO-EXPANSION-ENVIRONMENT :FOREIGNP NIL :PARENTS (#S(NET.DIDIERVERNA.DECLT::CLASS-DEFINITION :SYMBOL VARJO.INTERNALS::EXPANSION-ENV :FOREIGNP NIL :PARENTS (#) :CHILDREN (#5# #) :METHODS (# #) :SLOTS (#))) :CHILDREN NIL :METHODS (#S(NET.DIDIERVERNA.DECLT::METHOD-DEFINITION :SYMBOL VARJO.API:METADATA-FOR-ARGUMENT :FOREIGNP NIL :METHOD #<STANDARD-METHOD VARJO.API:METADATA-FOR-ARGUMENT (SYMBOL SYMBOL VARJO.INTERNALS:MACRO-EXPANSION-ENVIRONMENT) {1001C07E13}>) #S(NET.DIDIERVERNA.DECLT::METHOD-DEFINITION :SYMBOL VARJO.API:ARGUMENT-UNIFORM-NAME :FOREIGNP NIL :METHOD #<STANDARD-METHOD VARJO.API:ARGUMENT-UNIFORM-NAME (SYMBOL VARJO.INTERNALS:MACRO-EXPANSION-ENVIRONMENT) {1001C07E43}>) #S(NET.DIDIERVERNA.DECLT::METHOD-DEFINITION :SYMBOL VARJO.API:ARGUMENT-IS-UNIFORM-P :FOREIGNP NIL :METHOD #<STANDARD-METHOD VARJO.API:ARGUMENT-IS-UNIFORM-P (SYMBOL VARJO.INTERNALS:MACRO-EXPANSION-ENVIRONMENT) {1001C07E73}>) #S(NET.DIDIERVERNA.DECLT::METHOD-DEFINITION :SYMBOL VARJO.API:ARGUMENT-TYPE :FOREIGNP NIL :METHOD #<STANDARD-METHOD VARJO.API:ARGUMENT-TYPE (SYMBOL VARJO.INTERNALS:MACRO-EXPANSION-ENVIRONMENT) {1001C07EB3}>)) :SLOTS NIL) #3# #2# #6=#S(NET.DIDIERVERNA.DECLT::CLASS-DEFINITION :SYMBOL VARJO.INTERNALS:PATCHES :FOREIGNP NIL :PARENTS (#S(NET.DIDIERVERNA.DECLT::CLASS-DEFINITION :SYMBOL VARJO.INTERNALS::TESSELLATION-IN-PRIMITIVE :FOREIGNP NIL :PARENTS (#7=#) :CHILDREN (#6#) :METHODS NIL :SLOTS NIL) #8=#S(NET.DIDIERVERNA.DECLT::CLASS-DEFINITION :SYMBOL VARJO.INTERNALS::DRAW-MODE :FOREIGNP NIL :PARENTS (#7#) :CHILDREN (# #9=# # # # # # #10=# # # # # ...) :METHODS NIL :SLOTS NIL)) :CHILDREN NIL :METHODS (#S(NET.DIDIERVERNA.DECLT::METHOD-DEFINITION :SYMBOL MAKE-LOAD-FORM :FOREIGNP T :METHOD NIL) #S(NET.DIDIERVERNA.DECLT::METHOD-DEFINITION :SYMBOL VARJO.INTERNALS:VERTEX-COUNT :FOREIGNP NIL :METHOD #<SB-MOP:STANDARD-READER-METHOD VARJO.INTERNALS:VERTEX-COUNT, slot:VARJO.INTERNALS:VERTEX-COUNT, (VARJO.INTERNALS:PATCHES) {10022FA4A3}>) #S(NET.DIDIERVERNA.DECLT::METHOD-DEFINITION :SYMBOL VARJO.INTERNALS:LISP-NAME :FOREIGNP NIL :METHOD #<SB-MOP:STANDARD-READER-METHOD VARJO.INTERNALS:LISP-NAME, slot:VARJO.INTERNALS:LISP-NAME, (VARJO.INTERNALS:PATCHES) {10022FA4B3}>)) :SLOTS (#S(NET.DIDIERVERNA.DECLT::SLOT-DEFINITION :SYMBOL VARJO.INTERNALS:LISP-NAME :FOREIGNP NIL :SLOT #<SB-MOP:STANDARD-DIRECT-SLOT-DEFINITION VARJO.INTERNALS:LISP-NAME> :READERS (#11=#) :WRITERS NIL) #S(NET.DIDIERVERNA.DECLT::SLOT-DEFINITION :SYMBOL VARJO.INTERNALS:VERTEX-COUNT :FOREIGNP NIL :SLOT #<SB-MOP:STANDARD-DIRECT-SLOT-DEFINITION VARJO.INTERNALS:VERTEX-COUNT> :READERS (#) :WRITERS NIL))) #9# #7# #12=#S(NET.DIDIERVERNA.DECLT::CLASS-DEFINITION :SYMBOL VARJO.INTERNALS:QUADS :FOREIGNP NIL :PARENTS (#S(NET.DIDIERVERNA.DECLT::CLASS-DEFINITION :SYMBOL VARJO.INTERNALS::TESSELLATION-OUT-PRIMITIVE :FOREIGNP NIL :PARENTS (#7#) :CHILDREN (#9# # #10# #12#) :METHODS NIL :SLOTS NIL) #8#) :CHILDREN NIL :METHODS (#S(NET.DIDIERVERNA.DECLT::METHOD-DEFINITION :SYMBOL VARJO.INTERNALS:GLSL-STRING :FOREIGNP NIL :METHOD #<SB-MOP:STANDARD-READER-METHOD VARJO.INTERNALS:GLSL-STRING, slot:VARJO.INTERNALS:GLSL-STRING, (VARJO.INTERNALS:QUADS) {10022FA383}>) #S(NET.DIDIERVERNA.DECLT::METHOD-DEFINITION :SYMBOL VARJO.INTERNALS:LISP-NAME :FOREIGNP NIL :METHOD #<SB-MOP:STANDARD-READER-METHOD VARJO.INTERNALS:LISP-NAME, slot:VARJO.INTERNALS:LISP-NAME, (VARJO.INTERNALS:QUADS) {10022FA393}>)) :SLOTS (#S(NET.DIDIERVERNA.DECLT::SLOT-DEFINITION :SYMBOL VARJO.INTERNALS:LISP-NAME :FOREIGNP NIL :SLOT #<SB-MOP:STANDARD-DIRECT-SLOT-DEFINITION VARJO.INTERNALS:LISP-NAME> :READERS (#11#) :WRITERS NIL) #S(NET.DIDIERVERNA.DECLT::SLOT-DEFINITION :SYMBOL VARJO.INTERNALS:GLSL-STRING :FOREIGNP NIL :SLOT #<SB-MOP:STANDARD-DIRECT-SLOT-DEFINITION VARJO.INTERNALS:GLSL-STRING> :READERS (#13=#) :WRITERS NIL))) #14=#S(NET.DIDIERVERNA.DECLT::CLASS-DEFINITION :SYMBOL VARJO.INTERNALS:QUALIFIER :FOREIGNP NIL :PARENTS (#S(NET.DIDIERVERNA.DECLT::CLASS-DEFINITION :SYMBOL STANDARD-OBJECT :FOREIGNP T :PARENTS NIL :CHILDREN NIL :METHODS NIL :SLOTS NIL)) :CHILDREN (#S(NET.DIDIERVERNA.DECLT::CLASS-DEFINITION :SYMBOL VARJO.INTERNALS:FEEDBACK-QUALIFIER :FOREIGNP NIL :PARENTS (#14#) :CHILDREN NIL :METHODS (# #) :SLOTS (#))) :METHODS (#S(NET.DIDIERVERNA.DECLT::METHOD-DEFINITION :SYMBOL VARJO.INTERNALS:QUALIFIER= :FOREIGNP NIL :METHOD #<STANDARD-METHOD VARJO.INTERNALS:QUALIFIER= (VARJO.INTERNALS:QUALIFIER VARJO.INTERNALS:QUALIFIER) {1002241BE3}>) #S(NET.DIDIERVERNA.DECLT::METHOD-DEFINITION :SYMBOL PRINT-OBJECT :FOREIGNP T :METHOD NIL) #S(NET.DIDIERVERNA.DECLT::METHOD-DEFINITION :SYMBOL VARJO.INTERNALS:GLSL-STRING :FOREIGNP NIL :METHOD #<SB-MOP:STANDARD-READER-METHOD VARJO.INTERNALS:GLSL-STRING, slot:VARJO.INTERNALS:GLSL-STRING, (VARJO.INTERNALS:QUALIFIER) {1002241BF3}>) #S(NET.DIDIERVERNA.DECLT::METHOD-DEFINITION :SYMBOL VARJO.INTERNALS:NAME :FOREIGNP NIL :METHOD #<SB-MOP:STANDARD-READER-METHOD VARJO.INTERNALS:NAME, slot:VARJO.INTERNALS:NAME, (VARJO.INTERNALS:QUALIFIER) {1002241C03}>)) :SLOTS (#S(NET.DIDIERVERNA.DECLT::SLOT-DEFINITION :SYMBOL VARJO.INTERNALS:NAME :FOREIGNP NIL :SLOT #<SB-MOP:STANDARD-DIRECT-SLOT-DEFINITION VARJO.INTERNALS:NAME> :READERS (#15=#) :WRITERS NIL) #S(NET.DIDIERVERNA.DECLT::SLOT-DEFINITION :SYMBOL VARJO.INTERNALS:GLSL-STRING :FOREIGNP NIL :SLOT #<SB-MOP:STANDARD-DIRECT-SLOT-DEFINITION VARJO.INTERNALS:GLSL-STRING> :READERS (#13#) :WRITERS NIL))) #16=#S(NET.DIDIERVERNA.DECLT::CLASS-DEFINITION :SYMBOL VARJO.INTERNALS:SHADER-VARIABLE :FOREIGNP NIL :PARENTS (#S(NET.DIDIERVERNA.DECLT::CLASS-DEFINITION :SYMBOL STANDARD-OBJECT :FOREIGNP T :PARENTS NIL :CHILDREN NIL :METHODS NIL :SLOTS NIL)) :CHILDREN (#S(NET.DIDIERVERNA.DECLT::CLASS-DEFINITION :SYMBOL VARJO.INTERNALS:INPUT-VARIABLE :FOREIGNP NIL :PARENTS (#16#) :CHILDREN NIL :METHODS (# #17=# #18=# # #) :SLOTS NIL) #S(NET.DIDIERVERNA.DECLT::CLASS-DEFINITION :SYMBOL VARJO.INTERNALS:UNIFORM-VARIABLE :FOREIGNP NIL :PARENTS (#16#) :CHILDREN (#) :METHODS (# #) :SLOTS (#)) #S(NET.DIDIERVERNA.DECLT::CLASS-DEFINITION :SYMBOL VARJO.INTERNALS::SHARED-VARIABLE :FOREIGNP NIL :PARENTS (#16#) :CHILDREN NIL :METHODS NIL :SLOTS NIL) #S(NET.DIDIERVERNA.DECLT::CLASS-DEFINITION :SYMBOL VARJO.INTERNALS::OUTPUT-VARIABLE :FOREIGNP NIL :PARENTS (#16#) :CHILDREN NIL :METHODS (# # # #) :SLOTS (# #))) :METHODS (#S(NET.DIDIERVERNA.DECLT::METHOD-DEFINITION :SYMBOL VARJO.INTERNALS:QUALIFIERS :FOREIGNP NIL :METHOD #<STANDARD-METHOD VARJO.INTERNALS:QUALIFIERS (VARJO.INTERNALS:SHADER-VARIABLE) {1002241E13}>) #S(NET.DIDIERVERNA.DECLT::METHOD-DEFINITION :SYMBOL VARJO.INTERNALS:V-TYPE-OF :FOREIGNP NIL :METHOD #<SB-MOP:STANDARD-READER-METHOD VARJO.INTERNALS:V-TYPE-OF, slot:TYPE, (VARJO.INTERNALS:SHADER-VARIABLE) {1002241E23}>) #S(NET.DIDIERVERNA.DECLT::METHOD-DEFINITION :SYMBOL VARJO.INTERNALS:GLSL-NAME :FOREIGNP NIL :METHOD #<SB-MOP:STANDARD-READER-METHOD VARJO.INTERNALS:GLSL-NAME, slot:VARJO.INTERNALS:GLSL-NAME, (VARJO.INTERNALS:SHADER-VARIABLE) {1002241E33}>) #S(NET.DIDIERVERNA.DECLT::METHOD-DEFINITION :SYMBOL VARJO.INTERNALS:NAME :FOREIGNP NIL :METHOD #<SB-MOP:STANDARD-READER-METHOD VARJO.INTERNALS:NAME, slot:VARJO.INTERNALS:NAME, (VARJO.INTERNALS:SHADER-VARIABLE) {1002241E43}>)) :SLOTS (#S(NET.DIDIERVERNA.DECLT::SLOT-DEFINITION :SYMBOL VARJO.INTERNALS:NAME :FOREIGNP NIL :SLOT #<SB-MOP:STANDARD-DIRECT-SLOT-DEFINITION VARJO.INTERNALS:NAME> :READERS (#15#) :WRITERS NIL) #S(NET.DIDIERVERNA.DECLT::SLOT-DEFINITION :SYMBOL VARJO.INTERNALS:GLSL-NAME :FOREIGNP NIL :SLOT #<SB-MOP:STANDARD-DIRECT-SLOT-DEFINITION VARJO.INTERNALS:GLSL-NAME> :READERS (#) :WRITERS NIL) #S(NET.DIDIERVERNA.DECLT::SLOT-DEFINITION :SYMBOL TYPE :FOREIGNP NIL :SLOT #<SB-MOP:STANDARD-DIRECT-SLOT-DEFINITION COMMON-LISP:TYPE> :READERS (#) :WRITERS NIL))) #19=#S(NET.DIDIERVERNA.DECLT::CLASS-DEFINITION :SYMBOL VARJO.INTERNALS:STAGE :FOREIGNP NIL :PARENTS (#S(NET.DIDIERVERNA.DECLT::CLASS-DEFINITION :SYMBOL STANDARD-OBJECT :FOREIGNP T :PARENTS NIL :CHILDREN NIL :METHODS NIL :SLOTS NIL)) :CHILDREN (#S(NET.DIDIERVERNA.DECLT::CLASS-DEFINITION :SYMBOL VARJO.INTERNALS:VERTEX-STAGE :FOREIGNP NIL :PARENTS (#19#) :CHILDREN (#) :METHODS (#20=# #21=# #22=# #23=# #24=# #25=# #26=# #27=# #) :SLOTS NIL) #S(NET.DIDIERVERNA.DECLT::CLASS-DEFINITION :SYMBOL VARJO.INTERNALS:TESSELLATION-CONTROL-STAGE :FOREIGNP NIL :PARENTS (#28=# #19#) :CHILDREN (#) :METHODS (#22# #26# #29=# # # #) :SLOTS NIL) #S(NET.DIDIERVERNA.DECLT::CLASS-DEFINITION :SYMBOL VARJO.INTERNALS:TESSELLATION-EVALUATION-STAGE :FOREIGNP NIL :PARENTS (#28# #19#) :CHILDREN (#) :METHODS (#23# #30=# #27# #29# #31=# #) :SLOTS NIL) #S(NET.DIDIERVERNA.DECLT::CLASS-DEFINITION :SYMBOL VARJO.INTERNALS:GEOMETRY-STAGE :FOREIGNP NIL :PARENTS (#19#) :CHILDREN (#) :METHODS (#20# #30# #25# #31# #) :SLOTS NIL) #S(NET.DIDIERVERNA.DECLT::CLASS-DEFINITION :SYMBOL VARJO.INTERNALS:FRAGMENT-STAGE :FOREIGNP NIL :PARENTS (#19#) :CHILDREN (#) :METHODS (#21# # # # #) :SLOTS NIL) #S(NET.DIDIERVERNA.DECLT::CLASS-DEFINITION :SYMBOL VARJO.INTERNALS:COMPUTE-STAGE :FOREIGNP NIL :PARENTS (#19#) :CHILDREN (#) :METHODS (#) :SLOTS NIL)) :METHODS (#20# #21# #22# #23# #30# #24# #S(NET.DIDIERVERNA.DECLT::METHOD-DEFINITION :SYMBOL VARJO.INTERNALS::TRANSFORM-ARG-TYPES :FOREIGNP NIL :METHOD #<STANDARD-METHOD VARJO.INTERNALS::TRANSFORM-ARG-TYPES (T T VARJO.INTERNALS:STAGE T) {1001C07C23}>) #S(NET.DIDIERVERNA.DECLT::METHOD-DEFINITION :SYMBOL VARJO.INTERNALS::CONTEXT-COMPATIBLEP :FOREIGNP NIL :METHOD #<STANDARD-METHOD VARJO.INTERNALS::CONTEXT-COMPATIBLEP (VARJO.INTERNALS:STAGE VARJO.INTERNALS:STAGE) {100B8A0E73}>) #17# #18# #S(NET.DIDIERVERNA.DECLT::METHOD-DEFINITION :SYMBOL VARJO.INTERNALS:TRANSLATE :FOREIGNP NIL :METHOD #<STANDARD-METHOD VARJO.INTERNALS:TRANSLATE (VARJO.INTERNALS:STAGE) {100B8A0E83}>) #S(NET.DIDIERVERNA.DECLT::METHOD-DEFINITION :SYMBOL VARJO.INTERNALS:STAGE-WHERE-FIRST-RETURN-IS-POSITION-P :FOREIGNP NIL :METHOD #<STANDARD-METHOD VARJO.INTERNALS:STAGE-WHERE-FIRST-RETURN-IS-POSITION-P (VARJO.INTERNALS:STAGE) {10022420D3}>) ...) :SLOTS (#S(NET.DIDIERVERNA.DECLT::SLOT-DEFINITION :SYMBOL VARJO.INTERNALS:INPUT-VARIABLES :FOREIGNP NIL :SLOT #<SB-MOP:STANDARD-DIRECT-SLOT-DEFINITION VARJO.INTERNALS:INPUT-VARIABLES> :READERS (#) :WRITERS (#)) #S(NET.DIDIERVERNA.DECLT::SLOT-DEFINITION :SYMBOL VARJO.INTERNALS:UNIFORM-VARIABLES :FOREIGNP NIL :SLOT #<SB-MOP:STANDARD-DIRECT-SLOT-DEFINITION VARJO.INTERNALS:UNIFORM-VARIABLES> :READERS (#) :WRITERS (#)) #S(NET.DIDIERVERNA.DECLT::SLOT-DEFINITION :SYMBOL VARJO.INTERNALS::SHARED-VARIABLES :FOREIGNP NIL :SLOT #<SB-MOP:STANDARD-DIRECT-SLOT-DEFINITION VARJO.INTERNALS::SHARED-VARIABLES> :READERS (#) :WRITERS (#)) #S(NET.DIDIERVERNA.DECLT::SLOT-DEFINITION :SYMBOL VARJO.INTERNALS:CONTEXT :FOREIGNP NIL :SLOT #<SB-MOP:STANDARD-DIRECT-SLOT-DEFINITION VARJO.INTERNALS:CONTEXT> :READERS (#) :WRITERS (#)) #S(NET.DIDIERVERNA.DECLT::SLOT-DEFINITION :SYMBOL VARJO.INTERNALS:LISP-CODE :FOREIGNP NIL :SLOT #<SB-MOP:STANDARD-DIRECT-SLOT-DEFINITION VARJO.INTERNALS:LISP-CODE> :READERS (#) :WRITERS (#)) #S(NET.DIDIERVERNA.DECLT::SLOT-DEFINITION :SYMBOL VARJO.INTERNALS:STEMCELLS-ALLOWED :FOREIGNP NIL :SLOT #<SB-MOP:STANDARD-DIRECT-SLOT-DEFINITION VARJO.INTERNALS:STEMCELLS-ALLOWED> :READERS (#) :WRITERS (#)) #S(NET.DIDIERVERNA.DECLT::SLOT-DEFINITION :SYMBOL VARJO.INTERNALS:PREVIOUS-STAGE :FOREIGNP NIL :SLOT #<SB-MOP:STANDARD-DIRECT-SLOT-DEFINITION VARJO.INTERNALS:PREVIOUS-STAGE> :READERS (#) :WRITERS (#)) #S(NET.DIDIERVERNA.DECLT::SLOT-DEFINITION :SYMBOL VARJO.INTERNALS:PRIMITIVE-IN :FOREIGNP NIL :SLOT #<SB-MOP:STANDARD-DIRECT-SLOT-DEFINITION VARJO.INTERNALS:PRIMITIVE-IN> :READERS (#) :WRITERS (#)))) #4# ...))
14: (NET.DIDIERVERNA.DECLT::ADD-CATEGORIES-NODE #1=#S(NET.DIDIERVERNA.DECLT::NODE :NAME "Exported definitions" :SYNOPSIS NIL :SECTION-TYPE :NUMBERED :SECTION-NAME NIL :NEXT NIL :PREVIOUS NIL :UP #2=#S(NET.DIDIERVERNA.DECLT::NODE :NAME "Definitions" :SYNOPSIS "The symbols documentation" :SECTION-TYPE :NUMBERED :SECTION-NAME NIL :NEXT NIL :PREVIOUS #3=#S(NET.DIDIERVERNA.DECLT::NODE :NAME "Packages" :SYNOPSIS "The packages documentation" :SECTION-TYPE :NUMBERED :SECTION-NAME NIL :NEXT #2# :PREVIOUS #4=#S(NET.DIDIERVERNA.DECLT::NODE :NAME "Files" :SYNOPSIS "The files documentation" :SECTION-TYPE :NUMBERED :SECTION-NAME NIL :NEXT #3# :PREVIOUS #S(NET.DIDIERVERNA.DECLT::NODE :NAME "Systems" :SYNOPSIS "The systems documentation" :SECTION-TYPE :NUMBERED :SECTION-NAME NIL :NEXT #4# :PREVIOUS # :UP #5=# :CHILDREN # :BEFORE-MENU-CONTENTS "The main system appears first, followed by any subsystem dependency." :AFTER-MENU-CONTENTS NIL) :UP #5# :CHILDREN (#) :BEFORE-MENU-CONTENTS "Files are sorted by type and then listed depth-first from the systems
components trees." :AFTER-MENU-CONTENTS NIL) :UP #5# :CHILDREN (#S(NET.DIDIERVERNA.DECLT::NODE :NAME "The varjo package" :SYNOPSIS NIL :SECTION-TYPE :NUMBERED :SECTION-NAME "@t{varjo}" :NEXT #6=# :PREVIOUS NIL :UP #3# :CHILDREN NIL :BEFORE-MENU-CONTENTS "@anchor{go to the VARJO package}@c
@packageindex{varjo}@c
@table @strong
@item Source
@ref{go to the varjo/package<dot>lisp file, , @t{package.lisp}} (file)
@item Use List
@itemize @bullet
@item
@t{editor-hints.named-readtables}
@item
@t{alexandria.0.dev}
@item
@ref{go to the VARJO<dot>API package, , @t{varjo.api}}
@item
@ref{go to the VARI<dot>TYPES package, , @t{vari.types}}
@item
@ref{go to the VARJO<dot>UTILS package, , @t{varjo.utils}}
@item
@t{common-lisp}
@end itemize
@end table
" :AFTER-MENU-CONTENTS NIL) #6# #S(NET.DIDIERVERNA.DECLT::NODE :NAME "The vari.cl package" :SYNOPSIS NIL :SECTION-TYPE :NUMBERED :SECTION-NAME "@t{vari.cl}" :NEXT #7=# :PREVIOUS #6# :UP #3# :CHILDREN NIL :BEFORE-MENU-CONTENTS "@anchor{go to the VARI<dot>CL package}@c
@packageindex{vari.cl}@c
@table @strong
@item Source
@ref{go to the varjo/package<dot>lisp file, , @t{package.lisp}} (file)
@item Use List
@itemize @bullet
@item
@ref{go to the VARI<dot>TYPES package, , @t{vari.types}}
@item
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item
@t{editor-hints.named-readtables}
@item
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item
@ref{go to the VARI<dot>GLSL package, , @t{vari.glsl}}
@item
@ref{go to the VARJO<dot>UTILS package, , @t{varjo.utils}}
@item
@t{common-lisp}
@end itemize
@item Used By List
@ref{go to the VARI package, , @t{vari}}
@item Exported Definitions
@itemize @bullet
@item
@ref{go to the VARI<dot>CL<colon><colon>KIND generic function, , @t{kind}} (generic function)
@item
@ref{go to the VARI<dot>CL<colon><colon>KIND VARI<dot>CL<colon><colon>OUTPUT-PRIMITIVE method, , @t{kind}} (method)
@item
@ref{go to the VARI<dot>CL<colon><colon>KIND COMMON-LISP<colon><colon>LIST method, , @t{kind}} (method)
@item
@ref{go to the VARI<dot>CL<colon><colon>LOCAL-SIZE class, , @t{local-size}} (class)
@item
@ref{go to the VARI<dot>CL<colon><colon>MAX-VERTICES generic function, , @t{max-vertices}} (generic function)
@item
@ref{go to the VARI<dot>CL<colon><colon>MAX-VERTICES VARI<dot>CL<colon><colon>OUTPUT-PRIMITIVE method, , @t{max-vertices}} (method)
@item
@ref{go to the VARI<dot>CL<colon><colon>MAX-VERTICES COMMON-LISP<colon><colon>LIST method, , @t{max-vertices}} (method)
@item
@ref{go to the VARI<dot>CL<colon><colon>ORDER generic function, , @t{order}} (generic function)
@item
@ref{go to the VARI<dot>CL<colon><colon>ORDER VARI<dot>CL<colon><colon>TESSELLATE-TO method, , @t{order}} (method)
@item
@ref{go to the VARI<dot>CL<colon><colon>ORDER COMMON-LISP<colon><colon>LIST method, , @t{order}} (method)
@item
@ref{go to the VARI<dot>CL<colon><colon>OUTPUT-PATCH class, , @t{output-patch}} (class)
@item
@ref{go to the VARI<dot>CL<colon><colon>OUTPUT-PRIMITIVE class, , @t{output-primitive}} (class)
@item
@ref{go to the VARI<dot>CL<colon><colon>SPACING generic function, , @t{spacing}} (generic function)
@item
@ref{go to the VARI<dot>CL<colon><colon>SPACING VARI<dot>CL<colon><colon>TESSELLATE-TO method, , @t{spacing}} (method)
@item
@ref{go to the VARI<dot>CL<colon><colon>SPACING COMMON-LISP<colon><colon>LIST method, , @t{spacing}} (method)
@item
@ref{go to the VARI<dot>CL<colon><colon>TESSELLATE-TO class, , @t{tessellate-to}} (class)
@item
@ref{go to the VARI<dot>CL<colon><colon>VARI-DESCRIBE function, , @t{vari-describe}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VERTICES generic function, , @t{vertices}} (generic function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VERTICES VARI<dot>CL<colon><colon>OUTPUT-PATCH method, , @t{vertices}} (method)
@item
@ref{go to the VARI<dot>CL<colon><colon>VERTICES COMMON-LISP<colon><colon>LIST method, , @t{vertices}} (method)
@end itemize
@item Internal Definitions
@itemize @bullet
@item
@ref{go to the VARI<dot>CL<colon><colon>%FUNCTION-FOR-EXTERNAL-FUNCS function, , @t{%function-for-external-funcs}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>%FUNCTION-FOR-FUNC-SETS function, , @t{%function-for-func-sets}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>%FUNCTION-FOR-REGULAR-FUNCS function, , @t{%function-for-regular-funcs}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>%VALUES-FOR-EMIT function, , @t{%values-for-emit}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>%VALUES-FOR-MULTI-VALUE-BIND function, , @t{%values-for-multi-value-bind}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>%VALUES-VOID function, , @t{%values-void}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>*VARI-ADDITIONAL-FORM-DOCS* special variable, , @t{*vari-additional-form-docs*}} (special variable)
@item
@ref{go to the VARI<dot>CL<colon><colon>CALC-SETQ-TYPE function, , @t{calc-setq-type}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>COMPILE-GLSL-EXPRESSION-STRING function, , @t{compile-glsl-expression-string}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>COMPILE-LOCALLY function, , @t{compile-locally}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>COMPILE-REGULAR-SETQ-FORM function, , @t{compile-regular-setq-form}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>COMPILE-THE-REGULAR-FORM-OF-IF function, , @t{compile-the-regular-form-of-if}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>COMPLEMENT-SINGLE-FUNC function, , @t{complement-single-func}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>COMPLEMENT-V-ANY-ONE-OF function, , @t{complement-v-any-one-of}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>COMPUTE-CONDITIONAL-TYPE-SET function, , @t{compute-conditional-type-set}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>COMPUTE-IF-TYPE-SET function, , @t{compute-if-type-set}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>DEFINE-TYPE-PRED macro, , @t{define-type-pred}} (macro)
@item
@ref{go to the VARI<dot>CL<colon><colon>EXTRACT-SWIZZLE-STRING function, , @t{extract-swizzle-string}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>EXTRACT-VALUE-FORM function, , @t{extract-value-form}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>FORM-BINDING-SIGNATURE function, , @t{form-binding-signature}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>GEN-ASSIGNEMENT-FORM-FOR-EMIT function, , @t{gen-assignement-form-for-emit}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>GEN-ASSIGNEMENT-FORM-FOR-RETURN function, , @t{gen-assignement-form-for-return}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>GEN-CASE-USING-COND function, , @t{gen-case-using-cond}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>GEN-CASE-USING-SWITCH function, , @t{gen-case-using-switch}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>GEN-CHUNK-FOR-CONDITIONAL-ARM function, , @t{gen-chunk-for-conditional-arm}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>GEN-CHUNK-FOR-DEFAULT-ARM function, , @t{gen-chunk-for-default-arm}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>GEN-CHUNK-FOR-IF-BLOCK function, , @t{gen-chunk-for-if-block}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>GEN-STRING-FOR-IF-FORM function, , @t{gen-string-for-if-form}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>GEN-STRING-FOR-SWITCH-FORM function, , @t{gen-string-for-switch-form}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>GEN-STRING-FOR-TERNARY-FORM function, , @t{gen-string-for-ternary-form}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>GLSL-LET function, , @t{glsl-let}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>JANKY-PARSE-NAME function, , @t{janky-parse-name}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>JANKY-PARSE-PACKAGE function, , @t{janky-parse-package}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>QUALIFIER-FORM-P function, , @t{qualifier-form-p}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>SATIFIES-TERNARY-STYLE-RESTRICTIONS-P function, , @t{satifies-ternary-style-restrictions-p}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>STRUCT-SLOT-ACCESSOR function, , @t{struct-slot-accessor}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VALID-FOR-SWITCH-STATEMENTP function, , @t{valid-for-switch-statementp}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-%BREAK function, , @t{vs-%break}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-%GLSL-EXPR function, , @t{vs-%glsl-expr}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-%MODIFY-PLACE function, , @t{vs-%modify-place}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-%PEEK function, , @t{vs-%peek}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-%SYNTHESIZE function, , @t{vs-%synthesize}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-AND function, , @t{vs-and}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-AREF function, , @t{vs-aref}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-CASE function, , @t{vs-case}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-EMIT-DATA function, , @t{vs-emit-data}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-FLET function, , @t{vs-flet}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-FUNCTION function, , @t{vs-function}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-IF function, , @t{vs-if}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-LABELS function, , @t{vs-labels}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-LABELS-NO-IMPLICIT function, , @t{vs-labels-no-implicit}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-LET function, , @t{vs-let}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-LISP-CODE-AS-UNIFORM function, , @t{vs-lisp-code-as-uniform}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-LOCALLY function, , @t{vs-locally}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-MACROLET-1 function, , @t{vs-macrolet-1}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-MAKE-ARRAY function, , @t{vs-make-array}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-MULTIPLE-VALUE-BIND function, , @t{vs-multiple-value-bind}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-MULTIPLE-VALUE-CALL function, , @t{vs-multiple-value-call}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-MULTIPLE-VALUE-PROG1 function, , @t{vs-multiple-value-prog1}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-MULTIPLE-VALUE-SETQ function, , @t{vs-multiple-value-setq}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-NTH-VALUE function, , @t{vs-nth-value}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-OR function, , @t{vs-or}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-PROGN function, , @t{vs-progn}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-RETURN function, , @t{vs-return}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-SETQ function, , @t{vs-setq}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-SLOT-VALUE function, , @t{vs-slot-value}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-SWIZZLE function, , @t{vs-swizzle}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-SYMBOL-MACROLET-1 function, , @t{vs-symbol-macrolet-1}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-THE function, , @t{vs-the}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-TYPECASE function, , @t{vs-typecase}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-UINT function, , @t{vs-uint}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-VALUES function, , @t{vs-values}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-VALUES-SAFE function, , @t{vs-values-safe}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>VS-VECTOR function, , @t{vs-vector}} (function)
@item
@ref{go to the VARI<dot>CL<colon><colon>X generic function, , @t{x}} (generic function)
@item
@ref{go to the VARI<dot>CL<colon><colon>X VARI<dot>CL<colon><colon>LOCAL-SIZE method, , @t{x}} (method)
@item
@ref{go to the VARI<dot>CL<colon><colon>X COMMON-LISP<colon><colon>LIST method, , @t{x}} (method)
@item
@ref{go to the VARI<dot>CL<colon><colon>Y generic function, , @t{y}} (generic function)
@item
@ref{go to the VARI<dot>CL<colon><colon>Y VARI<dot>CL<colon><colon>LOCAL-SIZE method, , @t{y}} (method)
@item
@ref{go to the VARI<dot>CL<colon><colon>Y COMMON-LISP<colon><colon>LIST method, , @t{y}} (method)
@item
@ref{go to the VARI<dot>CL<colon><colon>Z generic function, , @t{z}} (generic function)
@item
@ref{go to the VARI<dot>CL<colon><colon>Z VARI<dot>CL<colon><colon>LOCAL-SIZE method, , @t{z}} (method)
@item
@ref{go to the VARI<dot>CL<colon><colon>Z COMMON-LISP<colon><colon>LIST method, , @t{z}} (method)
@end itemize
@end table
" :AFTER-MENU-CONTENTS NIL) #7# #S(NET.DIDIERVERNA.DECLT::NODE :NAME "The varjo.api package" :SYNOPSIS NIL :SECTION-TYPE :NUMBERED :SECTION-NAME "@t{varjo.api}" :NEXT #8=# :PREVIOUS #7# :UP #3# :CHILDREN NIL :BEFORE-MENU-CONTENTS "@anchor{go to the VARJO<dot>API package}@c
@packageindex{varjo.api}@c
@table @strong
@item Source
@ref{go to the varjo/package<dot>lisp file, , @t{package.lisp}} (file)
@item Use List
@itemize @bullet
@item
@t{editor-hints.named-readtables}
@item
@t{alexandria.0.dev}
@item
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item
@ref{go to the VARJO<dot>UTILS package, , @t{varjo.utils}}
@item
@t{common-lisp}
@end itemize
@item Used By List
@ref{go to the VARJO package, , @t{varjo}}
@item Exported Definitions
@itemize @bullet
@item
@ref{go to the VARJO<dot>API<colon><colon>ADD-LISP-FORM-AS-UNIFORM generic function, , @t{add-lisp-form-as-uniform}} (generic function)
@item
@ref{go to the VARJO<dot>API<colon><colon>ADD-LISP-FORM-AS-UNIFORM COMMON-LISP<colon><colon>T COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>EXTENDED-ENVIRONMENT method, , @t{add-lisp-form-as-uniform}} (method)
@item
@ref{go to the VARJO<dot>API<colon><colon>ALL-BOUND-SYMBOLS generic function, , @t{all-bound-symbols}} (generic function)
@item
@ref{go to the VARJO<dot>API<colon><colon>ALL-BOUND-SYMBOLS VARJO<dot>INTERNALS<colon><colon>EXTENDED-ENVIRONMENT method, , @t{all-bound-symbols}} (method)
@item
@ref{go to the VARJO<dot>API<colon><colon>ARGUMENT-IS-UNIFORM-P generic function, , @t{argument-is-uniform-p}} (generic function)
@item
@ref{go to the VARJO<dot>API<colon><colon>ARGUMENT-IS-UNIFORM-P COMMON-LISP<colon><colon>SYMBOL VARJO<dot>INTERNALS<colon><colon>MACRO-EXPANSION-ENVIRONMENT method, , @t{argument-is-uniform-p}} (method)
@item
@ref{go to the VARJO<dot>API<colon><colon>ARGUMENT-IS-UNIFORM-P COMMON-LISP<colon><colon>SYMBOL VARJO<dot>INTERNALS<colon><colon>COMPILER-MACRO-EXPANSION-ENVIRONMENT method, , @t{argument-is-uniform-p}} (method)
@item
@ref{go to the VARJO<dot>API<colon><colon>ARGUMENT-TYPE generic function, , @t{argument-type}} (generic function)
@item
@ref{go to the VARJO<dot>API<colon><colon>ARGUMENT-TYPE COMMON-LISP<colon><colon>SYMBOL VARJO<dot>INTERNALS<colon><colon>COMPILER-MACRO-EXPANSION-ENVIRONMENT method, , @t{argument-type}} (method)
@item
@ref{go to the VARJO<dot>API<colon><colon>ARGUMENT-TYPE COMMON-LISP<colon><colon>SYMBOL VARJO<dot>INTERNALS<colon><colon>MACRO-EXPANSION-ENVIRONMENT method, , @t{argument-type}} (method)
@item
@ref{go to the VARJO<dot>API<colon><colon>ARGUMENT-UNIFORM-NAME generic function, , @t{argument-uniform-name}} (generic function)
@item
@ref{go to the VARJO<dot>API<colon><colon>ARGUMENT-UNIFORM-NAME COMMON-LISP<colon><colon>SYMBOL VARJO<dot>INTERNALS<colon><colon>MACRO-EXPANSION-ENVIRONMENT method, , @t{argument-uniform-name}} (method)
@item
@ref{go to the VARJO<dot>API<colon><colon>ARGUMENT-UNIFORM-NAME COMMON-LISP<colon><colon>SYMBOL VARJO<dot>INTERNALS<colon><colon>COMPILER-MACRO-EXPANSION-ENVIRONMENT method, , @t{argument-uniform-name}} (method)
@item
@ref{go to the VARJO<dot>API<colon><colon>METADATA-FOR-ARGUMENT generic function, , @t{metadata-for-argument}} (generic function)
@item
@ref{go to the VARJO<dot>API<colon><colon>METADATA-FOR-ARGUMENT COMMON-LISP<colon><colon>SYMBOL COMMON-LISP<colon><colon>SYMBOL VARJO<dot>INTERNALS<colon><colon>MACRO-EXPANSION-ENVIRONMENT method, , @t{metadata-for-argument}} (method)
@item
@ref{go to the VARJO<dot>API<colon><colon>METADATA-FOR-ARGUMENT COMMON-LISP<colon><colon>SYMBOL COMMON-LISP<colon><colon>SYMBOL VARJO<dot>INTERNALS<colon><colon>COMPILER-MACRO-EXPANSION-ENVIRONMENT method, , @t{metadata-for-argument}} (method)
@item
@ref{go to the VARJO<dot>API<colon><colon>METADATA-FOR-VARIABLE generic function, , @t{metadata-for-variable}} (generic function)
@item
@ref{go to the VARJO<dot>API<colon><colon>METADATA-FOR-VARIABLE COMMON-LISP<colon><colon>SYMBOL COMMON-LISP<colon><colon>SYMBOL VARJO<dot>INTERNALS<colon><colon>EXTENDED-ENVIRONMENT method, , @t{metadata-for-variable}} (method)
@item
@ref{go to the VARJO<dot>API<colon><colon>VARIABLE-IN-SCOPE-P generic function, , @t{variable-in-scope-p}} (generic function)
@item
@ref{go to the VARJO<dot>API<colon><colon>VARIABLE-IN-SCOPE-P COMMON-LISP<colon><colon>SYMBOL VARJO<dot>INTERNALS<colon><colon>EXTENDED-ENVIRONMENT method, , @t{variable-in-scope-p}} (method)
@item
@ref{go to the VARJO<dot>API<colon><colon>VARIABLE-IS-UNIFORM-P generic function, , @t{variable-is-uniform-p}} (generic function)
@item
@ref{go to the VARJO<dot>API<colon><colon>VARIABLE-IS-UNIFORM-P COMMON-LISP<colon><colon>SYMBOL VARJO<dot>INTERNALS<colon><colon>EXTENDED-ENVIRONMENT method, , @t{variable-is-uniform-p}} (method)
@item
@ref{go to the VARJO<dot>API<colon><colon>VARIABLE-TYPE generic function, , @t{variable-type}} (generic function)
@item
@ref{go to the VARJO<dot>API<colon><colon>VARIABLE-TYPE COMMON-LISP<colon><colon>SYMBOL VARJO<dot>INTERNALS<colon><colon>EXTENDED-ENVIRONMENT method, , @t{variable-type}} (method)
@item
@ref{go to the VARJO<dot>API<colon><colon>VARIABLE-UNIFORM-NAME generic function, , @t{variable-uniform-name}} (generic function)
@item
@ref{go to the VARJO<dot>API<colon><colon>VARIABLE-UNIFORM-NAME COMMON-LISP<colon><colon>SYMBOL VARJO<dot>INTERNALS<colon><colon>EXTENDED-ENVIRONMENT method, , @t{variable-uniform-name}} (method)
@item
@ref{go to the VARJO<dot>API<colon><colon>VARIABLES-IN-SCOPE generic function, , @t{variables-in-scope}} (generic function)
@item
@ref{go to the VARJO<dot>API<colon><colon>VARIABLES-IN-SCOPE VARJO<dot>INTERNALS<colon><colon>EXTENDED-ENVIRONMENT method, , @t{variables-in-scope}} (method)
@end itemize
@item Internal Definitions
@itemize @bullet
@item
@ref{go to the VARJO<dot>API<colon><colon>%GET-MACRO-ARG function, , @t{%get-macro-arg}} (function)
@item
@ref{go to the VARJO<dot>API<colon><colon>%GET-VAL-BINDING function, , @t{%get-val-binding}} (function)
@item
@ref{go to the VARJO<dot>API<colon><colon>ALL-SYMBOL-BINDING-NAMES function, , @t{all-symbol-binding-names}} (function)
@end itemize
@end table
" :AFTER-MENU-CONTENTS NIL) #8# #S(NET.DIDIERVERNA.DECLT::NODE :NAME "The varjo-conditions package" :SYNOPSIS NIL :SECTION-TYPE :NUMBERED :SECTION-NAME "@t{varjo-conditions}" :NEXT #9=# :PREVIOUS #8# :UP #3# :CHILDREN NIL :BEFORE-MENU-CONTENTS "@anchor{go to the VARJO-CONDITIONS package}@c
@packageindex{varjo-conditions}@c
@table @strong
@item Source
@ref{go to the varjo/package<dot>lisp file, , @t{package.lisp}} (file)
@item Use List
@itemize @bullet
@item
@t{editor-hints.named-readtables}
@item
@t{alexandria.0.dev}
@item
@ref{go to the VARJO<dot>UTILS package, , @t{varjo.utils}}
@item
@t{common-lisp}
@end itemize
@item Used By List
@itemize @bullet
@item
@ref{go to the VARI<dot>CL package, , @t{vari.cl}}
@item
@ref{go to the VARI<dot>GLSL package, , @t{vari.glsl}}
@item
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@end itemize
@item Exported Definitions
@itemize @bullet
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>ALT-TYPE-NAME-ALREADY-TAKEN condition, , @t{alt-type-name-already-taken}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>ARGS-INCOMPATIBLE condition, , @t{args-incompatible}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>ARRAYS-CANNOT-HOLD-EPHEMERAL-TYPES condition, , @t{arrays-cannot-hold-ephemeral-types}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>ASSIGNING-TO-READONLY condition, , @t{assigning-to-readonly}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>ASSIGNMENT-TYPE-MATCH condition, , @t{assignment-type-match}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>ATTEMPTED-TRANSFORM-FEEDBACK-IN-FRAGMENT-SHADER condition, , @t{attempted-transform-feedback-in-fragment-shader}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>BAD-MAKE-FUNCTION-ARGS condition, , @t{bad-make-function-args}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>BODY-BLOCK-EMPTY condition, , @t{body-block-empty}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>CANNOT-COMPILE condition, , @t{cannot-compile}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>CANNOT-ESTABLISH-EXACT-FUNCTION condition, , @t{cannot-establish-exact-function}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>CANNOT-NOT-SHADOW-CORE condition, , @t{cannot-not-shadow-core}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>CANNOT-SWIZZLE-THIS-TYPE condition, , @t{cannot-swizzle-this-type}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>CANNOT-TAKE-REFERENCE-TO-&REST-FUNC condition, , @t{cannot-take-reference-to-&rest-func}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>CLASHES-FOUND-BETWEEN-INPUT-AND-OUTPUT-NAMES condition, , @t{clashes-found-between-input-and-output-names}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>CLEAN-GLOBAL-ENV-ERROR condition, , @t{clean-global-env-error}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>CLONE-GLOBAL-ENV-ERROR condition, , @t{clone-global-env-error}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>CLOSURES-NOT-SUPPORTED condition, , @t{closures-not-supported}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>COMPUTE-PIPELINE-MAY-ONLY-CONTAIN-ONE-STAGE condition, , @t{compute-pipeline-may-only-contain-one-stage}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>COMPUTE-STAGE-MUST-BE-VOID condition, , @t{compute-stage-must-be-void}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>COMPUTE-STAGE-WITH-IN-ARGS condition, , @t{compute-stage-with-in-args}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>CONDITIONAL-MULTIPLE-VALS-MISMATCH condition, , @t{conditional-multiple-vals-mismatch}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>CONDITIONAL-RETURN-TYPE-MISMATCH condition, , @t{conditional-return-type-mismatch}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>COULD-NOT-FIND-ANY condition, , @t{could-not-find-any}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>COULD-NOT-FIND-FUNCTION condition, , @t{could-not-find-function}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>COULDNT-CONVERT-PRIMITIVE-FOR-GEOMETRY-STAGE condition, , @t{couldnt-convert-primitive-for-geometry-stage}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>CROSS-SCOPE-MUTATE condition, , @t{cross-scope-mutate}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>DISCARD-NOT-IN-FRAGMENT-STAGE condition, , @t{discard-not-in-fragment-stage}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>DISCARDED-FOR-CONDITIONAL-TEST condition, , @t{discarded-for-conditional-test}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>DUP-NAME-IN-LET condition, , @t{dup-name-in-let}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>DUP-NAMES-IN-LET condition, , @t{dup-names-in-let}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>DUPLICATE-NAME condition, , @t{duplicate-name}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>EMIT-NOT-IN-GEOMETRY-STAGE condition, , @t{emit-not-in-geometry-stage}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>EMIT-TYPE-MISMATCH condition, , @t{emit-type-mismatch}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>EMPTY-PROGN condition, , @t{empty-progn}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>ENV-PARENT-CONTEXT-MISMATCH condition, , @t{env-parent-context-mismatch}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>EXTERNAL-FUNCTION-INVALID-IN-ARG-TYPES condition, , @t{external-function-invalid-in-arg-types}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>FIND-MUTUAL-TYPE-BUG condition, , @t{find-mutual-type-bug}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>FLOW-ID-MUST-BE-SPECIFIED-CO condition, , @t{flow-id-must-be-specified-co}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>FLOW-ID-MUST-BE-SPECIFIED-VV condition, , @t{flow-id-must-be-specified-vv}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>FLOW-IDS-MANDATORY condition, , @t{flow-ids-mandatory}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>FOR-LOOP-ONLY-ONE-VAR condition, , @t{for-loop-only-one-var}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>FOR-LOOP-SIMPLE-EXPRESSION condition, , @t{for-loop-simple-expression}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>FRAGMENT-INTEGER-INPUTS-NOT-FLAT condition, , @t{fragment-integer-inputs-not-flat}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>FUNCALL-OF-SPECIAL-OPERATOR condition, , @t{funcall-of-special-operator}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>FUNCTION-WITH-NO-RETURN-TYPE condition, , @t{function-with-no-return-type}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>GLOBAL-UNINITIALIZED-VAR condition, , @t{global-uninitialized-var}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>IF-BRANCH-TYPE-MISMATCH condition, , @t{if-branch-type-mismatch}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>IF-FORM-MULTIPLE-VALS-MISMATCH condition, , @t{if-form-multiple-vals-mismatch}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>IF-FORM-TYPE-MISMATCH condition, , @t{if-form-type-mismatch}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>IF-TEST-TYPE-MISMATCH condition, , @t{if-test-type-mismatch}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>ILLEGAL-&REST-IN-ARGS condition, , @t{illegal-&rest-in-args}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>ILLEGAL-&UNIFORM-IN-ARGS condition, , @t{illegal-&uniform-in-args}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>ILLEGAL-IMPLICIT-ARGS condition, , @t{illegal-implicit-args}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>INCORRECT-STAGE-FOR-SHARED-VARIABLES condition, , @t{incorrect-stage-for-shared-variables}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>INLINE-GLSL-VERTEX-STAGE-NOT-SUPPORTED condition, , @t{inline-glsl-vertex-stage-not-supported}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>INVALID-ARGUMENTS-FOR-SPECIAL-OP condition, , @t{invalid-arguments-for-special-op}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>INVALID-COERCE condition, , @t{invalid-coerce}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>INVALID-CONTEXT-SYMBOL condition, , @t{invalid-context-symbol}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>INVALID-ENV-VARS condition, , @t{invalid-env-vars}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>INVALID-FEEDBACK-QUALIFIER-FORM condition, , @t{invalid-feedback-qualifier-form}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>INVALID-FLOW-ID-MULTI-RETURN condition, , @t{invalid-flow-id-multi-return}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>INVALID-FOR-LOOP-TYPE condition, , @t{invalid-for-loop-type}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>INVALID-FORM-LIST condition, , @t{invalid-form-list}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>INVALID-FUNCTION-RETURN-SPEC condition, , @t{invalid-function-return-spec}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>INVALID-GLSL-NUMERIC-LITERAL condition, , @t{invalid-glsl-numeric-literal}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>INVALID-INLINE-GLSL-STAGE-ARG-LAYOUT condition, , @t{invalid-inline-glsl-stage-arg-layout}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>INVALID-OUTPUT-PRIMITIVE-FOR-GEOMETRY condition, , @t{invalid-output-primitive-for-geometry}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>INVALID-PRIMITIVE-FOR-COMPUTE-STAGE condition, , @t{invalid-primitive-for-compute-stage}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>INVALID-PRIMITIVE-FOR-GEOMETRY-STAGE condition, , @t{invalid-primitive-for-geometry-stage}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>INVALID-SHADER-STAGE condition, , @t{invalid-shader-stage}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>INVALID-SPECIAL-FUNCTION-ARG-SPEC condition, , @t{invalid-special-function-arg-spec}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>INVALID-STAGE-KIND condition, , @t{invalid-stage-kind}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>INVALID-SYMBOL-MACRO-FORM condition, , @t{invalid-symbol-macro-form}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>INVALID-THE-DECLARATION condition, , @t{invalid-the-declaration}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>INVALID-TYPE-FOR-DUMMY-FUNCTION condition, , @t{invalid-type-for-dummy-function}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>INVALID-V-DEFUN-TEMPLATE condition, , @t{invalid-v-defun-template}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>KEYWORD-IN-FUNCTION-POSITION condition, , @t{keyword-in-function-position}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>LET-DISCARDED condition, , @t{let-discarded}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>LET-OR condition, , @t{let-or}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>LET-OR-FUNCTIONS condition, , @t{let-or-functions}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>LET-RETURNED condition, , @t{let-returned}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>LET-VOID condition, , @t{let-void}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>LOOP-FLOW-ANALYSIS-FAILURE condition, , @t{loop-flow-analysis-failure}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>LOOP-WILL-NEVER-HALT condition, , @t{loop-will-never-halt}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>MAKE-ARRAY-CANT-CAST-ARGS condition, , @t{make-array-cant-cast-args}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>MAKE-ARRAY-CANT-ESTABLISH-DEFAULT-VALUE condition, , @t{make-array-cant-establish-default-value}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>MAKE-ARRAY-CONFLICTING-ARGS condition, , @t{make-array-conflicting-args}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>MAKE-ARRAY-CONFLICTING-LENGTHS condition, , @t{make-array-conflicting-lengths}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>MAKE-ARRAY-MANDATORY-ARGS condition, , @t{make-array-mandatory-args}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>MERGE-ENV-FUNC-SCOPE-MISMATCH condition, , @t{merge-env-func-scope-mismatch}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>MERGE-ENV-PARENT-MISMATCH condition, , @t{merge-env-parent-mismatch}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>MULTI-DIMENSIONAL-ARRAY condition, , @t{multi-dimensional-array}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>MULTI-FUNC-STEMCELLS condition, , @t{multi-func-stemcells}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>MULTI-VAL-BIND-MISMATCH condition, , @t{multi-val-bind-mismatch}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>NAME-CLASH condition, , @t{name-clash}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>NAME-MISMATCH condition, , @t{name-mismatch}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>NAME-UNSUITABLE condition, , @t{name-unsuitable}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>NIL-RETURN-SET condition, , @t{nil-return-set}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>NO-ARGS-REMOVE-IN-UNREP-INLINING condition, , @t{no-args-remove-in-unrep-inlining}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>NO-FUNCTION-RETURNS condition, , @t{no-function-returns}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>NO-VALID-FUNCTION condition, , @t{no-valid-function}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>NO-VERSION-IN-CONTEXT condition, , @t{no-version-in-context}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>NON-PLACE-ASSIGN condition, , @t{non-place-assign}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>NONE-TYPE-IN-OUT-VARS condition, , @t{none-type-in-out-vars}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>NOT-CORE-TYPE-ERROR condition, , @t{not-core-type-error}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>OPAQUE-DATA-FOUND condition, , @t{opaque-data-found}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>OUT-VAR-NAME-TAKEN condition, , @t{out-var-name-taken}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>OUT-VAR-TYPE-MISMATCH condition, , @t{out-var-type-mismatch}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>PRIMITIVE-IN-CONTEXT condition, , @t{primitive-in-context}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>PRIMITIVES-DONT-MATCH condition, , @t{primitives-dont-match}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>PROBLEM-WITH-THE-COMPILER condition, , @t{problem-with-the-compiler}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>RETURN-SET-MISMATCH condition, , @t{return-set-mismatch}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>RETURN-TYPE-MISMATCH condition, , @t{return-type-mismatch}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>RETURNS-IN-GEOMETRY-STAGE condition, , @t{returns-in-geometry-stage}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>ROLLING-TRANSLATE-INVALID-STAGE condition, , @t{rolling-translate-invalid-stage}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>SETQ-READONLY condition, , @t{setq-readonly}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>SETQ-TYPE-MATCH condition, , @t{setq-type-match}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>SHARED-OPAQUE condition, , @t{shared-opaque}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>SHOULD-BE-CONSTANT condition, , @t{should-be-constant}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>SHOULD-BE-QUOTED condition, , @t{should-be-quoted}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>SLOT-NOT-FOUND condition, , @t{slot-not-found}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>SLOT-VALUE-ON-NON-STRUCT condition, , @t{slot-value-on-non-struct}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>STAGE-IN-CONTEXT condition, , @t{stage-in-context}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>STAGE-MUST-HAVE-LOCAL-SIZE-DECLARATION condition, , @t{stage-must-have-local-size-declaration}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>STAGE-MUST-HAVE-OUTPUT-PATCH-DECLARATION condition, , @t{stage-must-have-output-patch-declaration}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>STAGE-MUST-HAVE-OUTPUT-PRIM-DECLARATION condition, , @t{stage-must-have-output-prim-declaration}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>STAGE-ORDER-ERROR condition, , @t{stage-order-error}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>STAGE-PRIMARY-TYPE-MISMATCH condition, , @t{stage-primary-type-mismatch}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>STRUCT-CANNOT-HOLD-EPHEMERAL-TYPES condition, , @t{struct-cannot-hold-ephemeral-types}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>SWITCH-TYPE-ERROR condition, , @t{switch-type-error}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>SWIZZLE-KEYWORD condition, , @t{swizzle-keyword}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>SYMBOL-UNIDENTIFIED condition, , @t{symbol-unidentified}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>TESSELLATION-CONTROL-EXPECTS-PATCHES condition, , @t{tessellation-control-expects-patches}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>TESSELLATION-EVALUATION-INVALID-PRIMITIVE condition, , @t{tessellation-evaluation-invalid-primitive}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>TEST-TRANSLATE-FAILED condition, , @t{test-translate-failed}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>TRANSFORM-FEEDBACK-INCORRECT-STAGE condition, , @t{transform-feedback-incorrect-stage}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>UBO-SSBO-TYPE-LIMITATION condition, , @t{ubo-ssbo-type-limitation}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>UNABLE-TO-RESOLVE-FUNC-TYPE condition, , @t{unable-to-resolve-func-type}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>UNIFORM-IN-SFUNC condition, , @t{uniform-in-sfunc}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>UNIFORM-UBO-AND-SSBO condition, , @t{uniform-ubo-and-ssbo}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>UNINITIALIZED-VAR condition, , @t{uninitialized-var}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>UNKNOWN-ALT-TYPE-NAME condition, , @t{unknown-alt-type-name}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>UNKNOWN-LAYOUT-SPECIFIER condition, , @t{unknown-layout-specifier}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>UNKNOWN-TYPE-SPEC condition, , @t{unknown-type-spec}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>UNKNOWN-VARIABLE-TYPE condition, , @t{unknown-variable-type}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>USER-FUNC-INVALID-X condition, , @t{user-func-invalid-x}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>V-DEF-TEMPLATE-ARG-MISMATCH condition, , @t{v-def-template-arg-mismatch}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>V-DEPRECATED condition, , @t{v-deprecated}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>VALUES-SAFE-WASNT-SAFE condition, , @t{values-safe-wasnt-safe}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>VAR-TYPE-MISMATCH condition, , @t{var-type-mismatch}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>VOID-TYPE-FOR-CONDITIONAL-TEST condition, , @t{void-type-for-conditional-test}} (condition)
@item
@ref{go to the VARJO-CONDITIONS<colon><colon>WITH-FRESH-ENV-SCOPE-MISSING-ENV condition, , @t{with-fresh-env-scope-missing-env}} (condition)
@end itemize
@end table
" :AFTER-MENU-CONTENTS NIL) #9# #S(NET.DIDIERVERNA.DECLT::NODE :NAME "The varjo.utils package" :SYNOPSIS NIL :SECTION-TYPE :NUMBERED :SECTION-NAME "@t{varjo.utils}" :NEXT NIL :PREVIOUS #9# :UP #3# :CHILDREN NIL :BEFORE-MENU-CONTENTS "@anchor{go to the VARJO<dot>UTILS package}@c
@packageindex{varjo.utils}@c
@table @strong
@item Source
@ref{go to the varjo/package<dot>lisp file, , @t{package.lisp}} (file)
@item Use List
@itemize @bullet
@item
@t{editor-hints.named-readtables}
@item
@t{alexandria.0.dev}
@item
@t{common-lisp}
@end itemize
@item Used By List
@itemize @bullet
@item
@ref{go to the VARJO package, , @t{varjo}}
@item
@ref{go to the VARI<dot>CL package, , @t{vari.cl}}
@item
@ref{go to the VARI<dot>GLSL package, , @t{vari.glsl}}
@item
@ref{go to the VARJO<dot>API package, , @t{varjo.api}}
@item
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item
@ref{go to the VARI<dot>TYPES package, , @t{vari.types}}
@end itemize
@item Exported Definitions
@itemize @bullet
@item
@ref{go to the VARJO<dot>UTILS<colon><colon>%PEEK macro, , @t{%peek}} (macro)
@item
@ref{go to the VARJO<dot>UTILS<colon><colon>A-ADD macro, , @t{a-add}} (macro)
@item
@ref{go to the VARJO<dot>UTILS<colon><colon>A-GET function, , @t{a-get}} (function)
@item
@ref{go to the VARJO<dot>UTILS<colon><colon>A-GET1 function, , @t{a-get1}} (function)
@item
@ref{go to the VARJO<dot>UTILS<colon><colon>A-REMOVE-ALL macro, , @t{a-remove-all}} (macro)
@item
@ref{go to the VARJO<dot>UTILS<colon><colon>A-SET macro, , @t{a-set}} (macro)
@item
@ref{go to the VARJO<dot>UTILS<colon><colon>ASSOCR compiler macro, , @t{assocr}} (compiler macro)
@item
@ref{go to the VARJO<dot>UTILS<colon><colon>ASSOCR function, , @t{assocr}} (function)
@item
@ref{go to the VARJO<dot>UTILS<colon><colon>CASE-MEMBER macro, , @t{case-member}} (macro)
@item
@ref{go to the VARJO<dot>UTILS<colon><colon>CASE= macro, , @t{case=}} (macro)
@item
@ref{go to the VARJO<dot>UTILS<colon><colon>CONS-END function, , @t{cons-end}} (function)
@item
@ref{go to the VARJO<dot>UTILS<colon><colon>DBIND macro, , @t{dbind}} (macro)
@item
@ref{go to the VARJO<dot>UTILS<colon><colon>ELT* function, , @t{elt*}} (function)
@item
@ref{go to the VARJO<dot>UTILS<colon><colon>FIND-DUPLICATES function, , @t{find-duplicates}} (function)
@item
@ref{go to the VARJO<dot>UTILS<colon><colon>FIND-SIMILARLY-NAMED-SYMBOL function, , @t{find-similarly-named-symbol}} (function)
@item
@ref{go to the VARJO<dot>UTILS<colon><colon>GROUP function, , @t{group}} (function)
@item
@ref{go to the VARJO<dot>UTILS<colon><colon>GROUP-BY function, , @t{group-by}} (function)
@item
@ref{go to the VARJO<dot>UTILS<colon><colon>KWD function, , @t{kwd}} (function)
@item
@ref{go to the VARJO<dot>UTILS<colon><colon>LAMBDA-LIST-GET-NAMES function, , @t{lambda-list-get-names}} (function)
@item
@ref{go to the VARJO<dot>UTILS<colon><colon>LAMBDA-LIST-SPLIT function, , @t{lambda-list-split}} (function)
@item
@ref{go to the VARJO<dot>UTILS<colon><colon>LAST1 function, , @t{last1}} (function)
@item
@ref{go to the VARJO<dot>UTILS<colon><colon>LISTIFY function, , @t{listify}} (function)
@item
@ref{go to the VARJO<dot>UTILS<colon><colon>N-OF function, , @t{n-of}} (function)
@item
@ref{go to the VARJO<dot>UTILS<colon><colon>NTH-OR-SELF function, , @t{nth-or-self}} (function)
@item
@ref{go to the VARJO<dot>UTILS<colon><colon>P-SYMB function, , @t{p-symb}} (function)
@item
@ref{go to the VARJO<dot>UTILS<colon><colon>PIPE-> macro, , @t{pipe->}} (macro)
@item
@ref{go to the VARJO<dot>UTILS<colon><colon>POSITIONS-IF function, , @t{positions-if}} (function)
@item
@ref{go to the VARJO<dot>UTILS<colon><colon>SPLIT-ARGUMENTS function, , @t{split-arguments}} (function)
@item
@ref{go to the VARJO<dot>UTILS<colon><colon>SYMB function, , @t{symb}} (function)
@item
@ref{go to the VARJO<dot>UTILS<colon><colon>VBIND macro, , @t{vbind}} (macro)
@item
@ref{go to the VARJO<dot>UTILS<colon><colon>VLIST macro, , @t{vlist}} (macro)
@end itemize
@end table
" :AFTER-MENU-CONTENTS NIL)) :BEFORE-MENU-CONTENTS "Packages are listed by definition order." :AFTER-MENU-CONTENTS NIL) :UP #5# :CHILDREN (#1#) :BEFORE-MENU-CONTENTS "Definitions are sorted by export status, category, package, and then by
lexicographic order." :AFTER-MENU-CONTENTS NIL) :CHILDREN (#10=#S(NET.DIDIERVERNA.DECLT::NODE :NAME "Exported special variables" :SYNOPSIS NIL :SECTION-TYPE :NUMBERED :SECTION-NAME "Special variables" :NEXT #11=#S(NET.DIDIERVERNA.DECLT::NODE :NAME "Exported macros" :SYNOPSIS NIL :SECTION-TYPE :NUMBERED :SECTION-NAME "Macros" :NEXT #12=#S(NET.DIDIERVERNA.DECLT::NODE :NAME "Exported compiler macros" :SYNOPSIS NIL :SECTION-TYPE :NUMBERED :SECTION-NAME "Compiler macros" :NEXT #13=# :PREVIOUS #11# :UP #1# :CHILDREN NIL :BEFORE-MENU-CONTENTS "@deffn {Compiler Macro} {assocr} ITEM ALIST &key KEY TEST TEST-NOT
@anchor{go to the VARJO<dot>UTILS<colon><colon>ASSOCR compiler macro}@c
@compilermacrosubindex{assocr}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>UTILS package, , @t{varjo.utils}}
@item Source
@ref{go to the varjo/src/utils-v<dot>lisp file, , @t{src/utils-v.lisp}} (file)
@end table
@end deffn
@deffn {Compiler Macro} {type-spec->type} SPEC &optional FLOW-ID
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>TYPE-SPEC->TYPE compiler macro}@c
@compilermacrosubindex{type-spec->type}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/early-types<dot>lisp file, , @t{src/varjo.internals/types/early-types.lisp}} (file)
@end table
@end deffn
@deffn {Compiler Macro} {v-typep} A B
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-TYPEP compiler macro}@c
@compilermacrosubindex{v-typep}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
" :AFTER-MENU-CONTENTS NIL) :PREVIOUS #10# :UP #1# :CHILDREN NIL :BEFORE-MENU-CONTENTS "@deffn {Macro} {%peek} THING
@anchor{go to the VARJO<dot>UTILS<colon><colon>%PEEK macro}@c
@macrosubindex{%peek}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>UTILS package, , @t{varjo.utils}}
@item Source
@ref{go to the varjo/src/utils-v<dot>lisp file, , @t{src/utils-v.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {a-add} NAME VALUE LIST-PLACE
@anchor{go to the VARJO<dot>UTILS<colon><colon>A-ADD macro}@c
@macrosubindex{a-add}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>UTILS package, , @t{varjo.utils}}
@item Source
@ref{go to the varjo/src/utils-v<dot>lisp file, , @t{src/utils-v.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {a-remove-all} NAME LIST-PLACE
@anchor{go to the VARJO<dot>UTILS<colon><colon>A-REMOVE-ALL macro}@c
@macrosubindex{a-remove-all}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>UTILS package, , @t{varjo.utils}}
@item Source
@ref{go to the varjo/src/utils-v<dot>lisp file, , @t{src/utils-v.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {a-set} NAME VALUE LIST-PLACE
@anchor{go to the VARJO<dot>UTILS<colon><colon>A-SET macro}@c
@macrosubindex{a-set}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>UTILS package, , @t{varjo.utils}}
@item Source
@ref{go to the varjo/src/utils-v<dot>lisp file, , @t{src/utils-v.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {case-member} MEMBER-FORM (&key TEST) &body CASES
@anchor{go to the VARJO<dot>UTILS<colon><colon>CASE-MEMBER macro}@c
@macrosubindex{case-member}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>UTILS package, , @t{varjo.utils}}
@item Source
@ref{go to the varjo/src/utils-v<dot>lisp file, , @t{src/utils-v.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {case=} FORM &body CASES
@anchor{go to the VARJO<dot>UTILS<colon><colon>CASE= macro}@c
@macrosubindex{case=}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>UTILS package, , @t{varjo.utils}}
@item Source
@ref{go to the varjo/src/utils-v<dot>lisp file, , @t{src/utils-v.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {dbind} LAMBDA-LIST EXPRESSION &body BODY
@anchor{go to the VARJO<dot>UTILS<colon><colon>DBIND macro}@c
@macrosubindex{dbind}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>UTILS package, , @t{varjo.utils}}
@item Source
@ref{go to the varjo/src/utils-v<dot>lisp file, , @t{src/utils-v.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {def-metadata-infer} VARJO-TYPE-SPEC METADATA-KIND ENV-VAR &body BODY
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>DEF-METADATA-INFER macro}@c
@macrosubindex{def-metadata-infer}@c

`def-metadata-infer` is the older syntax for `define-metadata-infer`.@*

This macro is still exported in order to maintain compatibility with existing
code.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/value-metadata<dot>lisp file, , @t{src/varjo.internals/value-metadata.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {def-metadata-kind} NAME (&key CONC-NAME BINDS-TO) &body SLOT-NAMES
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>DEF-METADATA-KIND macro}@c
@macrosubindex{def-metadata-kind}@c

`def-metadata-kind` is the older syntax for `define-metadata-kind`.@*

This macro is still exported in order to maintain compatibility with existing
code.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/value-metadata<dot>lisp file, , @t{src/varjo.internals/value-metadata.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {def-shadow-type-constructor} SHADOW-TYPE FUNCTION-IDENTIFIER
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>DEF-SHADOW-TYPE-CONSTRUCTOR macro}@c
@macrosubindex{def-shadow-type-constructor}@c

`def-shadow-type-constructor` is the older syntax for
`define-shadow-type-constructor`.@*

This macro is still exported in order to maintain compatibility with existing
code.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/deftype<dot>lisp file, , @t{src/varjo.internals/deftype.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {define-alternate-type-name} CURRENT-TYPE-NAME ALTERNATE-TYPE-NAME
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>DEFINE-ALTERNATE-TYPE-NAME macro}@c
@macrosubindex{define-alternate-type-name}@c

`define-alternate-type-name` lets you define
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/early-types<dot>lisp file, , @t{src/varjo.internals/types/early-types.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {define-glsl-template-function} NAME ARGS RETURN-SPEC TRANSFORM &key PURE
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>DEFINE-GLSL-TEMPLATE-FUNCTION macro}@c
@macrosubindex{define-glsl-template-function}@c

`define-glsl-template-function` which lets you define a snippet of@*
glsl code as a function in Vari. Here is an example definition:@*

                                   [0]
                                    ↓@*
    (define-glsl-template-function my-func ((x :float)) ←[1]@*
      :float ←[2]@*
      \"(1.0f / ~a)\" ←[3]@*
      :pure t) ←[4]@*

`[0]` Here we are defining a function called 'my-func'@*

`[1]` It takes 1 argument, called 'x' which has the type `:float`@*

`[2]` It returns a single `:float` value@*

`[3]` The string pattern is what will be injected into the final glsl. It
      behaves as though this pattern and the glsl for the arguments were
      passed to `format`, e.g. `(format nil \"(1.0f / ~a)\" \"2.3f\") assuming
      the glsl of the argument passed to `x` was \"2.3f\".@*

      The glsl for the arguments is passed to format in the order specified
      in `[1]`@*

      As it currently uses `format` it is legal to use other `directives` such
      as `~s` but it is not advisable as this will result in invalid glsl.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/functions<dot>lisp file, , @t{src/varjo.internals/functions.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {define-metadata-infer} VARJO-TYPE-SPEC METADATA-KIND ENV-VAR &body BODY
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>DEFINE-METADATA-INFER macro}@c
@macrosubindex{define-metadata-infer}@c

`define-metadata-infer` lets you define
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/value-metadata<dot>lisp file, , @t{src/varjo.internals/value-metadata.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {define-metadata-kind} NAME (&key CONC-NAME BINDS-TO) &body SLOT-NAMES
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>DEFINE-METADATA-KIND macro}@c
@macrosubindex{define-metadata-kind}@c

`define-metadata-kind` lets you define
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/value-metadata<dot>lisp file, , @t{src/varjo.internals/value-metadata.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {define-shadow-type-constructor} SHADOW-TYPE FUNCTION-IDENTIFIER
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>DEFINE-SHADOW-TYPE-CONSTRUCTOR macro}@c
@macrosubindex{define-shadow-type-constructor}@c

`define-shadow-type-constructor` lets you define
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/deftype<dot>lisp file, , @t{src/varjo.internals/deftype.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {define-vari-compiler-macro} NAME LAMBDA-LIST &body BODY
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>DEFINE-VARI-COMPILER-MACRO macro}@c
@macrosubindex{define-vari-compiler-macro}@c

`define-vari-compiler-macro` lets you define a compiler-macro that works in
Vari.@*

The parameters in the lambda-list must be defined in form `(,name ,type-spec)`

The compiler macro will only expand for functions with an exactly matching name
and lambda-list.@*

Vari's compiler macros behave the same as regular Common Lisp compiler-macros
with the exception that you can make queries against the environment to find
data (such as type) from the arguments (See [here]() for details).@*

Due to having to compile the argument forms before being able to identify the
compiler macro, any form returned from the compiler-macro (other than the value
from `&whole` is going to result in recompilation. This make Vari's compiler
macros more 'expensive' than Common Lisps in the general sense.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/macros<dot>lisp file, , @t{src/varjo.internals/macros.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {define-vari-function} NAME ARGS &body BODY
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>DEFINE-VARI-FUNCTION macro}@c
@macrosubindex{define-vari-function}@c

`define-vari-function` lets you define a function that can be used in@*
any Vari code compiled in the future.@*

that takes the following:@*

- a name as a symbol@*
- a 'vari function lambda-list' (see [here]() for details)@*
- a body made of Vari code@*

Please note that, other than performing some basic validation on the arguments,
this function does not attempt any validation on the body of the function.
Doing so would require knowledge of the context in which it is used.@*

 If you need to test that the function could be valid, refer to the
`test-translate-function-split-details` & `add-external-function` functions.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/functions<dot>lisp file, , @t{src/varjo.internals/functions.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {define-vari-macro} NAME LAMBDA-LIST &body BODY
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>DEFINE-VARI-MACRO macro}@c
@macrosubindex{define-vari-macro}@c

`define-vari-macro` lets you define a macro that can be used in any Vari code
compiled in the future.@*

Vari's macros behave the same as regular Common Lisp macros with the
exception that you can make queries against the environment to find@*
data (such as type) from the arguments (See [here]() for details).
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/macros<dot>lisp file, , @t{src/varjo.internals/macros.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {define-vari-struct} NAME CONTEXT &body SLOTS
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>DEFINE-VARI-STRUCT macro}@c
@macrosubindex{define-vari-struct}@c

`define-vari-struct` lets you define
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/structs<dot>lisp file, , @t{src/varjo.internals/structs.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {define-vari-trait} NAME (&rest TYPE-VARS) &body FUNC-SIGNATURES
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>DEFINE-VARI-TRAIT macro}@c
@macrosubindex{define-vari-trait}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/traits<dot>lisp file, , @t{src/varjo.internals/traits.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {define-vari-trait-implementation} IMPL-TYPE-NAME (TRAIT-NAME &rest TRAIT-ARGS &key &allow-other-keys) &body IMPLEMENTATIONS &key &allow-other-keys
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>DEFINE-VARI-TRAIT-IMPLEMENTATION macro}@c
@macrosubindex{define-vari-trait-implementation}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/traits<dot>lisp file, , @t{src/varjo.internals/traits.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {define-vari-type} NAME ARGS TYPE-FORM &key VALID-METADATA-KINDS
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>DEFINE-VARI-TYPE macro}@c
@macrosubindex{define-vari-type}@c

`define-vari-type` lets you define
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/deftype<dot>lisp file, , @t{src/varjo.internals/deftype.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {env->} (ENV-VAR ENV) &body COMPILING-FORMS
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ENV-> macro}@c
@macrosubindex{env->}@c
Kinda like varjo progn in that it accumulates the env and@*
   returns the results of all the forms and the final env.@*
   However it DOES NOT make a fresh environment to compile the forms in.
   It expects that each form returns a result and optionally an env
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/compile-special<dot>lisp file, , @t{src/varjo.internals/compile-special.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {flow-id-scope} &body BODY
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>FLOW-ID-SCOPE macro}@c
@macrosubindex{flow-id-scope}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/flow<dot>lisp file, , @t{src/varjo.internals/flow.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {glsl-chunk-splicing} &body KEY-FORM-PAIRS
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-CHUNK-SPLICING macro}@c
@macrosubindex{glsl-chunk-splicing}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/glsl-generation/line-and-chunk<dot>lisp file, , @t{src/varjo.internals/glsl-generation/line-and-chunk.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {merge-multi-env-progn} CODE-OBJS
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>MERGE-MULTI-ENV-PROGN macro}@c
@macrosubindex{merge-multi-env-progn}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/compile-special<dot>lisp file, , @t{src/varjo.internals/compile-special.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {merge-progn} CODE-OBJS STARTING-ENV &optional FINAL-ENV
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>MERGE-PROGN macro}@c
@macrosubindex{merge-progn}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/compile-special<dot>lisp file, , @t{src/varjo.internals/compile-special.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {pipe->} ARGS &body STAGES
@anchor{go to the VARJO<dot>UTILS<colon><colon>PIPE-> macro}@c
@macrosubindex{pipe->}@c
(pipe-> (1 2 3) #'a #'b #'c #'d)@*
   Calls first function with args provided and uses result as
   arguments for next function. Uses multiple-value-call so you
   can use (values) to specify complex lambda-args.
@table @strong
@item Package
@ref{go to the VARJO<dot>UTILS package, , @t{varjo.utils}}
@item Source
@ref{go to the varjo/src/utils-v<dot>lisp file, , @t{src/utils-v.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {v-declaim} &body DECLARATION-SPECIFIERS
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DECLAIM macro}@c
@macrosubindex{v-declaim}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/declaim<dot>lisp file, , @t{src/varjo.internals/declaim.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {v-def-glsl-template-fun} NAME ARGS TRANSFORM ARG-TYPES RETURN-SPEC &key V-PLACE-INDEX GLSL-NAME PURE
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DEF-GLSL-TEMPLATE-FUN macro}@c
@macrosubindex{v-def-glsl-template-fun}@c

`v-def-glsl-template-fun` is the older syntax for `define-glsl-template-function`.

This macro is still exported in order to maintain compatibility with existing
code.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/functions<dot>lisp file, , @t{src/varjo.internals/functions.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {v-define-compiler-macro} NAME LAMBDA-LIST &body BODY
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DEFINE-COMPILER-MACRO macro}@c
@macrosubindex{v-define-compiler-macro}@c

`v-define-compiler-macro` is the older syntax for `define-vari-compiler-macro`.

This macro is still exported in order to maintain compatibility with existing
code.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/macros<dot>lisp file, , @t{src/varjo.internals/macros.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {v-defmacro} NAME LAMBDA-LIST &body BODY
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DEFMACRO macro}@c
@macrosubindex{v-defmacro}@c

`v-defmacro` is the older syntax for `define-vari-macro`.@*

This macro is still exported in order to maintain compatibility with existing
code.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/macros<dot>lisp file, , @t{src/varjo.internals/macros.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {v-defspecial} NAME ARGS &body BODY
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DEFSPECIAL macro}@c
@macrosubindex{v-defspecial}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/functions<dot>lisp file, , @t{src/varjo.internals/functions.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {v-defstruct} NAME CONTEXT &body SLOTS
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DEFSTRUCT macro}@c
@macrosubindex{v-defstruct}@c

`v-defstruct` is the older syntax for `define-vari-struct`.@*

This macro is still exported in order to maintain compatibility with existing
code.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/structs<dot>lisp file, , @t{src/varjo.internals/structs.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {v-deftype} NAME ARGS TYPE-FORM &key VALID-METADATA-KINDS
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DEFTYPE macro}@c
@macrosubindex{v-deftype}@c

`v-deftype` is the older syntax for `define-vari-type`.@*

This macro is still exported in order to maintain compatibility with existing
code.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/deftype<dot>lisp file, , @t{src/varjo.internals/deftype.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {v-defun} NAME ARGS &body BODY
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DEFUN macro}@c
@macrosubindex{v-defun}@c

`v-defun` is the older syntax for `define-vari-function`.@*

This macro is still exported in order to maintain compatibility with existing
code.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/functions<dot>lisp file, , @t{src/varjo.internals/functions.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {vbind} VARS VALUE-FORM &body BODY
@anchor{go to the VARJO<dot>UTILS<colon><colon>VBIND macro}@c
@macrosubindex{vbind}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>UTILS package, , @t{varjo.utils}}
@item Source
@ref{go to the varjo/src/utils-v<dot>lisp file, , @t{src/utils-v.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {vlist} VALUE-FORM
@anchor{go to the VARJO<dot>UTILS<colon><colon>VLIST macro}@c
@macrosubindex{vlist}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>UTILS package, , @t{varjo.utils}}
@item Source
@ref{go to the varjo/src/utils-v<dot>lisp file, , @t{src/utils-v.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {with-constant-inject-hook} FUNC &body BODY
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>WITH-CONSTANT-INJECT-HOOK macro}@c
@macrosubindex{with-constant-inject-hook}@c

When `translate` is called within the dynamic extern of the body of this form,
if there is a use of a variable which is not in scope in the Vari code, but
is `boundp` & constant in the Common Lisp environment then the user
provided  function will be called with the symbol naming the variable.@*
The user provided function must  return a Vari type-spec or throw an error to
inform the user of the issue.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/compile-vars<dot>lisp file, , @t{src/varjo.internals/compile-vars.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {with-fresh-env-scope} (NAME STARTING-ENV &key CONTEXT FUNCTION-SCOPE FORM-BINDINGS SYMBOL-BINDINGS MULTI-VAL-BASE MULTI-VAL-SAFE ALLOWED-OUTER-VARS) &body BODY
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>WITH-FRESH-ENV-SCOPE macro}@c
@macrosubindex{with-fresh-env-scope}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/environment<dot>lisp file, , @t{src/varjo.internals/environment.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {with-stemcell-infer-hook} FUNC &body BODY
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>WITH-STEMCELL-INFER-HOOK macro}@c
@macrosubindex{with-stemcell-infer-hook}@c

When `translate` is called within the dynamic extern of the body of this form,
if there is a use of a variable which is not in scope in the Vari code, but
is not constant in the Common Lisp environment then the user provided function
will be called with the symbol naming the variable.@*
The user provided function can:@*
- Return a Vari type-spec. This will become the type of the form.@*
- Return nil to have Varjo tell the user that the symbol is unbound.@*
- Throw an error. If you wish to inform the user that something else is awry.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/stemcells<dot>lisp file, , @t{src/varjo.internals/stemcells.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {with-unknown-first-class-functions-allowed} &body BODY
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>WITH-UNKNOWN-FIRST-CLASS-FUNCTIONS-ALLOWED macro}@c
@macrosubindex{with-unknown-first-class-functions-allowed}@c

When `translate` is called within the dynamic extern of the body of this form,
it will not throw an error if there is a use of `function` with an unknown
function name/signature. In the event of such a use the compiler will generate
a dummy function to satify the typechecker.@*

This is only useful for testing and the resulting GLSL will (most likely) not
be legal
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/compile-funcall<dot>lisp file, , @t{src/varjo.internals/compile-funcall.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {with-v-arg} (&optional NAME TYPE QUALIFIERS GLSL-NAME) ARG-FORM &body BODY
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>WITH-V-ARG macro}@c
@macrosubindex{with-v-arg}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/rolling-translate<dot>lisp file, , @t{src/varjo.internals/rolling-translate.lisp}} (file)
@end table
@end deffn
@deffn {Macro} {with-v-let-spec} FORM &body BODY
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>WITH-V-LET-SPEC macro}@c
@macrosubindex{with-v-let-spec}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/compile-special<dot>lisp file, , @t{src/varjo.internals/compile-special.lisp}} (file)
@end table
@end deffn
" :AFTER-MENU-CONTENTS NIL) :PREVIOUS NIL :UP #1# :CHILDREN NIL :BEFORE-MENU-CONTENTS "@defvr {Special Variable} *default-version*
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>*DEFAULT-VERSION* special variable}@c
@specialsubindex{*default-version*}@c

`*default-version*` is a variable that holds the version of GLSL that
will be used for a compile task if a version is not specified in the
context
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/globals<dot>lisp file, , @t{src/varjo.internals/globals.lisp}} (file)
@end table
@end defvr
@defvr {Special Variable} *emit-var-name-base*
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>*EMIT-VAR-NAME-BASE* special variable}@c
@specialsubindex{*emit-var-name-base*}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/globals<dot>lisp file, , @t{src/varjo.internals/globals.lisp}} (file)
@end table
@end defvr
@defvr {Special Variable} *in-qualifier*
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>*IN-QUALIFIER* special variable}@c
@specialsubindex{*in-qualifier*}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/qualifiers<dot>lisp file, , @t{src/varjo.internals/qualifiers.lisp}} (file)
@end table
@end defvr
@defvr {Special Variable} *out-qualifier*
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>*OUT-QUALIFIER* special variable}@c
@specialsubindex{*out-qualifier*}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/qualifiers<dot>lisp file, , @t{src/varjo.internals/qualifiers.lisp}} (file)
@end table
@end defvr
@defvr {Special Variable} *return-var-name-base*
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>*RETURN-VAR-NAME-BASE* special variable}@c
@specialsubindex{*return-var-name-base*}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/globals<dot>lisp file, , @t{src/varjo.internals/globals.lisp}} (file)
@end table
@end defvr
@defvr {Special Variable} *stage-names*
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>*STAGE-NAMES* special variable}@c
@specialsubindex{*stage-names*}@c

`*stage-names*` is a variable that holds the list of keyword stage names that
Varjo recognises
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/globals<dot>lisp file, , @t{src/varjo.internals/globals.lisp}} (file)
@end table
@end defvr
@defvr {Special Variable} *stage-type-names*
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>*STAGE-TYPE-NAMES* special variable}@c
@specialsubindex{*stage-type-names*}@c

`*stage-type-names*` is a variable that holds a list of type-names that map to
the stages named in `*stage-names*`
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/globals<dot>lisp file, , @t{src/varjo.internals/globals.lisp}} (file)
@end table
@end defvr
@defvr {Special Variable} *supported-versions*
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>*SUPPORTED-VERSIONS* special variable}@c
@specialsubindex{*supported-versions*}@c

`*supported-versions*` is a variable that holds the list of GLSL version Varjo
ostensibly supports.@*

Note: That 'ostensibly' is there as I'm very sure that the lower levels of GLSL
varjo is currently doing a very poor job. If you have the time please file
issues that you find at https://github.com/cbaggers/varjo/issues
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/globals<dot>lisp file, , @t{src/varjo.internals/globals.lisp}} (file)
@end table
@end defvr
" :AFTER-MENU-CONTENTS NIL) #11# #12# #13# #14=#S(NET.DIDIERVERNA.DECLT::NODE :NAME "Exported generic functions" :SYNOPSIS NIL :SECTION-TYPE :NUMBERED :SECTION-NAME "Generic functions" :NEXT #15=#S(NET.DIDIERVERNA.DECLT::NODE :NAME "Exported conditions" :SYNOPSIS NIL :SECTION-TYPE :NUMBERED :SECTION-NAME "Conditions" :NEXT #16=#S(NET.DIDIERVERNA.DECLT::NODE :NAME "Exported structures" :SYNOPSIS NIL :SECTION-TYPE :NUMBERED :SECTION-NAME "Structures" :NEXT NIL :PREVIOUS #15# :UP #1# :CHILDREN NIL :BEFORE-MENU-CONTENTS "@deftp {Structure} {glsl-chunk} ()
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-CHUNK structure}@c
@structuresubindex{glsl-chunk}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/glsl-generation/line-and-chunk<dot>lisp file, , @t{src/varjo.internals/glsl-generation/line-and-chunk.lisp}} (file)
@item Direct superclasses
@t{structure-object} (structure)
@item Direct slots
@defvr {Slot} lines
@slotsubindex{lines}@c
@table @strong
@item Type
@t{list}
@item Readers
@ref{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-CHUNK-LINES function, , @t{glsl-chunk-lines}} (function)
@item Writers
@ref{go to the VARJO<dot>INTERNALS<colon><colon>(SETF GLSL-CHUNK-LINES) function, , @t{(setf glsl-chunk-lines)}} (function)
@end table
@end defvr
@end table
@end deftp
@deftp {Structure} {glsl-line} ()
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-LINE structure}@c
@structuresubindex{glsl-line}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/glsl-generation/line-and-chunk<dot>lisp file, , @t{src/varjo.internals/glsl-generation/line-and-chunk.lisp}} (file)
@item Direct superclasses
@t{structure-object} (structure)
@item Direct slots
@defvr {Slot} indentation
@slotsubindex{indentation}@c
@table @strong
@item Type
@t{(unsigned-byte 16)}
@item Initform
@t{0}
@item Readers
@ref{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-LINE-INDENTATION function, , @t{glsl-line-indentation}} (function)
@item Writers
@ref{go to the VARJO<dot>INTERNALS<colon><colon>(SETF GLSL-LINE-INDENTATION) function, , @t{(setf glsl-line-indentation)}} (function)
@end table
@end defvr
@defvr {Slot} string-part
@slotsubindex{string-part}@c
@table @strong
@item Type
@t{string}
@item Initform
@t{(error \"string-part of glsl-line must be provided\")}
@item Readers
@ref{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-LINE-STRING-PART function, , @t{glsl-line-string-part}} (function)
@item Writers
@ref{go to the VARJO<dot>INTERNALS<colon><colon>(SETF GLSL-LINE-STRING-PART) function, , @t{(setf glsl-line-string-part)}} (function)
@end table
@end defvr
@end table
@end deftp
" :AFTER-MENU-CONTENTS NIL) :PREVIOUS #14# :UP #1# :CHILDREN NIL :BEFORE-MENU-CONTENTS "@deftp {Condition} {alt-type-name-already-taken} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>ALT-TYPE-NAME-ALREADY-TAKEN condition}@c
@conditionsubindex{alt-type-name-already-taken}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} alt-name
@slotsubindex{alt-name}@c
@table @strong
@item Initargs
@t{:alt-name}
@end table
@end defvr
@defvr {Slot} src-name
@slotsubindex{src-name}@c
@table @strong
@item Initargs
@t{:src-name}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {args-incompatible} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>ARGS-INCOMPATIBLE condition}@c
@conditionsubindex{args-incompatible}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} previous-args
@slotsubindex{previous-args}@c
@table @strong
@item Initargs
@t{:previous-args}
@end table
@end defvr
@defvr {Slot} current-args
@slotsubindex{current-args}@c
@table @strong
@item Initargs
@t{:current-args}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {arrays-cannot-hold-ephemeral-types} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>ARRAYS-CANNOT-HOLD-EPHEMERAL-TYPES condition}@c
@conditionsubindex{arrays-cannot-hold-ephemeral-types}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} form
@slotsubindex{form}@c
@table @strong
@item Initargs
@t{:form}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {assigning-to-readonly} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>ASSIGNING-TO-READONLY condition}@c
@conditionsubindex{assigning-to-readonly}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} var-name
@slotsubindex{var-name}@c
@table @strong
@item Initargs
@t{:var-name}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {assignment-type-match} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>ASSIGNMENT-TYPE-MATCH condition}@c
@conditionsubindex{assignment-type-match}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-CRITICAL-ERROR condition, , @t{varjo-critical-error}} (condition)
@item Direct slots
@defvr {Slot} code-obj-a
@slotsubindex{code-obj-a}@c
@table @strong
@item Initargs
@t{:code-obj-a}
@end table
@end defvr
@defvr {Slot} code-obj-b
@slotsubindex{code-obj-b}@c
@table @strong
@item Initargs
@t{:code-obj-b}
@end table
@end defvr
@defvr {Slot} form
@slotsubindex{form}@c
@table @strong
@item Initargs
@t{:form}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {attempted-transform-feedback-in-fragment-shader} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>ATTEMPTED-TRANSFORM-FEEDBACK-IN-FRAGMENT-SHADER condition}@c
@conditionsubindex{attempted-transform-feedback-in-fragment-shader}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@end table
@end deftp
@deftp {Condition} {bad-make-function-args} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>BAD-MAKE-FUNCTION-ARGS condition}@c
@conditionsubindex{bad-make-function-args}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} func-name
@slotsubindex{func-name}@c
@table @strong
@item Initargs
@t{:func-name}
@end table
@end defvr
@defvr {Slot} arg-specs
@slotsubindex{arg-specs}@c
@table @strong
@item Initargs
@t{:arg-specs}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {body-block-empty} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>BODY-BLOCK-EMPTY condition}@c
@conditionsubindex{body-block-empty}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} form-name
@slotsubindex{form-name}@c
@table @strong
@item Initargs
@t{:form-name}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {cannot-compile} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>CANNOT-COMPILE condition}@c
@conditionsubindex{cannot-compile}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} code
@slotsubindex{code}@c
@table @strong
@item Initargs
@t{:code}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {cannot-establish-exact-function} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>CANNOT-ESTABLISH-EXACT-FUNCTION condition}@c
@conditionsubindex{cannot-establish-exact-function}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-CRITICAL-ERROR condition, , @t{varjo-critical-error}} (condition)
@item Direct slots
@defvr {Slot} funcall-form
@slotsubindex{funcall-form}@c
@table @strong
@item Initargs
@t{:funcall-form}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {cannot-not-shadow-core} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>CANNOT-NOT-SHADOW-CORE condition}@c
@conditionsubindex{cannot-not-shadow-core}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@end table
@end deftp
@deftp {Condition} {cannot-swizzle-this-type} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>CANNOT-SWIZZLE-THIS-TYPE condition}@c
@conditionsubindex{cannot-swizzle-this-type}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} vtype
@slotsubindex{vtype}@c
@table @strong
@item Initargs
@t{:vtype}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {cannot-take-reference-to-&rest-func} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>CANNOT-TAKE-REFERENCE-TO-&REST-FUNC condition}@c
@conditionsubindex{cannot-take-reference-to-&rest-func}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} func-name
@slotsubindex{func-name}@c
@table @strong
@item Initargs
@t{:func-name}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {clashes-found-between-input-and-output-names} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>CLASHES-FOUND-BETWEEN-INPUT-AND-OUTPUT-NAMES condition}@c
@conditionsubindex{clashes-found-between-input-and-output-names}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} stage-kind
@slotsubindex{stage-kind}@c
@table @strong
@item Initargs
@t{:stage-kind}
@end table
@end defvr
@defvr {Slot} inputs
@slotsubindex{inputs}@c
@table @strong
@item Initargs
@t{:inputs}
@end table
@end defvr
@defvr {Slot} outputs
@slotsubindex{outputs}@c
@table @strong
@item Initargs
@t{:outputs}
@end table
@end defvr
@defvr {Slot} clashes
@slotsubindex{clashes}@c
@table @strong
@item Initargs
@t{:clashes}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {clean-global-env-error} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>CLEAN-GLOBAL-ENV-ERROR condition}@c
@conditionsubindex{clean-global-env-error}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@end table
@end deftp
@deftp {Condition} {clone-global-env-error} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>CLONE-GLOBAL-ENV-ERROR condition}@c
@conditionsubindex{clone-global-env-error}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@end table
@end deftp
@deftp {Condition} {closures-not-supported} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>CLOSURES-NOT-SUPPORTED condition}@c
@conditionsubindex{closures-not-supported}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-CRITICAL-ERROR condition, , @t{varjo-critical-error}} (condition)
@item Direct slots
@defvr {Slot} func
@slotsubindex{func}@c
@table @strong
@item Initargs
@t{:func}
@end table
@end defvr
@defvr {Slot} details
@slotsubindex{details}@c
@table @strong
@item Initargs
@t{:details}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {compute-pipeline-may-only-contain-one-stage} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>COMPUTE-PIPELINE-MAY-ONLY-CONTAIN-ONE-STAGE condition}@c
@conditionsubindex{compute-pipeline-may-only-contain-one-stage}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} stages
@slotsubindex{stages}@c
@table @strong
@item Initargs
@t{:stages}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {compute-stage-must-be-void} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>COMPUTE-STAGE-MUST-BE-VOID condition}@c
@conditionsubindex{compute-stage-must-be-void}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} returns
@slotsubindex{returns}@c
@table @strong
@item Initargs
@t{:returns}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {compute-stage-with-in-args} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>COMPUTE-STAGE-WITH-IN-ARGS condition}@c
@conditionsubindex{compute-stage-with-in-args}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} args
@slotsubindex{args}@c
@table @strong
@item Initargs
@t{:args}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {conditional-multiple-vals-mismatch} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>CONDITIONAL-MULTIPLE-VALS-MISMATCH condition}@c
@conditionsubindex{conditional-multiple-vals-mismatch}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} kind
@slotsubindex{kind}@c
@table @strong
@item Initargs
@t{:kind}
@end table
@end defvr
@defvr {Slot} sets
@slotsubindex{sets}@c
@table @strong
@item Initargs
@t{:sets}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {conditional-return-type-mismatch} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>CONDITIONAL-RETURN-TYPE-MISMATCH condition}@c
@conditionsubindex{conditional-return-type-mismatch}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} sets
@slotsubindex{sets}@c
@table @strong
@item Initargs
@t{:sets}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {could-not-find-any} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>COULD-NOT-FIND-ANY condition}@c
@conditionsubindex{could-not-find-any}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-CRITICAL-ERROR condition, , @t{varjo-critical-error}} (condition)
@item Direct slots
@defvr {Slot} name
@slotsubindex{name}@c
@table @strong
@item Initargs
@t{:name}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {could-not-find-function} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>COULD-NOT-FIND-FUNCTION condition}@c
@conditionsubindex{could-not-find-function}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-CRITICAL-ERROR condition, , @t{varjo-critical-error}} (condition)
@item Direct slots
@defvr {Slot} name
@slotsubindex{name}@c
@table @strong
@item Initargs
@t{:name}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {couldnt-convert-primitive-for-geometry-stage} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>COULDNT-CONVERT-PRIMITIVE-FOR-GEOMETRY-STAGE condition}@c
@conditionsubindex{couldnt-convert-primitive-for-geometry-stage}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} prim
@slotsubindex{prim}@c
@table @strong
@item Initargs
@t{:prim}
@end table
@end defvr
@defvr {Slot} prev-stage
@slotsubindex{prev-stage}@c
@table @strong
@item Initargs
@t{:prev-stage}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {cross-scope-mutate} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>CROSS-SCOPE-MUTATE condition}@c
@conditionsubindex{cross-scope-mutate}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-CRITICAL-ERROR condition, , @t{varjo-critical-error}} (condition)
@item Direct slots
@defvr {Slot} var-name
@slotsubindex{var-name}@c
@table @strong
@item Initargs
@t{:var-name}
@end table
@end defvr
@defvr {Slot} code
@slotsubindex{code}@c
@table @strong
@item Initargs
@t{:code}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {discard-not-in-fragment-stage} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>DISCARD-NOT-IN-FRAGMENT-STAGE condition}@c
@conditionsubindex{discard-not-in-fragment-stage}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} stage
@slotsubindex{stage}@c
@table @strong
@item Initargs
@t{:stage}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {discarded-for-conditional-test} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>DISCARDED-FOR-CONDITIONAL-TEST condition}@c
@conditionsubindex{discarded-for-conditional-test}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} kind
@slotsubindex{kind}@c
@table @strong
@item Initargs
@t{:kind}
@end table
@end defvr
@defvr {Slot} form
@slotsubindex{form}@c
@table @strong
@item Initargs
@t{:form}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {dup-name-in-let} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>DUP-NAME-IN-LET condition}@c
@conditionsubindex{dup-name-in-let}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} dup-name
@slotsubindex{dup-name}@c
@table @strong
@item Initargs
@t{:dup-name}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {dup-names-in-let} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>DUP-NAMES-IN-LET condition}@c
@conditionsubindex{dup-names-in-let}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} names
@slotsubindex{names}@c
@table @strong
@item Initargs
@t{:names}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {duplicate-name} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>DUPLICATE-NAME condition}@c
@conditionsubindex{duplicate-name}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} name
@slotsubindex{name}@c
@table @strong
@item Initargs
@t{:name}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {emit-not-in-geometry-stage} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>EMIT-NOT-IN-GEOMETRY-STAGE condition}@c
@conditionsubindex{emit-not-in-geometry-stage}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} stage
@slotsubindex{stage}@c
@table @strong
@item Initargs
@t{:stage}
@end table
@end defvr
@defvr {Slot} emit-set
@slotsubindex{emit-set}@c
@table @strong
@item Initargs
@t{:emit-set}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {emit-type-mismatch} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>EMIT-TYPE-MISMATCH condition}@c
@conditionsubindex{emit-type-mismatch}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} sets
@slotsubindex{sets}@c
@table @strong
@item Initargs
@t{:sets}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {empty-progn} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>EMPTY-PROGN condition}@c
@conditionsubindex{empty-progn}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-CRITICAL-ERROR condition, , @t{varjo-critical-error}} (condition)
@end table
@end deftp
@deftp {Condition} {env-parent-context-mismatch} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>ENV-PARENT-CONTEXT-MISMATCH condition}@c
@conditionsubindex{env-parent-context-mismatch}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} env-a
@slotsubindex{env-a}@c
@table @strong
@item Initargs
@t{:env-a}
@end table
@end defvr
@defvr {Slot} env-b
@slotsubindex{env-b}@c
@table @strong
@item Initargs
@t{:env-b}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {external-function-invalid-in-arg-types} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>EXTERNAL-FUNCTION-INVALID-IN-ARG-TYPES condition}@c
@conditionsubindex{external-function-invalid-in-arg-types}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-CRITICAL-ERROR condition, , @t{varjo-critical-error}} (condition)
@item Direct slots
@defvr {Slot} name
@slotsubindex{name}@c
@table @strong
@item Initargs
@t{:name}
@end table
@end defvr
@defvr {Slot} args
@slotsubindex{args}@c
@table @strong
@item Initargs
@t{:args}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {find-mutual-type-bug} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>FIND-MUTUAL-TYPE-BUG condition}@c
@conditionsubindex{find-mutual-type-bug}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} types
@slotsubindex{types}@c
@table @strong
@item Initargs
@t{:types}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {flow-id-must-be-specified-co} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>FLOW-ID-MUST-BE-SPECIFIED-CO condition}@c
@conditionsubindex{flow-id-must-be-specified-co}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-CRITICAL-ERROR condition, , @t{varjo-critical-error}} (condition)
@end table
@end deftp
@deftp {Condition} {flow-id-must-be-specified-vv} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>FLOW-ID-MUST-BE-SPECIFIED-VV condition}@c
@conditionsubindex{flow-id-must-be-specified-vv}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-CRITICAL-ERROR condition, , @t{varjo-critical-error}} (condition)
@end table
@end deftp
@deftp {Condition} {flow-ids-mandatory} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>FLOW-IDS-MANDATORY condition}@c
@conditionsubindex{flow-ids-mandatory}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-CRITICAL-ERROR condition, , @t{varjo-critical-error}} (condition)
@item Direct slots
@defvr {Slot} for
@slotsubindex{for}@c
@table @strong
@item Initargs
@t{:for}
@end table
@end defvr
@defvr {Slot} primary-type
@slotsubindex{primary-type}@c
@table @strong
@item Initargs
@t{:primary-type}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {for-loop-only-one-var} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>FOR-LOOP-ONLY-ONE-VAR condition}@c
@conditionsubindex{for-loop-only-one-var}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@end table
@end deftp
@deftp {Condition} {for-loop-simple-expression} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>FOR-LOOP-SIMPLE-EXPRESSION condition}@c
@conditionsubindex{for-loop-simple-expression}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@end table
@end deftp
@deftp {Condition} {fragment-integer-inputs-not-flat} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>FRAGMENT-INTEGER-INPUTS-NOT-FLAT condition}@c
@conditionsubindex{fragment-integer-inputs-not-flat}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} problem-types
@slotsubindex{problem-types}@c
@table @strong
@item Initargs
@t{:problem-types}
@end table
@end defvr
@defvr {Slot} inputs
@slotsubindex{inputs}@c
@table @strong
@item Initargs
@t{:inputs}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {funcall-of-special-operator} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>FUNCALL-OF-SPECIAL-OPERATOR condition}@c
@conditionsubindex{funcall-of-special-operator}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} code
@slotsubindex{code}@c
@table @strong
@item Initargs
@t{:code}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {function-with-no-return-type} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>FUNCTION-WITH-NO-RETURN-TYPE condition}@c
@conditionsubindex{function-with-no-return-type}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-CRITICAL-ERROR condition, , @t{varjo-critical-error}} (condition)
@item Direct slots
@defvr {Slot} func-name
@slotsubindex{func-name}@c
@table @strong
@item Initargs
@t{:func-name}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {global-uninitialized-var} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>GLOBAL-UNINITIALIZED-VAR condition}@c
@conditionsubindex{global-uninitialized-var}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} name
@slotsubindex{name}@c
@table @strong
@item Initargs
@t{:name}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {if-branch-type-mismatch} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>IF-BRANCH-TYPE-MISMATCH condition}@c
@conditionsubindex{if-branch-type-mismatch}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-CRITICAL-ERROR condition, , @t{varjo-critical-error}} (condition)
@item Direct slots
@defvr {Slot} then-obj
@slotsubindex{then-obj}@c
@table @strong
@item Initargs
@t{:then-obj}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {if-form-multiple-vals-mismatch} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>IF-FORM-MULTIPLE-VALS-MISMATCH condition}@c
@conditionsubindex{if-form-multiple-vals-mismatch}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} then-set
@slotsubindex{then-set}@c
@table @strong
@item Initargs
@t{:then-set}
@end table
@end defvr
@defvr {Slot} else-set
@slotsubindex{else-set}@c
@table @strong
@item Initargs
@t{:else-set}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {if-form-type-mismatch} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>IF-FORM-TYPE-MISMATCH condition}@c
@conditionsubindex{if-form-type-mismatch}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} test-form
@slotsubindex{test-form}@c
@table @strong
@item Initargs
@t{:test-form}
@end table
@end defvr
@defvr {Slot} then-form
@slotsubindex{then-form}@c
@table @strong
@item Initargs
@t{:then-form}
@end table
@end defvr
@defvr {Slot} then-type
@slotsubindex{then-type}@c
@table @strong
@item Initargs
@t{:then-type}
@end table
@end defvr
@defvr {Slot} else-form
@slotsubindex{else-form}@c
@table @strong
@item Initargs
@t{:else-form}
@end table
@end defvr
@defvr {Slot} else-type
@slotsubindex{else-type}@c
@table @strong
@item Initargs
@t{:else-type}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {if-test-type-mismatch} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>IF-TEST-TYPE-MISMATCH condition}@c
@conditionsubindex{if-test-type-mismatch}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-CRITICAL-ERROR condition, , @t{varjo-critical-error}} (condition)
@item Direct slots
@defvr {Slot} test-obj
@slotsubindex{test-obj}@c
@table @strong
@item Initargs
@t{:test-obj}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {illegal-&rest-in-args} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>ILLEGAL-&REST-IN-ARGS condition}@c
@conditionsubindex{illegal-&rest-in-args}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} func-name
@slotsubindex{func-name}@c
@table @strong
@item Initargs
@t{:func-name}
@end table
@end defvr
@defvr {Slot} arg-specs
@slotsubindex{arg-specs}@c
@table @strong
@item Initargs
@t{:arg-specs}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {illegal-&uniform-in-args} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>ILLEGAL-&UNIFORM-IN-ARGS condition}@c
@conditionsubindex{illegal-&uniform-in-args}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} func-name
@slotsubindex{func-name}@c
@table @strong
@item Initargs
@t{:func-name}
@end table
@end defvr
@defvr {Slot} arg-specs
@slotsubindex{arg-specs}@c
@table @strong
@item Initargs
@t{:arg-specs}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {illegal-implicit-args} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>ILLEGAL-IMPLICIT-ARGS condition}@c
@conditionsubindex{illegal-implicit-args}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-CRITICAL-ERROR condition, , @t{varjo-critical-error}} (condition)
@item Direct slots
@defvr {Slot} func-name
@slotsubindex{func-name}@c
@table @strong
@item Initargs
@t{:func-name}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {incorrect-stage-for-shared-variables} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>INCORRECT-STAGE-FOR-SHARED-VARIABLES condition}@c
@conditionsubindex{incorrect-stage-for-shared-variables}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} stage
@slotsubindex{stage}@c
@table @strong
@item Initargs
@t{:stage}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {inline-glsl-vertex-stage-not-supported} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>INLINE-GLSL-VERTEX-STAGE-NOT-SUPPORTED condition}@c
@conditionsubindex{inline-glsl-vertex-stage-not-supported}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@end table
@end deftp
@deftp {Condition} {invalid-arguments-for-special-op} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>INVALID-ARGUMENTS-FOR-SPECIAL-OP condition}@c
@conditionsubindex{invalid-arguments-for-special-op}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} name
@slotsubindex{name}@c
@table @strong
@item Initargs
@t{:name}
@end table
@end defvr
@defvr {Slot} args
@slotsubindex{args}@c
@table @strong
@item Initargs
@t{:args}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {invalid-coerce} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>INVALID-COERCE condition}@c
@conditionsubindex{invalid-coerce}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} src-type
@slotsubindex{src-type}@c
@table @strong
@item Initargs
@t{:src-type}
@end table
@end defvr
@defvr {Slot} dst-type
@slotsubindex{dst-type}@c
@table @strong
@item Initargs
@t{:dst-type}
@end table
@end defvr
@defvr {Slot} code
@slotsubindex{code}@c
@table @strong
@item Initargs
@t{:code}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {invalid-context-symbol} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>INVALID-CONTEXT-SYMBOL condition}@c
@conditionsubindex{invalid-context-symbol}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} context-symb
@slotsubindex{context-symb}@c
@table @strong
@item Initargs
@t{:context-symb}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {invalid-env-vars} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>INVALID-ENV-VARS condition}@c
@conditionsubindex{invalid-env-vars}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-CRITICAL-ERROR condition, , @t{varjo-critical-error}} (condition)
@item Direct slots
@defvr {Slot} vars
@slotsubindex{vars}@c
@table @strong
@item Initargs
@t{:vars}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {invalid-feedback-qualifier-form} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>INVALID-FEEDBACK-QUALIFIER-FORM condition}@c
@conditionsubindex{invalid-feedback-qualifier-form}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} form
@slotsubindex{form}@c
@table @strong
@item Initargs
@t{:form}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {invalid-flow-id-multi-return} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>INVALID-FLOW-ID-MULTI-RETURN condition}@c
@conditionsubindex{invalid-flow-id-multi-return}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-CRITICAL-ERROR condition, , @t{varjo-critical-error}} (condition)
@item Direct slots
@defvr {Slot} func-name
@slotsubindex{func-name}@c
@table @strong
@item Initargs
@t{:func-name}
@end table
@end defvr
@defvr {Slot} return-type
@slotsubindex{return-type}@c
@table @strong
@item Initargs
@t{:return-type}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {invalid-for-loop-type} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>INVALID-FOR-LOOP-TYPE condition}@c
@conditionsubindex{invalid-for-loop-type}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} decl-obj
@slotsubindex{decl-obj}@c
@table @strong
@item Initargs
@t{:decl-obj}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {invalid-form-list} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>INVALID-FORM-LIST condition}@c
@conditionsubindex{invalid-form-list}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} code
@slotsubindex{code}@c
@table @strong
@item Initargs
@t{:code}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {invalid-function-return-spec} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>INVALID-FUNCTION-RETURN-SPEC condition}@c
@conditionsubindex{invalid-function-return-spec}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} func
@slotsubindex{func}@c
@table @strong
@item Initargs
@t{:func}
@end table
@end defvr
@defvr {Slot} spec
@slotsubindex{spec}@c
@table @strong
@item Initargs
@t{:spec}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {invalid-glsl-numeric-literal} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>INVALID-GLSL-NUMERIC-LITERAL condition}@c
@conditionsubindex{invalid-glsl-numeric-literal}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} str
@slotsubindex{str}@c
@table @strong
@item Initargs
@t{:str}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {invalid-inline-glsl-stage-arg-layout} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>INVALID-INLINE-GLSL-STAGE-ARG-LAYOUT condition}@c
@conditionsubindex{invalid-inline-glsl-stage-arg-layout}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} arg
@slotsubindex{arg}@c
@table @strong
@item Initargs
@t{:arg}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {invalid-output-primitive-for-geometry} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>INVALID-OUTPUT-PRIMITIVE-FOR-GEOMETRY condition}@c
@conditionsubindex{invalid-output-primitive-for-geometry}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} kind
@slotsubindex{kind}@c
@table @strong
@item Initargs
@t{:kind}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {invalid-primitive-for-compute-stage} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>INVALID-PRIMITIVE-FOR-COMPUTE-STAGE condition}@c
@conditionsubindex{invalid-primitive-for-compute-stage}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} prim
@slotsubindex{prim}@c
@table @strong
@item Initargs
@t{:prim}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {invalid-primitive-for-geometry-stage} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>INVALID-PRIMITIVE-FOR-GEOMETRY-STAGE condition}@c
@conditionsubindex{invalid-primitive-for-geometry-stage}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} prim
@slotsubindex{prim}@c
@table @strong
@item Initargs
@t{:prim}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {invalid-shader-stage} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>INVALID-SHADER-STAGE condition}@c
@conditionsubindex{invalid-shader-stage}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} stage
@slotsubindex{stage}@c
@table @strong
@item Initargs
@t{:stage}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {invalid-special-function-arg-spec} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>INVALID-SPECIAL-FUNCTION-ARG-SPEC condition}@c
@conditionsubindex{invalid-special-function-arg-spec}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-CRITICAL-ERROR condition, , @t{varjo-critical-error}} (condition)
@item Direct slots
@defvr {Slot} name
@slotsubindex{name}@c
@table @strong
@item Initargs
@t{:name}
@end table
@end defvr
@defvr {Slot} spec
@slotsubindex{spec}@c
@table @strong
@item Initargs
@t{:spec}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {invalid-stage-kind} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>INVALID-STAGE-KIND condition}@c
@conditionsubindex{invalid-stage-kind}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} kind
@slotsubindex{kind}@c
@table @strong
@item Initargs
@t{:kind}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {invalid-symbol-macro-form} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>INVALID-SYMBOL-MACRO-FORM condition}@c
@conditionsubindex{invalid-symbol-macro-form}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} name
@slotsubindex{name}@c
@table @strong
@item Initargs
@t{:name}
@end table
@end defvr
@defvr {Slot} form
@slotsubindex{form}@c
@table @strong
@item Initargs
@t{:form}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {invalid-the-declaration} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>INVALID-THE-DECLARATION condition}@c
@conditionsubindex{invalid-the-declaration}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} form
@slotsubindex{form}@c
@table @strong
@item Initargs
@t{:form}
@end table
@end defvr
@defvr {Slot} declared-type
@slotsubindex{declared-type}@c
@table @strong
@item Initargs
@t{:declared-type}
@end table
@end defvr
@defvr {Slot} found-type
@slotsubindex{found-type}@c
@table @strong
@item Initargs
@t{:found-type}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {invalid-type-for-dummy-function} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>INVALID-TYPE-FOR-DUMMY-FUNCTION condition}@c
@conditionsubindex{invalid-type-for-dummy-function}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} type
@slotsubindex{type}@c
@table @strong
@item Initargs
@t{:type}
@end table
@end defvr
@defvr {Slot} form
@slotsubindex{form}@c
@table @strong
@item Initargs
@t{:form}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {invalid-v-defun-template} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>INVALID-V-DEFUN-TEMPLATE condition}@c
@conditionsubindex{invalid-v-defun-template}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} func-name
@slotsubindex{func-name}@c
@table @strong
@item Initargs
@t{:func-name}
@end table
@end defvr
@defvr {Slot} template
@slotsubindex{template}@c
@table @strong
@item Initargs
@t{:template}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {keyword-in-function-position} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>KEYWORD-IN-FUNCTION-POSITION condition}@c
@conditionsubindex{keyword-in-function-position}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} form
@slotsubindex{form}@c
@table @strong
@item Initargs
@t{:form}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {let-discarded} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>LET-DISCARDED condition}@c
@conditionsubindex{let-discarded}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} name
@slotsubindex{name}@c
@table @strong
@item Initargs
@t{:name}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {let-or} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>LET-OR condition}@c
@conditionsubindex{let-or}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} name
@slotsubindex{name}@c
@table @strong
@item Initargs
@t{:name}
@end table
@end defvr
@defvr {Slot} type
@slotsubindex{type}@c
@table @strong
@item Initargs
@t{:type}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {let-or-functions} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>LET-OR-FUNCTIONS condition}@c
@conditionsubindex{let-or-functions}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} name
@slotsubindex{name}@c
@table @strong
@item Initargs
@t{:name}
@end table
@end defvr
@defvr {Slot} type
@slotsubindex{type}@c
@table @strong
@item Initargs
@t{:type}
@end table
@end defvr
@defvr {Slot} form
@slotsubindex{form}@c
@table @strong
@item Initargs
@t{:form}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {let-returned} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>LET-RETURNED condition}@c
@conditionsubindex{let-returned}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} name
@slotsubindex{name}@c
@table @strong
@item Initargs
@t{:name}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {let-void} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>LET-VOID condition}@c
@conditionsubindex{let-void}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} name
@slotsubindex{name}@c
@table @strong
@item Initargs
@t{:name}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {loop-flow-analysis-failure} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>LOOP-FLOW-ANALYSIS-FAILURE condition}@c
@conditionsubindex{loop-flow-analysis-failure}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-CRITICAL-ERROR condition, , @t{varjo-critical-error}} (condition)
@end table
@end deftp
@deftp {Condition} {loop-will-never-halt} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>LOOP-WILL-NEVER-HALT condition}@c
@conditionsubindex{loop-will-never-halt}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} test-code
@slotsubindex{test-code}@c
@table @strong
@item Initargs
@t{:test-code}
@end table
@end defvr
@defvr {Slot} test-obj
@slotsubindex{test-obj}@c
@table @strong
@item Initargs
@t{:test-obj}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {make-array-cant-cast-args} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>MAKE-ARRAY-CANT-CAST-ARGS condition}@c
@conditionsubindex{make-array-cant-cast-args}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} element-type
@slotsubindex{element-type}@c
@table @strong
@item Initargs
@t{:element-type}
@end table
@end defvr
@defvr {Slot} initial-contents
@slotsubindex{initial-contents}@c
@table @strong
@item Initargs
@t{:initial-contents}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {make-array-cant-establish-default-value} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>MAKE-ARRAY-CANT-ESTABLISH-DEFAULT-VALUE condition}@c
@conditionsubindex{make-array-cant-establish-default-value}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} element-type
@slotsubindex{element-type}@c
@table @strong
@item Initargs
@t{:element-type}
@end table
@end defvr
@defvr {Slot} initial-contents
@slotsubindex{initial-contents}@c
@table @strong
@item Initargs
@t{:initial-contents}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {make-array-conflicting-args} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>MAKE-ARRAY-CONFLICTING-ARGS condition}@c
@conditionsubindex{make-array-conflicting-args}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} args
@slotsubindex{args}@c
@table @strong
@item Initargs
@t{:args}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {make-array-conflicting-lengths} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>MAKE-ARRAY-CONFLICTING-LENGTHS condition}@c
@conditionsubindex{make-array-conflicting-lengths}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} dims
@slotsubindex{dims}@c
@table @strong
@item Initargs
@t{:dims}
@end table
@end defvr
@defvr {Slot} initial-contents
@slotsubindex{initial-contents}@c
@table @strong
@item Initargs
@t{:initial-contents}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {make-array-mandatory-args} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>MAKE-ARRAY-MANDATORY-ARGS condition}@c
@conditionsubindex{make-array-mandatory-args}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} args
@slotsubindex{args}@c
@table @strong
@item Initargs
@t{:args}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {merge-env-func-scope-mismatch} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>MERGE-ENV-FUNC-SCOPE-MISMATCH condition}@c
@conditionsubindex{merge-env-func-scope-mismatch}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} env-a
@slotsubindex{env-a}@c
@table @strong
@item Initargs
@t{:env-a}
@end table
@end defvr
@defvr {Slot} env-b
@slotsubindex{env-b}@c
@table @strong
@item Initargs
@t{:env-b}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {merge-env-parent-mismatch} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>MERGE-ENV-PARENT-MISMATCH condition}@c
@conditionsubindex{merge-env-parent-mismatch}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} env-a
@slotsubindex{env-a}@c
@table @strong
@item Initargs
@t{:env-a}
@end table
@end defvr
@defvr {Slot} env-b
@slotsubindex{env-b}@c
@table @strong
@item Initargs
@t{:env-b}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {multi-dimensional-array} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>MULTI-DIMENSIONAL-ARRAY condition}@c
@conditionsubindex{multi-dimensional-array}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} dimensions
@slotsubindex{dimensions}@c
@table @strong
@item Initargs
@t{:dimensions}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {multi-func-stemcells} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>MULTI-FUNC-STEMCELLS condition}@c
@conditionsubindex{multi-func-stemcells}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} func-name
@slotsubindex{func-name}@c
@table @strong
@item Initargs
@t{:func-name}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {multi-val-bind-mismatch} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>MULTI-VAL-BIND-MISMATCH condition}@c
@conditionsubindex{multi-val-bind-mismatch}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} bindings
@slotsubindex{bindings}@c
@table @strong
@item Initargs
@t{:bindings}
@end table
@end defvr
@defvr {Slot} val-form
@slotsubindex{val-form}@c
@table @strong
@item Initargs
@t{:val-form}
@end table
@end defvr
@defvr {Slot} return-set
@slotsubindex{return-set}@c
@table @strong
@item Initargs
@t{:return-set}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {name-clash} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>NAME-CLASH condition}@c
@conditionsubindex{name-clash}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-CRITICAL-ERROR condition, , @t{varjo-critical-error}} (condition)
@item Direct slots
@defvr {Slot} lisp
@slotsubindex{lisp}@c
@table @strong
@item Initargs
@t{:lisp}
@end table
@end defvr
@defvr {Slot} glsl
@slotsubindex{glsl}@c
@table @strong
@item Initargs
@t{:glsl}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {name-mismatch} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>NAME-MISMATCH condition}@c
@conditionsubindex{name-mismatch}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-CRITICAL-ERROR condition, , @t{varjo-critical-error}} (condition)
@item Direct slots
@defvr {Slot} lisp
@slotsubindex{lisp}@c
@table @strong
@item Initargs
@t{:lisp}
@end table
@end defvr
@defvr {Slot} glsl
@slotsubindex{glsl}@c
@table @strong
@item Initargs
@t{:glsl}
@end table
@end defvr
@defvr {Slot} taken
@slotsubindex{taken}@c
@table @strong
@item Initargs
@t{:taken}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {name-unsuitable} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>NAME-UNSUITABLE condition}@c
@conditionsubindex{name-unsuitable}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} name
@slotsubindex{name}@c
@table @strong
@item Initargs
@t{:name}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {nil-return-set} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>NIL-RETURN-SET condition}@c
@conditionsubindex{nil-return-set}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} form
@slotsubindex{form}@c
@table @strong
@item Initargs
@t{:form}
@end table
@end defvr
@defvr {Slot} possible-set
@slotsubindex{possible-set}@c
@table @strong
@item Initargs
@t{:possible-set}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {no-args-remove-in-unrep-inlining} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>NO-ARGS-REMOVE-IN-UNREP-INLINING condition}@c
@conditionsubindex{no-args-remove-in-unrep-inlining}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} func
@slotsubindex{func}@c
@table @strong
@item Initargs
@t{:func}
@end table
@end defvr
@defvr {Slot} args
@slotsubindex{args}@c
@table @strong
@item Initargs
@t{:args}
@end table
@end defvr
@defvr {Slot} args-code
@slotsubindex{args-code}@c
@table @strong
@item Initargs
@t{:args-code}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {no-function-returns} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>NO-FUNCTION-RETURNS condition}@c
@conditionsubindex{no-function-returns}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} name
@slotsubindex{name}@c
@table @strong
@item Initargs
@t{:name}
@end table
@end defvr
@defvr {Slot} return-set
@slotsubindex{return-set}@c
@table @strong
@item Initargs
@t{:return-set}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {no-valid-function} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>NO-VALID-FUNCTION condition}@c
@conditionsubindex{no-valid-function}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} name
@slotsubindex{name}@c
@table @strong
@item Initargs
@t{:name}
@end table
@end defvr
@defvr {Slot} types
@slotsubindex{types}@c
@table @strong
@item Initargs
@t{:types}
@end table
@end defvr
@defvr {Slot} form
@slotsubindex{form}@c
@table @strong
@item Initargs
@t{:form}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {no-version-in-context} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>NO-VERSION-IN-CONTEXT condition}@c
@conditionsubindex{no-version-in-context}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} env
@slotsubindex{env}@c
@table @strong
@item Initargs
@t{:env}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {non-place-assign} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>NON-PLACE-ASSIGN condition}@c
@conditionsubindex{non-place-assign}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} glsl-code
@slotsubindex{glsl-code}@c
@table @strong
@item Initargs
@t{:glsl-code}
@end table
@end defvr
@defvr {Slot} lisp-code
@slotsubindex{lisp-code}@c
@table @strong
@item Initargs
@t{:lisp-code}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {none-type-in-out-vars} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>NONE-TYPE-IN-OUT-VARS condition}@c
@conditionsubindex{none-type-in-out-vars}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} glsl-name
@slotsubindex{glsl-name}@c
@table @strong
@item Initargs
@t{:glsl-name}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {not-core-type-error} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>NOT-CORE-TYPE-ERROR condition}@c
@conditionsubindex{not-core-type-error}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} type-name
@slotsubindex{type-name}@c
@table @strong
@item Initargs
@t{:type-name}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {opaque-data-found} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>OPAQUE-DATA-FOUND condition}@c
@conditionsubindex{opaque-data-found}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} arg-name
@slotsubindex{arg-name}@c
@table @strong
@item Initargs
@t{:arg-name}
@end table
@end defvr
@defvr {Slot} type-spec
@slotsubindex{type-spec}@c
@table @strong
@item Initargs
@t{:type-spec}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {out-var-name-taken} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>OUT-VAR-NAME-TAKEN condition}@c
@conditionsubindex{out-var-name-taken}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} out-var-name
@slotsubindex{out-var-name}@c
@table @strong
@item Initargs
@t{:out-var-name}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {out-var-type-mismatch} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>OUT-VAR-TYPE-MISMATCH condition}@c
@conditionsubindex{out-var-type-mismatch}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} var-name
@slotsubindex{var-name}@c
@table @strong
@item Initargs
@t{:var-name}
@end table
@end defvr
@defvr {Slot} var-types
@slotsubindex{var-types}@c
@table @strong
@item Initargs
@t{:var-types}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {primitive-in-context} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>PRIMITIVE-IN-CONTEXT condition}@c
@conditionsubindex{primitive-in-context}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} context
@slotsubindex{context}@c
@table @strong
@item Initargs
@t{:context}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {primitives-dont-match} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>PRIMITIVES-DONT-MATCH condition}@c
@conditionsubindex{primitives-dont-match}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} out-stage
@slotsubindex{out-stage}@c
@table @strong
@item Initargs
@t{:out-stage}
@end table
@end defvr
@defvr {Slot} out
@slotsubindex{out}@c
@table @strong
@item Initargs
@t{:out}
@end table
@end defvr
@defvr {Slot} in-stage
@slotsubindex{in-stage}@c
@table @strong
@item Initargs
@t{:in-stage}
@end table
@end defvr
@defvr {Slot} in
@slotsubindex{in}@c
@table @strong
@item Initargs
@t{:in}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {problem-with-the-compiler} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>PROBLEM-WITH-THE-COMPILER condition}@c
@conditionsubindex{problem-with-the-compiler}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} target
@slotsubindex{target}@c
@table @strong
@item Initargs
@t{:target}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {return-set-mismatch} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>RETURN-SET-MISMATCH condition}@c
@conditionsubindex{return-set-mismatch}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} form
@slotsubindex{form}@c
@table @strong
@item Initargs
@t{:form}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {return-type-mismatch} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>RETURN-TYPE-MISMATCH condition}@c
@conditionsubindex{return-type-mismatch}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} sets
@slotsubindex{sets}@c
@table @strong
@item Initargs
@t{:sets}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {returns-in-geometry-stage} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>RETURNS-IN-GEOMETRY-STAGE condition}@c
@conditionsubindex{returns-in-geometry-stage}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} return-set
@slotsubindex{return-set}@c
@table @strong
@item Initargs
@t{:return-set}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {rolling-translate-invalid-stage} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>ROLLING-TRANSLATE-INVALID-STAGE condition}@c
@conditionsubindex{rolling-translate-invalid-stage}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} invalid
@slotsubindex{invalid}@c
@table @strong
@item Initargs
@t{:invalid}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {setq-readonly} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>SETQ-READONLY condition}@c
@conditionsubindex{setq-readonly}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} var-name
@slotsubindex{var-name}@c
@table @strong
@item Initargs
@t{:var-name}
@end table
@end defvr
@defvr {Slot} code
@slotsubindex{code}@c
@table @strong
@item Initargs
@t{:code}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {setq-type-match} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>SETQ-TYPE-MATCH condition}@c
@conditionsubindex{setq-type-match}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-CRITICAL-ERROR condition, , @t{varjo-critical-error}} (condition)
@item Direct slots
@defvr {Slot} var-name
@slotsubindex{var-name}@c
@table @strong
@item Initargs
@t{:var-name}
@end table
@end defvr
@defvr {Slot} old-value
@slotsubindex{old-value}@c
@table @strong
@item Initargs
@t{:old-value}
@end table
@end defvr
@defvr {Slot} new-value
@slotsubindex{new-value}@c
@table @strong
@item Initargs
@t{:new-value}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {shared-opaque} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>SHARED-OPAQUE condition}@c
@conditionsubindex{shared-opaque}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} name
@slotsubindex{name}@c
@table @strong
@item Initargs
@t{:name}
@end table
@end defvr
@defvr {Slot} type
@slotsubindex{type}@c
@table @strong
@item Initargs
@t{:type}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {should-be-constant} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>SHOULD-BE-CONSTANT condition}@c
@conditionsubindex{should-be-constant}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} thing
@slotsubindex{thing}@c
@table @strong
@item Initargs
@t{:thing}
@end table
@end defvr
@defvr {Slot} val
@slotsubindex{val}@c
@table @strong
@item Initargs
@t{:val}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {should-be-quoted} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>SHOULD-BE-QUOTED condition}@c
@conditionsubindex{should-be-quoted}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} thing
@slotsubindex{thing}@c
@table @strong
@item Initargs
@t{:thing}
@end table
@end defvr
@defvr {Slot} val
@slotsubindex{val}@c
@table @strong
@item Initargs
@t{:val}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {slot-not-found} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>SLOT-NOT-FOUND condition}@c
@conditionsubindex{slot-not-found}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} type
@slotsubindex{type}@c
@table @strong
@item Initargs
@t{:type}
@end table
@end defvr
@defvr {Slot} slot-name
@slotsubindex{slot-name}@c
@table @strong
@item Initargs
@t{:slot-name}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {slot-value-on-non-struct} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>SLOT-VALUE-ON-NON-STRUCT condition}@c
@conditionsubindex{slot-value-on-non-struct}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} type
@slotsubindex{type}@c
@table @strong
@item Initargs
@t{:type}
@end table
@end defvr
@defvr {Slot} slot-name
@slotsubindex{slot-name}@c
@table @strong
@item Initargs
@t{:slot-name}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {stage-in-context} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>STAGE-IN-CONTEXT condition}@c
@conditionsubindex{stage-in-context}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} context
@slotsubindex{context}@c
@table @strong
@item Initargs
@t{:context}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {stage-must-have-local-size-declaration} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>STAGE-MUST-HAVE-LOCAL-SIZE-DECLARATION condition}@c
@conditionsubindex{stage-must-have-local-size-declaration}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} stage
@slotsubindex{stage}@c
@table @strong
@item Initargs
@t{:stage}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {stage-must-have-output-patch-declaration} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>STAGE-MUST-HAVE-OUTPUT-PATCH-DECLARATION condition}@c
@conditionsubindex{stage-must-have-output-patch-declaration}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} stage
@slotsubindex{stage}@c
@table @strong
@item Initargs
@t{:stage}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {stage-must-have-output-prim-declaration} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>STAGE-MUST-HAVE-OUTPUT-PRIM-DECLARATION condition}@c
@conditionsubindex{stage-must-have-output-prim-declaration}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} stage
@slotsubindex{stage}@c
@table @strong
@item Initargs
@t{:stage}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {stage-order-error} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>STAGE-ORDER-ERROR condition}@c
@conditionsubindex{stage-order-error}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} stage-type
@slotsubindex{stage-type}@c
@table @strong
@item Initargs
@t{:stage-type}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {stage-primary-type-mismatch} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>STAGE-PRIMARY-TYPE-MISMATCH condition}@c
@conditionsubindex{stage-primary-type-mismatch}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} stage-kind
@slotsubindex{stage-kind}@c
@table @strong
@item Initargs
@t{:stage-kind}
@end table
@end defvr
@defvr {Slot} type-found
@slotsubindex{type-found}@c
@table @strong
@item Initargs
@t{:type-found}
@end table
@end defvr
@defvr {Slot} type-expected
@slotsubindex{type-expected}@c
@table @strong
@item Initargs
@t{:type-expected}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {struct-cannot-hold-ephemeral-types} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>STRUCT-CANNOT-HOLD-EPHEMERAL-TYPES condition}@c
@conditionsubindex{struct-cannot-hold-ephemeral-types}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} name
@slotsubindex{name}@c
@table @strong
@item Initargs
@t{:name}
@end table
@end defvr
@defvr {Slot} slots
@slotsubindex{slots}@c
@table @strong
@item Initargs
@t{:slots}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {switch-type-error} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>SWITCH-TYPE-ERROR condition}@c
@conditionsubindex{switch-type-error}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} form
@slotsubindex{form}@c
@table @strong
@item Initargs
@t{:form}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {swizzle-keyword} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>SWIZZLE-KEYWORD condition}@c
@conditionsubindex{swizzle-keyword}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} item
@slotsubindex{item}@c
@table @strong
@item Initargs
@t{:item}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {symbol-unidentified} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>SYMBOL-UNIDENTIFIED condition}@c
@conditionsubindex{symbol-unidentified}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-CRITICAL-ERROR condition, , @t{varjo-critical-error}} (condition)
@item Direct slots
@defvr {Slot} sym
@slotsubindex{sym}@c
@table @strong
@item Initargs
@t{:sym}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {tessellation-control-expects-patches} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>TESSELLATION-CONTROL-EXPECTS-PATCHES condition}@c
@conditionsubindex{tessellation-control-expects-patches}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} primitive
@slotsubindex{primitive}@c
@table @strong
@item Initargs
@t{:primitive}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {tessellation-evaluation-invalid-primitive} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>TESSELLATION-EVALUATION-INVALID-PRIMITIVE condition}@c
@conditionsubindex{tessellation-evaluation-invalid-primitive}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} primitive
@slotsubindex{primitive}@c
@table @strong
@item Initargs
@t{:primitive}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {test-translate-failed} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>TEST-TRANSLATE-FAILED condition}@c
@conditionsubindex{test-translate-failed}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} grouped-errors
@slotsubindex{grouped-errors}@c
@table @strong
@item Initargs
@t{:grouped-errors}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {transform-feedback-incorrect-stage} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>TRANSFORM-FEEDBACK-INCORRECT-STAGE condition}@c
@conditionsubindex{transform-feedback-incorrect-stage}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} stage
@slotsubindex{stage}@c
@table @strong
@item Initargs
@t{:stage}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {ubo-ssbo-type-limitation} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>UBO-SSBO-TYPE-LIMITATION condition}@c
@conditionsubindex{ubo-ssbo-type-limitation}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} type
@slotsubindex{type}@c
@table @strong
@item Initargs
@t{:type}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {unable-to-resolve-func-type} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>UNABLE-TO-RESOLVE-FUNC-TYPE condition}@c
@conditionsubindex{unable-to-resolve-func-type}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} func-name
@slotsubindex{func-name}@c
@table @strong
@item Initargs
@t{:func-name}
@end table
@end defvr
@defvr {Slot} args
@slotsubindex{args}@c
@table @strong
@item Initargs
@t{:args}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {uniform-in-sfunc} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>UNIFORM-IN-SFUNC condition}@c
@conditionsubindex{uniform-in-sfunc}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} func-name
@slotsubindex{func-name}@c
@table @strong
@item Initargs
@t{:func-name}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {uniform-ubo-and-ssbo} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>UNIFORM-UBO-AND-SSBO condition}@c
@conditionsubindex{uniform-ubo-and-ssbo}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} arg
@slotsubindex{arg}@c
@table @strong
@item Initargs
@t{:arg}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {uninitialized-var} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>UNINITIALIZED-VAR condition}@c
@conditionsubindex{uninitialized-var}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} name
@slotsubindex{name}@c
@table @strong
@item Initargs
@t{:name}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {unknown-alt-type-name} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>UNKNOWN-ALT-TYPE-NAME condition}@c
@conditionsubindex{unknown-alt-type-name}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} name
@slotsubindex{name}@c
@table @strong
@item Initargs
@t{:name}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {unknown-layout-specifier} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>UNKNOWN-LAYOUT-SPECIFIER condition}@c
@conditionsubindex{unknown-layout-specifier}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} target-kind
@slotsubindex{target-kind}@c
@table @strong
@item Initargs
@t{:target-kind}
@end table
@end defvr
@defvr {Slot} name
@slotsubindex{name}@c
@table @strong
@item Initargs
@t{:name}
@end table
@end defvr
@defvr {Slot} specifier
@slotsubindex{specifier}@c
@table @strong
@item Initargs
@t{:specifier}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {unknown-type-spec} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>UNKNOWN-TYPE-SPEC condition}@c
@conditionsubindex{unknown-type-spec}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} type-spec
@slotsubindex{type-spec}@c
@table @strong
@item Initargs
@t{:type-spec}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {unknown-variable-type} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>UNKNOWN-VARIABLE-TYPE condition}@c
@conditionsubindex{unknown-variable-type}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} name
@slotsubindex{name}@c
@table @strong
@item Initargs
@t{:name}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {user-func-invalid-x} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>USER-FUNC-INVALID-X condition}@c
@conditionsubindex{user-func-invalid-x}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} kind
@slotsubindex{kind}@c
@table @strong
@item Initargs
@t{:kind}
@end table
@end defvr
@defvr {Slot} name
@slotsubindex{name}@c
@table @strong
@item Initargs
@t{:name}
@end table
@end defvr
@defvr {Slot} args
@slotsubindex{args}@c
@table @strong
@item Initargs
@t{:args}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {v-def-template-arg-mismatch} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>V-DEF-TEMPLATE-ARG-MISMATCH condition}@c
@conditionsubindex{v-def-template-arg-mismatch}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} args
@slotsubindex{args}@c
@table @strong
@item Initargs
@t{:args}
@end table
@end defvr
@defvr {Slot} types
@slotsubindex{types}@c
@table @strong
@item Initargs
@t{:types}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {v-deprecated} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>V-DEPRECATED condition}@c
@conditionsubindex{v-deprecated}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@t{style-warning} (condition)
@item Direct slots
@defvr {Slot} old
@slotsubindex{old}@c
@table @strong
@item Initargs
@t{:old}
@end table
@end defvr
@defvr {Slot} new
@slotsubindex{new}@c
@table @strong
@item Initargs
@t{:new}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {values-safe-wasnt-safe} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>VALUES-SAFE-WASNT-SAFE condition}@c
@conditionsubindex{values-safe-wasnt-safe}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-CRITICAL-ERROR condition, , @t{varjo-critical-error}} (condition)
@item Direct slots
@defvr {Slot} args
@slotsubindex{args}@c
@table @strong
@item Initargs
@t{:args}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {var-type-mismatch} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>VAR-TYPE-MISMATCH condition}@c
@conditionsubindex{var-type-mismatch}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} var-type
@slotsubindex{var-type}@c
@table @strong
@item Initargs
@t{:var-type}
@end table
@end defvr
@defvr {Slot} code-obj
@slotsubindex{code-obj}@c
@table @strong
@item Initargs
@t{:code-obj}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {void-type-for-conditional-test} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>VOID-TYPE-FOR-CONDITIONAL-TEST condition}@c
@conditionsubindex{void-type-for-conditional-test}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@item Direct slots
@defvr {Slot} kind
@slotsubindex{kind}@c
@table @strong
@item Initargs
@t{:kind}
@end table
@end defvr
@defvr {Slot} form
@slotsubindex{form}@c
@table @strong
@item Initargs
@t{:form}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {with-fresh-env-scope-missing-env} ()
@anchor{go to the VARJO-CONDITIONS<colon><colon>WITH-FRESH-ENV-SCOPE-MISSING-ENV condition}@c
@conditionsubindex{with-fresh-env-scope-missing-env}@c
@table @strong
@item Package
@ref{go to the VARJO-CONDITIONS package, , @t{varjo-conditions}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/errors<dot>lisp file, , @t{src/varjo.internals/errors.lisp}} (file)
@item Direct superclasses
@ref{go to the VARJO<dot>INTERNALS<colon><colon>VARJO-ERROR condition, , @t{varjo-error}} (condition)
@end table
@end deftp
" :AFTER-MENU-CONTENTS NIL) :PREVIOUS #13# :UP #1# :CHILDREN NIL :BEFORE-MENU-CONTENTS "@deffn {Generic Function} {%glsl-decl} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>%GLSL-DECL generic function}@c
@genericsubindex{%glsl-decl}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {%glsl-decl} (UNIFORM-VARIABLE @t{uniform-variable})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>%GLSL-DECL VARJO<dot>INTERNALS<colon><colon>UNIFORM-VARIABLE method}@c
@methodsubindex{%glsl-decl}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {%uniform-name} THING ENV
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>%UNIFORM-NAME generic function}@c
@genericsubindex{%uniform-name}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {%uniform-name} (VAL @t{v-value}) (ENV @t{extended-environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>%UNIFORM-NAME VARJO<dot>INTERNALS<colon><colon>V-VALUE VARJO<dot>INTERNALS<colon><colon>EXTENDED-ENVIRONMENT method}@c
@methodsubindex{%uniform-name}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>api/environment<dot>lisp file, , @t{src/varjo.api/environment.lisp}} (file)
@end table
@end deffn
@deffn {Method} {%uniform-name} (COMPILED @t{compiled}) (ENV @t{extended-environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>%UNIFORM-NAME VARJO<dot>INTERNALS<colon><colon>COMPILED VARJO<dot>INTERNALS<colon><colon>EXTENDED-ENVIRONMENT method}@c
@methodsubindex{%uniform-name}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>api/environment<dot>lisp file, , @t{src/varjo.api/environment.lisp}} (file)
@end table
@end deffn
@deffn {Method} {%uniform-name} (ID @t{flow-identifier}) (ENV @t{extended-environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>%UNIFORM-NAME VARJO<dot>INTERNALS<colon><colon>FLOW-IDENTIFIER VARJO<dot>INTERNALS<colon><colon>EXTENDED-ENVIRONMENT method}@c
@methodsubindex{%uniform-name}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>api/environment<dot>lisp file, , @t{src/varjo.api/environment.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {add-equivalent-name} EXISTING-NAME NEW-NAME
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ADD-EQUIVALENT-NAME generic function}@c
@genericsubindex{add-equivalent-name}@c

`add-equivalent-name`
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {add-equivalent-name} EXISTING-NAME NEW-NAME
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ADD-EQUIVALENT-NAME COMMON-LISP<colon><colon>T COMMON-LISP<colon><colon>T method}@c
@methodsubindex{add-equivalent-name}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/environment<dot>lisp file, , @t{src/varjo.internals/environment.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {add-external-function} NAME IN-ARGS UNIFORMS CODE &optional VALID-GLSL-VERSIONS
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ADD-EXTERNAL-FUNCTION generic function}@c
@genericsubindex{add-external-function}@c

`add-external-function` is a function that takes the following:@*

- a name as a symbol@*
- a list of input parameters declartions in the form:@*
  `(,name ,type-spec ,@@qualifiers)`@*
- a list of uniforms in the form:@*
  `(,name ,type-spec ,@@qualifiers)`@*
- a list of forms that make up the body of the function@*
- [optional] as list of glsl versions this function is valid for.@*
             nil means it is valid for all versions@*

After doing basic checks on the arguments the function will be added to the
'external function registry' such that it call be called from any future
compilation task (assuming appropriate glsl versions).@*

Please note that this function does not attempt to validate the body of the
function as doing so would require knowledge of the context in which it is
used. If you need to test that the function could be valid, refer to the
`test-translate-function-split-details` function.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {add-external-function} NAME IN-ARGS UNIFORMS CODE &optional VALID-GLSL-VERSIONS
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ADD-EXTERNAL-FUNCTION COMMON-LISP<colon><colon>T COMMON-LISP<colon><colon>T COMMON-LISP<colon><colon>T COMMON-LISP<colon><colon>T method}@c
@methodsubindex{add-external-function}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/external-functions<dot>lisp file, , @t{src/varjo.internals/external-functions.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {add-form-binding} FUNC/MACRO ENV
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ADD-FORM-BINDING generic function}@c
@genericsubindex{add-form-binding}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {add-form-binding} ANYTHING (ENV @t{base-environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ADD-FORM-BINDING COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>BASE-ENVIRONMENT method}@c
@methodsubindex{add-form-binding}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/environment<dot>lisp file, , @t{src/varjo.internals/environment.lisp}} (file)
@end table
@end deffn
@deffn {Method} {add-form-binding} (MACRO @t{v-regular-macro}) (ENV @t{environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ADD-FORM-BINDING VARJO<dot>INTERNALS<colon><colon>V-REGULAR-MACRO VARJO<dot>INTERNALS<colon><colon>ENVIRONMENT method}@c
@methodsubindex{add-form-binding}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/environment<dot>lisp file, , @t{src/varjo.internals/environment.lisp}} (file)
@end table
@end deffn
@deffn {Method} {add-form-binding} (FUNC @t{v-function}) (ENV @t{environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ADD-FORM-BINDING VARJO<dot>INTERNALS<colon><colon>V-FUNCTION VARJO<dot>INTERNALS<colon><colon>ENVIRONMENT method}@c
@methodsubindex{add-form-binding}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/environment<dot>lisp file, , @t{src/varjo.internals/environment.lisp}} (file)
@end table
@end deffn
@deffn {Method} {add-form-binding} (COMPILED-FUNC @t{compiled-function-result}) (ENV @t{environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ADD-FORM-BINDING VARJO<dot>INTERNALS<colon><colon>COMPILED-FUNCTION-RESULT VARJO<dot>INTERNALS<colon><colon>ENVIRONMENT method}@c
@methodsubindex{add-form-binding}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/environment<dot>lisp file, , @t{src/varjo.internals/environment.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {add-form-bindings} FUNCS/MACROS ENV
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ADD-FORM-BINDINGS generic function}@c
@genericsubindex{add-form-bindings}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {add-form-bindings} (FUNCS @t{list}) (ENV @t{environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ADD-FORM-BINDINGS COMMON-LISP<colon><colon>LIST VARJO<dot>INTERNALS<colon><colon>ENVIRONMENT method}@c
@methodsubindex{add-form-bindings}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/environment<dot>lisp file, , @t{src/varjo.internals/environment.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {add-global-form-binding} FUNC/MACRO
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ADD-GLOBAL-FORM-BINDING generic function}@c
@genericsubindex{add-global-form-binding}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {add-global-form-binding} (FUNC-OBJ @t{v-function})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ADD-GLOBAL-FORM-BINDING VARJO<dot>INTERNALS<colon><colon>V-FUNCTION method}@c
@methodsubindex{add-global-form-binding}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/environment<dot>lisp file, , @t{src/varjo.internals/environment.lisp}} (file)
@end table
@end deffn
@deffn {Method} {add-global-form-binding} (MACRO-OBJ @t{v-regular-macro})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ADD-GLOBAL-FORM-BINDING VARJO<dot>INTERNALS<colon><colon>V-REGULAR-MACRO method}@c
@methodsubindex{add-global-form-binding}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/environment<dot>lisp file, , @t{src/varjo.internals/environment.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {add-lisp-form-as-uniform} FORM TYPE-SPEC ENV &optional NAME
@anchor{go to the VARJO<dot>API<colon><colon>ADD-LISP-FORM-AS-UNIFORM generic function}@c
@genericsubindex{add-lisp-form-as-uniform}@c

`add-lisp-form-as-uniform` is an intersting beast. Its goal it to make it easy
to inject uniforms into the resulting GLSL which will be populated by the
result of a specific Common Lisp form.@*

You provide:@*
- a value which will be assumed to be a valid Common lisp form@*
- a Vari `type-spec` which will be the type of the uniform@*
- a Varjo environment object, which must have been obtained from the `
  &environment` paramater in a Vari macro.@*
- an optional name@*

Varjo will then add a uniform (as it would be using uniform list in
`make-stage`). You can then use the symbol provided as the 'name' argument
in your Vari code.@*

When the compilation completes you can query the `compiled-stage` object using
the `implicit-uniforms` function which will return a list of
`implicit-uniform-variable` objects which can be queried using the following
functions:@*

- `name` - the vari name of the uniform@*
- `glsl-name` - returns a string with the glsl name of the uniform variable
- `v-type-of` - Returns the Varjo type object@*
- `cpu-side-transform` - this is how you obtain the Common Lisp code that
                         was passed to `add-lisp-form-as-uniform`
@table @strong
@item Package
@ref{go to the VARJO<dot>API package, , @t{varjo.api}}
@item Source
@ref{go to the varjo/src/varjo<dot>api/environment<dot>lisp file, , @t{src/varjo.api/environment.lisp}} (file)
@item Methods
@deffn {Method} {add-lisp-form-as-uniform} FORM TYPE-SPEC (ENV @t{extended-environment}) &optional NAME
@anchor{go to the VARJO<dot>API<colon><colon>ADD-LISP-FORM-AS-UNIFORM COMMON-LISP<colon><colon>T COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>EXTENDED-ENVIRONMENT method}@c
@methodsubindex{add-lisp-form-as-uniform}@c
@end deffn
@end table
@end deffn
@deffn {Generic Function} {add-symbol-binding} VAR-NAME VAL ENV
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ADD-SYMBOL-BINDING generic function}@c
@genericsubindex{add-symbol-binding}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {add-symbol-binding} NAME (MACRO @t{v-symbol-macro}) (ENV @t{environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ADD-SYMBOL-BINDING COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>V-SYMBOL-MACRO VARJO<dot>INTERNALS<colon><colon>ENVIRONMENT method}@c
@methodsubindex{add-symbol-binding}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/environment<dot>lisp file, , @t{src/varjo.internals/environment.lisp}} (file)
@end table
@end deffn
@deffn {Method} {add-symbol-binding} NAME (VAL @t{v-value}) (ENV @t{environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ADD-SYMBOL-BINDING COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>V-VALUE VARJO<dot>INTERNALS<colon><colon>ENVIRONMENT method}@c
@methodsubindex{add-symbol-binding}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/environment<dot>lisp file, , @t{src/varjo.internals/environment.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {all-bound-symbols} ENV
@anchor{go to the VARJO<dot>API<colon><colon>ALL-BOUND-SYMBOLS generic function}@c
@genericsubindex{all-bound-symbols}@c

When given an `environment` object from a Vari macro `all-bound-symbols`
returns a list of all the symbols currently bound.
@table @strong
@item Package
@ref{go to the VARJO<dot>API package, , @t{varjo.api}}
@item Source
@ref{go to the varjo/src/varjo<dot>api/environment<dot>lisp file, , @t{src/varjo.api/environment.lisp}} (file)
@item Methods
@deffn {Method} {all-bound-symbols} (ENV @t{extended-environment})
@anchor{go to the VARJO<dot>API<colon><colon>ALL-BOUND-SYMBOLS VARJO<dot>INTERNALS<colon><colon>EXTENDED-ENVIRONMENT method}@c
@methodsubindex{all-bound-symbols}@c
@end deffn
@end table
@end deffn
@deffn {Generic Function} {all-functions} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ALL-FUNCTIONS generic function}@c
@genericsubindex{all-functions}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Writer
@ref{go to the VARJO<dot>INTERNALS<colon><colon>(SETF ALL-FUNCTIONS) generic function, , @t{(setf all-functions)}} (generic function)
@item Methods
@deffn {Method} {all-functions} (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ALL-FUNCTIONS VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{all-functions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {(setf all-functions)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF ALL-FUNCTIONS) generic function}@c
@genericsubindex{(setf all-functions)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Reader
@ref{go to the VARJO<dot>INTERNALS<colon><colon>ALL-FUNCTIONS generic function, , @t{all-functions}} (generic function)
@item Methods
@deffn {Method} {(setf all-functions)} NEW-VALUE (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF ALL-FUNCTIONS) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{(setf all-functions)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {allows-stemcellsp} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ALLOWS-STEMCELLSP generic function}@c
@genericsubindex{allows-stemcellsp}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {allows-stemcellsp} (E @t{environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ALLOWS-STEMCELLSP VARJO<dot>INTERNALS<colon><colon>ENVIRONMENT method}@c
@methodsubindex{allows-stemcellsp}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/environment<dot>lisp file, , @t{src/varjo.internals/environment.lisp}} (file)
@end table
@end deffn
@deffn {Method} {allows-stemcellsp} (BASE-ENVIRONMENT @t{base-environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ALLOWS-STEMCELLSP VARJO<dot>INTERNALS<colon><colon>BASE-ENVIRONMENT method}@c
@methodsubindex{allows-stemcellsp}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {arg-num} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ARG-NUM generic function}@c
@genericsubindex{arg-num}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {arg-num} (RET-GEN-ELEMENT-OF-NTH-ARG-TYPE @t{ret-gen-element-of-nth-arg-type})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ARG-NUM VARJO<dot>INTERNALS<colon><colon>RET-GEN-ELEMENT-OF-NTH-ARG-TYPE method}@c
@methodsubindex{arg-num}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {arg-num} (RET-GEN-NTH-ARG-TYPE @t{ret-gen-nth-arg-type})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ARG-NUM VARJO<dot>INTERNALS<colon><colon>RET-GEN-NTH-ARG-TYPE method}@c
@methodsubindex{arg-num}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {argument-is-uniform-p} NAME ENV
@anchor{go to the VARJO<dot>API<colon><colon>ARGUMENT-IS-UNIFORM-P generic function}@c
@genericsubindex{argument-is-uniform-p}@c

When given an `environment` object from a Vari macro and a symbol that names
one of the arguments to the compiler-macro, `argument-is-uniform-p` returns T
if the value of the argument comes from a uniform variable.
@table @strong
@item Package
@ref{go to the VARJO<dot>API package, , @t{varjo.api}}
@item Source
@ref{go to the varjo/src/varjo<dot>api/environment<dot>lisp file, , @t{src/varjo.api/environment.lisp}} (file)
@item Methods
@deffn {Method} {argument-is-uniform-p} (NAME @t{symbol}) (ENV @t{macro-expansion-environment})
@anchor{go to the VARJO<dot>API<colon><colon>ARGUMENT-IS-UNIFORM-P COMMON-LISP<colon><colon>SYMBOL VARJO<dot>INTERNALS<colon><colon>MACRO-EXPANSION-ENVIRONMENT method}@c
@methodsubindex{argument-is-uniform-p}@c
@end deffn
@deffn {Method} {argument-is-uniform-p} (NAME @t{symbol}) (ENV @t{compiler-macro-expansion-environment})
@anchor{go to the VARJO<dot>API<colon><colon>ARGUMENT-IS-UNIFORM-P COMMON-LISP<colon><colon>SYMBOL VARJO<dot>INTERNALS<colon><colon>COMPILER-MACRO-EXPANSION-ENVIRONMENT method}@c
@methodsubindex{argument-is-uniform-p}@c
@end deffn
@end table
@end deffn
@deffn {Generic Function} {argument-type} NAME ENV
@anchor{go to the VARJO<dot>API<colon><colon>ARGUMENT-TYPE generic function}@c
@genericsubindex{argument-type}@c

When given an `environment` object from a Vari macro and a symbol that names
a variable bound in the current scope, `argument-type` returns the Varjo
type object that represents the Vari type of that variable.
@table @strong
@item Package
@ref{go to the VARJO<dot>API package, , @t{varjo.api}}
@item Source
@ref{go to the varjo/src/varjo<dot>api/environment<dot>lisp file, , @t{src/varjo.api/environment.lisp}} (file)
@item Methods
@deffn {Method} {argument-type} (NAME @t{symbol}) (ENV @t{compiler-macro-expansion-environment})
@anchor{go to the VARJO<dot>API<colon><colon>ARGUMENT-TYPE COMMON-LISP<colon><colon>SYMBOL VARJO<dot>INTERNALS<colon><colon>COMPILER-MACRO-EXPANSION-ENVIRONMENT method}@c
@methodsubindex{argument-type}@c
@end deffn
@deffn {Method} {argument-type} (NAME @t{symbol}) (ENV @t{macro-expansion-environment})
@anchor{go to the VARJO<dot>API<colon><colon>ARGUMENT-TYPE COMMON-LISP<colon><colon>SYMBOL VARJO<dot>INTERNALS<colon><colon>MACRO-EXPANSION-ENVIRONMENT method}@c
@methodsubindex{argument-type}@c
@end deffn
@end table
@end deffn
@deffn {Generic Function} {argument-uniform-name} NAME ENV
@anchor{go to the VARJO<dot>API<colon><colon>ARGUMENT-UNIFORM-NAME generic function}@c
@genericsubindex{argument-uniform-name}@c

When given an `environment` object from a Vari macro and a symbol that names
an argument to the current compiler-macro, `argument-uniform-name` returns
the the symbol which names the uniform in the stage if the value passed to
the named paramater has come from a uniform.
@table @strong
@item Package
@ref{go to the VARJO<dot>API package, , @t{varjo.api}}
@item Source
@ref{go to the varjo/src/varjo<dot>api/environment<dot>lisp file, , @t{src/varjo.api/environment.lisp}} (file)
@item Methods
@deffn {Method} {argument-uniform-name} (NAME @t{symbol}) (ENV @t{macro-expansion-environment})
@anchor{go to the VARJO<dot>API<colon><colon>ARGUMENT-UNIFORM-NAME COMMON-LISP<colon><colon>SYMBOL VARJO<dot>INTERNALS<colon><colon>MACRO-EXPANSION-ENVIRONMENT method}@c
@methodsubindex{argument-uniform-name}@c
@end deffn
@deffn {Method} {argument-uniform-name} (NAME @t{symbol}) (ENV @t{compiler-macro-expansion-environment})
@anchor{go to the VARJO<dot>API<colon><colon>ARGUMENT-UNIFORM-NAME COMMON-LISP<colon><colon>SYMBOL VARJO<dot>INTERNALS<colon><colon>COMPILER-MACRO-EXPANSION-ENVIRONMENT method}@c
@methodsubindex{argument-uniform-name}@c
@end deffn
@end table
@end deffn
@deffn {Generic Function} {arguments} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ARGUMENTS generic function}@c
@genericsubindex{arguments}@c
@deffnx {Generic Function} {(setf arguments)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF ARGUMENTS) generic function}@c
@genericsubindex{(setf arguments)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {arguments} (V-COMPILER-MACRO @t{v-compiler-macro})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ARGUMENTS VARJO<dot>INTERNALS<colon><colon>V-COMPILER-MACRO method}@c
@methodsubindex{arguments}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf arguments)} NEW-VALUE (V-COMPILER-MACRO @t{v-compiler-macro})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF ARGUMENTS) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>V-COMPILER-MACRO method}@c
@methodsubindex{(setf arguments)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {arguments} (V-REGULAR-MACRO @t{v-regular-macro})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ARGUMENTS VARJO<dot>INTERNALS<colon><colon>V-REGULAR-MACRO method}@c
@methodsubindex{arguments}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf arguments)} NEW-VALUE (V-REGULAR-MACRO @t{v-regular-macro})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF ARGUMENTS) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>V-REGULAR-MACRO method}@c
@methodsubindex{(setf arguments)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {arguments} (FUNC-MATCH @t{func-match})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ARGUMENTS VARJO<dot>INTERNALS<colon><colon>FUNC-MATCH method}@c
@methodsubindex{arguments}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {block-name} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>BLOCK-NAME generic function}@c
@genericsubindex{block-name}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {block-name} (V-BLOCK-ARRAY @t{v-block-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>BLOCK-NAME VARI<dot>TYPES<colon><colon>V-BLOCK-ARRAY method}@c
@methodsubindex{block-name}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {block-name} (V-BLOCK-STRUCT @t{v-block-struct})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>BLOCK-NAME VARI<dot>TYPES<colon><colon>V-BLOCK-STRUCT method}@c
@methodsubindex{block-name}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {block-name} (OUTPUT-VARIABLE @t{output-variable})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>BLOCK-NAME VARJO<dot>INTERNALS<colon><colon>OUTPUT-VARIABLE method}@c
@methodsubindex{block-name}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {block-name-string} BLOCK-NAME
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>BLOCK-NAME-STRING generic function}@c
@genericsubindex{block-name-string}@c

When passed an instance of `output-variable` this will return the name of
the interface-block that contained the variable as a string.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {block-name-string} (VAR @t{output-variable})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>BLOCK-NAME-STRING VARJO<dot>INTERNALS<colon><colon>OUTPUT-VARIABLE method}@c
@methodsubindex{block-name-string}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/glsl-generation/string-generation<dot>lisp file, , @t{src/varjo.internals/glsl-generation/string-generation.lisp}} (file)
@end table
@end deffn
@deffn {Method} {block-name-string} BLOCK-NAME
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>BLOCK-NAME-STRING COMMON-LISP<colon><colon>T method}@c
@methodsubindex{block-name-string}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/glsl-generation/string-generation<dot>lisp file, , @t{src/varjo.internals/glsl-generation/string-generation.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {captured-vars} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CAPTURED-VARS generic function}@c
@genericsubindex{captured-vars}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {captured-vars} (FN @t{v-function})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CAPTURED-VARS VARJO<dot>INTERNALS<colon><colon>V-FUNCTION method}@c
@methodsubindex{captured-vars}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/function-obj<dot>lisp file, , @t{src/varjo.internals/function-obj.lisp}} (file)
@end table
@end deffn
@deffn {Method} {captured-vars} (V-USER-FUNCTION @t{v-user-function})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CAPTURED-VARS VARI<dot>TYPES<colon><colon>V-USER-FUNCTION method}@c
@methodsubindex{captured-vars}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {code} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CODE generic function}@c
@genericsubindex{code}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {code} (EXTERNAL-FUNCTION @t{external-function})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CODE VARJO<dot>INTERNALS<colon><colon>EXTERNAL-FUNCTION method}@c
@methodsubindex{code}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {combine-metadata} META-A META-B
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>COMBINE-METADATA generic function}@c
@genericsubindex{combine-metadata}@c

`combine-metadata` takes 2 metadata (or null) objects and attempts to combine
them if possible. It is valid for the system to return nil for non-null
arguments.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/value-metadata<dot>lisp file, , @t{src/varjo.internals/value-metadata.lisp}} (file)
@item Methods
@deffn {Method} {combine-metadata} (META-A @t{standard-value-metadata}) (META-B @t{standard-value-metadata})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>COMBINE-METADATA VARJO<dot>INTERNALS<colon><colon>STANDARD-VALUE-METADATA VARJO<dot>INTERNALS<colon><colon>STANDARD-VALUE-METADATA method}@c
@methodsubindex{combine-metadata}@c
@end deffn
@deffn {Method} {combine-metadata} (META-A @t{standard-value-metadata}) (META-B @t{null})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>COMBINE-METADATA VARJO<dot>INTERNALS<colon><colon>STANDARD-VALUE-METADATA COMMON-LISP<colon><colon>NULL method}@c
@methodsubindex{combine-metadata}@c
@end deffn
@deffn {Method} {combine-metadata} (META-A @t{null}) (META-B @t{standard-value-metadata})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>COMBINE-METADATA COMMON-LISP<colon><colon>NULL VARJO<dot>INTERNALS<colon><colon>STANDARD-VALUE-METADATA method}@c
@methodsubindex{combine-metadata}@c
@end deffn
@deffn {Method} {combine-metadata} (META-A @t{null}) (META-B @t{null})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>COMBINE-METADATA COMMON-LISP<colon><colon>NULL COMMON-LISP<colon><colon>NULL method}@c
@methodsubindex{combine-metadata}@c
@end deffn
@end table
@end deffn
@deffn {Generic Function} {compile-form} CODE ENV
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>COMPILE-FORM generic function}@c
@genericsubindex{compile-form}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {compile-form} CODE ENV
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>COMPILE-FORM COMMON-LISP<colon><colon>T COMMON-LISP<colon><colon>T method}@c
@methodsubindex{compile-form}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/compile-form<dot>lisp file, , @t{src/varjo.internals/compile-form.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {compile-literal} CODE ENV &key ERRORP
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>COMPILE-LITERAL generic function}@c
@genericsubindex{compile-literal}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {compile-literal} CODE ENV &key ERRORP
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>COMPILE-LITERAL COMMON-LISP<colon><colon>T COMMON-LISP<colon><colon>T method}@c
@methodsubindex{compile-literal}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/compile-form<dot>lisp file, , @t{src/varjo.internals/compile-form.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {compile-place} CODE ENV &key ALLOW-UNBOUND
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>COMPILE-PLACE generic function}@c
@genericsubindex{compile-place}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {compile-place} CODE ENV &key ALLOW-UNBOUND
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>COMPILE-PLACE COMMON-LISP<colon><colon>T COMMON-LISP<colon><colon>T method}@c
@methodsubindex{compile-place}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/compile-form<dot>lisp file, , @t{src/varjo.internals/compile-form.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {context} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CONTEXT generic function}@c
@genericsubindex{context}@c

When passed an instance of `stage` this function returns a list of
GLSL versions which this stage was/is to be compiled with
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Writer
@ref{go to the VARJO<dot>INTERNALS<colon><colon>(SETF CONTEXT) generic function, , @t{(setf context)}} (generic function)
@item Methods
@deffn {Method} {context} (STAGE @t{stage})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CONTEXT VARJO<dot>INTERNALS<colon><colon>STAGE method}@c
@methodsubindex{context}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {(setf context)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF CONTEXT) generic function}@c
@genericsubindex{(setf context)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Reader
@ref{go to the VARJO<dot>INTERNALS<colon><colon>CONTEXT generic function, , @t{context}} (generic function)
@item Methods
@deffn {Method} {(setf context)} NEW-VALUE (STAGE @t{stage})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF CONTEXT) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>STAGE method}@c
@methodsubindex{(setf context)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {copy-compiled} CODE-OBJ &key TYPE-SET CURRENT-LINE TO-BLOCK EMIT-SET RETURN-SET STEMCELLS OUT-OF-SCOPE-ARGS PLACE-TREE PURE USED-TYPES
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>COPY-COMPILED generic function}@c
@genericsubindex{copy-compiled}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {copy-compiled} (CODE-OBJ @t{compiled}) &key TYPE-SET CURRENT-LINE TO-BLOCK EMIT-SET RETURN-SET STEMCELLS OUT-OF-SCOPE-ARGS PLACE-TREE PURE USED-TYPES
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>COPY-COMPILED VARJO<dot>INTERNALS<colon><colon>COMPILED method}@c
@methodsubindex{copy-compiled}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/code-object<dot>lisp file, , @t{src/varjo.internals/code-object.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {core-typep} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP generic function}@c
@genericsubindex{core-typep}@c

`core-typep` returns T if the Varjo type object provided is a core GLSL type
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {core-typep} (V-UIMAGE-2D-MS-ARRAY @t{v-uimage-2d-ms-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-UIMAGE-2D-MS-ARRAY method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-IIMAGE-2D-MS-ARRAY @t{v-iimage-2d-ms-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-IIMAGE-2D-MS-ARRAY method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-IMAGE-2D-MS-ARRAY @t{v-image-2d-ms-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-IMAGE-2D-MS-ARRAY method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-UIMAGE-2D-MS @t{v-uimage-2d-ms})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-UIMAGE-2D-MS method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-IIMAGE-2D-MS @t{v-iimage-2d-ms})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-IIMAGE-2D-MS method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-IMAGE-2D-MS @t{v-image-2d-ms})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-IMAGE-2D-MS method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-UIMAGE-CUBE-ARRAY @t{v-uimage-cube-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-UIMAGE-CUBE-ARRAY method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-IIMAGE-CUBE-ARRAY @t{v-iimage-cube-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-IIMAGE-CUBE-ARRAY method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-IMAGE-CUBE-ARRAY @t{v-image-cube-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-IMAGE-CUBE-ARRAY method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-UIMAGE-2D-ARRAY @t{v-uimage-2d-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-UIMAGE-2D-ARRAY method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-IIMAGE-2D-ARRAY @t{v-iimage-2d-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-IIMAGE-2D-ARRAY method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-IMAGE-2D-ARRAY @t{v-image-2d-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-IMAGE-2D-ARRAY method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-UIMAGE-1D-ARRAY @t{v-uimage-1d-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-UIMAGE-1D-ARRAY method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-IIMAGE-1D-ARRAY @t{v-iimage-1d-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-IIMAGE-1D-ARRAY method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-IMAGE-1D-ARRAY @t{v-image-1d-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-IMAGE-1D-ARRAY method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-UIMAGE-BUFFER @t{v-uimage-buffer})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-UIMAGE-BUFFER method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-IIMAGE-BUFFER @t{v-iimage-buffer})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-IIMAGE-BUFFER method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-IMAGE-BUFFER @t{v-image-buffer})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-IMAGE-BUFFER method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-UIMAGE-CUBE @t{v-uimage-cube})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-UIMAGE-CUBE method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-IIMAGE-CUBE @t{v-iimage-cube})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-IIMAGE-CUBE method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-IMAGE-CUBE @t{v-image-cube})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-IMAGE-CUBE method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-UIMAGE-2D-RECT @t{v-uimage-2d-rect})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-UIMAGE-2D-RECT method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-IIMAGE-2D-RECT @t{v-iimage-2d-rect})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-IIMAGE-2D-RECT method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-IMAGE-2D-RECT @t{v-image-2d-rect})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-IMAGE-2D-RECT method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-UIMAGE-RECT @t{v-uimage-rect})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-UIMAGE-RECT method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-IIMAGE-RECT @t{v-iimage-rect})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-IIMAGE-RECT method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-IMAGE-RECT @t{v-image-rect})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-IMAGE-RECT method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-UIMAGE-3D @t{v-uimage-3d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-UIMAGE-3D method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-IIMAGE-3D @t{v-iimage-3d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-IIMAGE-3D method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-IMAGE-3D @t{v-image-3d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-IMAGE-3D method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-UIMAGE-2D @t{v-uimage-2d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-UIMAGE-2D method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-IIMAGE-2D @t{v-iimage-2d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-IIMAGE-2D method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-IMAGE-2D @t{v-image-2d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-IMAGE-2D method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-UIMAGE-1D @t{v-uimage-1d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-UIMAGE-1D method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-IIMAGE-1D @t{v-iimage-1d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-IIMAGE-1D method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-IMAGE-1D @t{v-image-1d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-IMAGE-1D method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-ATOMIC-UINT @t{v-atomic-uint})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-ATOMIC-UINT method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-USAMPLER-RECT @t{v-usampler-rect})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-USAMPLER-RECT method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-ISAMPLER-RECT @t{v-isampler-rect})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-ISAMPLER-RECT method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-SAMPLER-RECT @t{v-sampler-rect})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-SAMPLER-RECT method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-USAMPLER-CUBE-ARRAY @t{v-usampler-cube-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-USAMPLER-CUBE-ARRAY method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-USAMPLER-CUBE @t{v-usampler-cube})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-USAMPLER-CUBE method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-USAMPLER-BUFFER @t{v-usampler-buffer})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-USAMPLER-BUFFER method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-USAMPLER-3D @t{v-usampler-3d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-USAMPLER-3D method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-USAMPLER-2D-RECT @t{v-usampler-2d-rect})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-USAMPLER-2D-RECT method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-USAMPLER-2D-MS-ARRAY @t{v-usampler-2d-ms-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-USAMPLER-2D-MS-ARRAY method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-USAMPLER-2D-MS @t{v-usampler-2d-ms})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-USAMPLER-2D-MS method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-USAMPLER-2D-ARRAY @t{v-usampler-2d-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-USAMPLER-2D-ARRAY method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-USAMPLER-2D @t{v-usampler-2d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-USAMPLER-2D method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-USAMPLER-1D-ARRAY @t{v-usampler-1d-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-USAMPLER-1D-ARRAY method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-USAMPLER-1D @t{v-usampler-1d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-USAMPLER-1D method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-SAMPLER-CUBE-SHADOW @t{v-sampler-cube-shadow})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-SAMPLER-CUBE-SHADOW method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-SAMPLER-CUBE-ARRAY-SHADOW @t{v-sampler-cube-array-shadow})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-SAMPLER-CUBE-ARRAY-SHADOW method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-SAMPLER-CUBE-ARRAY @t{v-sampler-cube-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-SAMPLER-CUBE-ARRAY method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-SAMPLER-CUBE @t{v-sampler-cube})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-SAMPLER-CUBE method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-SAMPLER-BUFFER @t{v-sampler-buffer})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-SAMPLER-BUFFER method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-SAMPLER-3D @t{v-sampler-3d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-SAMPLER-3D method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-SAMPLER-2D-SHADOW @t{v-sampler-2d-shadow})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-SAMPLER-2D-SHADOW method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-SAMPLER-2D-RECT-SHADOW @t{v-sampler-2d-rect-shadow})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-SAMPLER-2D-RECT-SHADOW method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-SAMPLER-2D-RECT @t{v-sampler-2d-rect})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-SAMPLER-2D-RECT method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-SAMPLER-2D-MS-ARRAY @t{v-sampler-2d-ms-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-SAMPLER-2D-MS-ARRAY method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-SAMPLER-2D-MS @t{v-sampler-2d-ms})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-SAMPLER-2D-MS method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-SAMPLER-2D-ARRAY-SHADOW @t{v-sampler-2d-array-shadow})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-SAMPLER-2D-ARRAY-SHADOW method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-SAMPLER-2D-ARRAY @t{v-sampler-2d-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-SAMPLER-2D-ARRAY method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-SAMPLER-2D @t{v-sampler-2d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-SAMPLER-2D method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-SAMPLER-1D-SHADOW @t{v-sampler-1d-shadow})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-SAMPLER-1D-SHADOW method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-SAMPLER-1D-ARRAY-SHADOW @t{v-sampler-1d-array-shadow})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-SAMPLER-1D-ARRAY-SHADOW method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-SAMPLER-1D-ARRAY @t{v-sampler-1d-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-SAMPLER-1D-ARRAY method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-SAMPLER-1D @t{v-sampler-1d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-SAMPLER-1D method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-ISAMPLER-CUBE-ARRAY @t{v-isampler-cube-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-ISAMPLER-CUBE-ARRAY method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-ISAMPLER-CUBE @t{v-isampler-cube})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-ISAMPLER-CUBE method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-ISAMPLER-BUFFER @t{v-isampler-buffer})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-ISAMPLER-BUFFER method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-ISAMPLER-3D @t{v-isampler-3d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-ISAMPLER-3D method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-ISAMPLER-2D-RECT @t{v-isampler-2d-rect})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-ISAMPLER-2D-RECT method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-ISAMPLER-2D-MS-ARRAY @t{v-isampler-2d-ms-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-ISAMPLER-2D-MS-ARRAY method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-ISAMPLER-2D-MS @t{v-isampler-2d-ms})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-ISAMPLER-2D-MS method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-ISAMPLER-2D-ARRAY @t{v-isampler-2d-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-ISAMPLER-2D-ARRAY method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-ISAMPLER-2D @t{v-isampler-2d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-ISAMPLER-2D method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-ISAMPLER-1D-ARRAY @t{v-isampler-1d-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-ISAMPLER-1D-ARRAY method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-ISAMPLER-1D @t{v-isampler-1d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-ISAMPLER-1D method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-DVEC4 @t{v-dvec4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-DVEC4 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-DVEC3 @t{v-dvec3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-DVEC3 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-DVEC2 @t{v-dvec2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-DVEC2 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-IVEC4 @t{v-ivec4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-IVEC4 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-IVEC3 @t{v-ivec3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-IVEC3 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-IVEC2 @t{v-ivec2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-IVEC2 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-UVEC4 @t{v-uvec4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-UVEC4 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-UVEC3 @t{v-uvec3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-UVEC3 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-UVEC2 @t{v-uvec2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-UVEC2 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-BVEC4 @t{v-bvec4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-BVEC4 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-BVEC3 @t{v-bvec3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-BVEC3 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-BVEC2 @t{v-bvec2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-BVEC2 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-VEC4 @t{v-vec4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-VEC4 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-VEC3 @t{v-vec3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-VEC3 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-VEC2 @t{v-vec2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-VEC2 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-DMAT4X4 @t{v-dmat4x4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-DMAT4X4 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-DMAT4X3 @t{v-dmat4x3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-DMAT4X3 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-DMAT4X2 @t{v-dmat4x2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-DMAT4X2 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-DMAT3X4 @t{v-dmat3x4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-DMAT3X4 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-DMAT3X3 @t{v-dmat3x3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-DMAT3X3 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-DMAT3X2 @t{v-dmat3x2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-DMAT3X2 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-DMAT2X4 @t{v-dmat2x4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-DMAT2X4 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-DMAT2X3 @t{v-dmat2x3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-DMAT2X3 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-DMAT2X2 @t{v-dmat2x2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-DMAT2X2 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-DMAT4 @t{v-dmat4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-DMAT4 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-DMAT3 @t{v-dmat3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-DMAT3 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-DMAT2 @t{v-dmat2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-DMAT2 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-MAT4X4 @t{v-mat4x4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-MAT4X4 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-MAT4X3 @t{v-mat4x3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-MAT4X3 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-MAT4X2 @t{v-mat4x2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-MAT4X2 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-MAT3X4 @t{v-mat3x4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-MAT3X4 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-MAT3X3 @t{v-mat3x3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-MAT3X3 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-MAT3X2 @t{v-mat3x2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-MAT3X2 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-MAT2X4 @t{v-mat2x4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-MAT2X4 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-MAT2X3 @t{v-mat2x3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-MAT2X3 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-MAT2X2 @t{v-mat2x2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-MAT2X2 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-MAT4 @t{v-mat4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-MAT4 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-MAT3 @t{v-mat3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-MAT3 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-MAT2 @t{v-mat2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-MAT2 method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-DOUBLE @t{v-double})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-DOUBLE method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-SHORT-FLOAT @t{v-short-float})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-SHORT-FLOAT method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-FLOAT @t{v-float})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-FLOAT method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-UINT @t{v-uint})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-UINT method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-INT @t{v-int})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-INT method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-BOOL @t{v-bool})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-BOOL method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-VOID @t{v-void})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-VOID method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {core-typep} (V-TYPE @t{v-type})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CORE-TYPEP VARI<dot>TYPES<colon><colon>V-TYPE method}@c
@methodsubindex{core-typep}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/early-types<dot>lisp file, , @t{src/varjo.internals/types/early-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {cpu-side-transform} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CPU-SIDE-TRANSFORM generic function}@c
@genericsubindex{cpu-side-transform}@c

When passed an instance of `implicit-uniform-variable` this returns the lisp
code that was to be used to populate the implicit uniform.@*

See `add-lisp-form-as-uniform` for more details.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {cpu-side-transform} (IMPLICIT-UNIFORM-VARIABLE @t{implicit-uniform-variable})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CPU-SIDE-TRANSFORM VARJO<dot>INTERNALS<colon><colon>IMPLICIT-UNIFORM-VARIABLE method}@c
@methodsubindex{cpu-side-transform}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {current-line} CODE-OBJ &optional EVEN-WHEN-EPHEMERAL
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CURRENT-LINE generic function}@c
@genericsubindex{current-line}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@item Methods
@deffn {Method} {current-line} CODE-OBJ &optional EVEN-WHEN-EPHEMERAL
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>CURRENT-LINE COMMON-LISP<colon><colon>T method}@c
@methodsubindex{current-line}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/code-object<dot>lisp file, , @t{src/varjo.internals/code-object.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {delete-external-function} NAME IN-ARGS-TYPES
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>DELETE-EXTERNAL-FUNCTION generic function}@c
@genericsubindex{delete-external-function}@c

`delete-external-function` removes a function from the 'external function
registry' such that any attempt to use it in a functure compilation task will
fail.@*

The 'in-arg-types' parameter expects a list of Vari `type-spec`s.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {delete-external-function} NAME IN-ARGS-TYPES
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>DELETE-EXTERNAL-FUNCTION COMMON-LISP<colon><colon>T COMMON-LISP<colon><colon>T method}@c
@methodsubindex{delete-external-function}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/external-functions<dot>lisp file, , @t{src/varjo.internals/external-functions.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {emit-set} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>EMIT-SET generic function}@c
@genericsubindex{emit-set}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {emit-set} (V-FUNCTION @t{v-function})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>EMIT-SET VARJO<dot>INTERNALS<colon><colon>V-FUNCTION method}@c
@methodsubindex{emit-set}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {emit-set} (COMPILED-FUNCTION-RESULT @t{compiled-function-result})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>EMIT-SET VARJO<dot>INTERNALS<colon><colon>COMPILED-FUNCTION-RESULT method}@c
@methodsubindex{emit-set}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {emit-set} (COMPILED @t{compiled})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>EMIT-SET VARJO<dot>INTERNALS<colon><colon>COMPILED method}@c
@methodsubindex{emit-set}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {env} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ENV generic function}@c
@genericsubindex{env}@c
@deffnx {Generic Function} {(setf env)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF ENV) generic function}@c
@genericsubindex{(setf env)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {env} (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ENV VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{env}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf env)} NEW-VALUE (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF ENV) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{(setf env)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {env-depth} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ENV-DEPTH generic function}@c
@genericsubindex{env-depth}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {env-depth} (BASE-ENVIRONMENT @t{base-environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ENV-DEPTH VARJO<dot>INTERNALS<colon><colon>BASE-ENVIRONMENT method}@c
@methodsubindex{env-depth}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {env-depth} (ENVIRONMENT @t{environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ENV-DEPTH VARJO<dot>INTERNALS<colon><colon>ENVIRONMENT method}@c
@methodsubindex{env-depth}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {expanded-input-variables} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>EXPANDED-INPUT-VARIABLES generic function}@c
@genericsubindex{expanded-input-variables}@c
@deffnx {Generic Function} {(setf expanded-input-variables)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF EXPANDED-INPUT-VARIABLES) generic function}@c
@genericsubindex{(setf expanded-input-variables)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {expanded-input-variables} (ENV @t{environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>EXPANDED-INPUT-VARIABLES VARJO<dot>INTERNALS<colon><colon>ENVIRONMENT method}@c
@methodsubindex{expanded-input-variables}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/environment<dot>lisp file, , @t{src/varjo.internals/environment.lisp}} (file)
@end table
@end deffn
@deffn {Method} {expanded-input-variables} (BASE-ENVIRONMENT @t{base-environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>EXPANDED-INPUT-VARIABLES VARJO<dot>INTERNALS<colon><colon>BASE-ENVIRONMENT method}@c
@methodsubindex{expanded-input-variables}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf expanded-input-variables)} NEW-VALUE (BASE-ENVIRONMENT @t{base-environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF EXPANDED-INPUT-VARIABLES) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>BASE-ENVIRONMENT method}@c
@methodsubindex{(setf expanded-input-variables)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {expansion} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>EXPANSION generic function}@c
@genericsubindex{expansion}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {expansion} (V-SYMBOL-MACRO @t{v-symbol-macro})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>EXPANSION VARJO<dot>INTERNALS<colon><colon>V-SYMBOL-MACRO method}@c
@methodsubindex{expansion}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {ext-func-compile-chain} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>EXT-FUNC-COMPILE-CHAIN generic function}@c
@genericsubindex{ext-func-compile-chain}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {ext-func-compile-chain} (ENVIRONMENT @t{environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>EXT-FUNC-COMPILE-CHAIN VARJO<dot>INTERNALS<colon><colon>ENVIRONMENT method}@c
@methodsubindex{ext-func-compile-chain}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {feedback-group} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>FEEDBACK-GROUP generic function}@c
@genericsubindex{feedback-group}@c

`feedback-group` given an instance of `feedback-qualifier` this function
returns the group ID from the qualifier.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {feedback-group} (FEEDBACK-QUALIFIER @t{feedback-qualifier})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>FEEDBACK-GROUP VARJO<dot>INTERNALS<colon><colon>FEEDBACK-QUALIFIER method}@c
@methodsubindex{feedback-group}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {find-form-binding-by-literal} NAME ENV
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>FIND-FORM-BINDING-BY-LITERAL generic function}@c
@genericsubindex{find-form-binding-by-literal}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {find-form-binding-by-literal} (FUNC-NAME @t{list}) ENV
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>FIND-FORM-BINDING-BY-LITERAL COMMON-LISP<colon><colon>LIST COMMON-LISP<colon><colon>T method}@c
@methodsubindex{find-form-binding-by-literal}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/functions<dot>lisp file, , @t{src/varjo.internals/functions.lisp}} (file)
@end table
@end deffn
@deffn {Method} {find-form-binding-by-literal} (NAME @t{symbol}) ENV
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>FIND-FORM-BINDING-BY-LITERAL COMMON-LISP<colon><colon>SYMBOL COMMON-LISP<colon><colon>T method}@c
@methodsubindex{find-form-binding-by-literal}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/functions<dot>lisp file, , @t{src/varjo.internals/functions.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {flow-ids} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>FLOW-IDS generic function}@c
@genericsubindex{flow-ids}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {flow-ids} (OBJ @t{typed-external-name})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>FLOW-IDS VARJO<dot>INTERNALS<colon><colon>TYPED-EXTERNAL-NAME method}@c
@methodsubindex{flow-ids}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {flow-ids} (OBJ @t{v-value})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>FLOW-IDS VARJO<dot>INTERNALS<colon><colon>V-VALUE method}@c
@methodsubindex{flow-ids}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/flow<dot>lisp file, , @t{src/varjo.internals/flow.lisp}} (file)
@end table
@end deffn
@deffn {Method} {flow-ids} (OBJ @t{compiled})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>FLOW-IDS VARJO<dot>INTERNALS<colon><colon>COMPILED method}@c
@methodsubindex{flow-ids}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/flow<dot>lisp file, , @t{src/varjo.internals/flow.lisp}} (file)
@end table
@end deffn
@deffn {Method} {flow-ids} (V-TYPE @t{v-type})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>FLOW-IDS VARI<dot>TYPES<colon><colon>V-TYPE method}@c
@methodsubindex{flow-ids}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/early-types<dot>lisp file, , @t{src/varjo.internals/types/early-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {flow-ids} (V-FUNCTION @t{v-function})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>FLOW-IDS VARJO<dot>INTERNALS<colon><colon>V-FUNCTION method}@c
@methodsubindex{flow-ids}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {flow-ids} (STEMCELL @t{stemcell})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>FLOW-IDS VARJO<dot>INTERNALS<colon><colon>STEMCELL method}@c
@methodsubindex{flow-ids}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {func} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>FUNC generic function}@c
@genericsubindex{func}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {func} (FUNC-MATCH @t{func-match})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>FUNC VARJO<dot>INTERNALS<colon><colon>FUNC-MATCH method}@c
@methodsubindex{func}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {function-obj} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>FUNCTION-OBJ generic function}@c
@genericsubindex{function-obj}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {function-obj} (COMPILED-FUNCTION-RESULT @t{compiled-function-result})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>FUNCTION-OBJ VARJO<dot>INTERNALS<colon><colon>COMPILED-FUNCTION-RESULT method}@c
@methodsubindex{function-obj}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {functions} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>FUNCTIONS generic function}@c
@genericsubindex{functions}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {functions} (V-FUNCTION-SET @t{v-function-set})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>FUNCTIONS VARJO<dot>INTERNALS<colon><colon>V-FUNCTION-SET method}@c
@methodsubindex{functions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/function-obj<dot>lisp file, , @t{src/varjo.internals/function-obj.lisp}} (file)
@end table
@end deffn
@deffn {Method} {functions} (FN @t{v-user-function})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>FUNCTIONS VARI<dot>TYPES<colon><colon>V-USER-FUNCTION method}@c
@methodsubindex{functions}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/function-obj<dot>lisp file, , @t{src/varjo.internals/function-obj.lisp}} (file)
@end table
@end deffn
@deffn {Method} {functions} (FN @t{v-function})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>FUNCTIONS VARJO<dot>INTERNALS<colon><colon>V-FUNCTION method}@c
@methodsubindex{functions}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {get-stemcell-name-for-flow-id} ID ENV
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GET-STEMCELL-NAME-FOR-FLOW-ID generic function}@c
@genericsubindex{get-stemcell-name-for-flow-id}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {get-stemcell-name-for-flow-id} ID (E @t{environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GET-STEMCELL-NAME-FOR-FLOW-ID COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>ENVIRONMENT method}@c
@methodsubindex{get-stemcell-name-for-flow-id}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/environment<dot>lisp file, , @t{src/varjo.internals/environment.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {get-symbol-binding} SYMBOL RESPECT-SCOPE-RULES ENV
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GET-SYMBOL-BINDING generic function}@c
@genericsubindex{get-symbol-binding}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {get-symbol-binding} SYMBOL RESPECT-SCOPE-RULES (ENV @t{environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GET-SYMBOL-BINDING COMMON-LISP<colon><colon>T COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>ENVIRONMENT method}@c
@methodsubindex{get-symbol-binding}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/environment<dot>lisp file, , @t{src/varjo.internals/environment.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {glsl-code} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-CODE generic function}@c
@genericsubindex{glsl-code}@c

When passed an instance of `compiled-stage` this function returns a string
containing the glsl code that resulted from the compilation.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Writer
@ref{go to the VARJO<dot>INTERNALS<colon><colon>(SETF GLSL-CODE) generic function, , @t{(setf glsl-code)}} (generic function)
@item Methods
@deffn {Method} {glsl-code} (OBJS @t{list})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-CODE COMMON-LISP<colon><colon>LIST method}@c
@methodsubindex{glsl-code}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/compile-result<dot>lisp file, , @t{src/varjo.internals/compile-result.lisp}} (file)
@end table
@end deffn
@deffn {Method} {glsl-code} (COMPILED-STAGE @t{compiled-stage})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-CODE VARJO<dot>INTERNALS<colon><colon>COMPILED-STAGE method}@c
@methodsubindex{glsl-code}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {glsl-code} (COMPILED-FUNCTION-RESULT @t{compiled-function-result})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-CODE VARJO<dot>INTERNALS<colon><colon>COMPILED-FUNCTION-RESULT method}@c
@methodsubindex{glsl-code}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {(setf glsl-code)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF GLSL-CODE) generic function}@c
@genericsubindex{(setf glsl-code)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Reader
@ref{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-CODE generic function, , @t{glsl-code}} (generic function)
@item Methods
@deffn {Method} {(setf glsl-code)} NEW-VALUE (COMPILED-STAGE @t{compiled-stage})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF GLSL-CODE) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>COMPILED-STAGE method}@c
@methodsubindex{(setf glsl-code)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {glsl-name} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-NAME generic function}@c
@genericsubindex{glsl-name}@c

When passed an instance of `shader-variable` this function returns a string
containing the name that the variable was given in the glsl code.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Writer
@ref{go to the VARJO<dot>INTERNALS<colon><colon>(SETF GLSL-NAME) generic function, , @t{(setf glsl-name)}} (generic function)
@item Methods
@deffn {Method} {glsl-name} (V-FUNCTION @t{v-function})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-NAME VARJO<dot>INTERNALS<colon><colon>V-FUNCTION method}@c
@methodsubindex{glsl-name}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {glsl-name} (TYPED-EXTERNAL-NAME @t{typed-external-name})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-NAME VARJO<dot>INTERNALS<colon><colon>TYPED-EXTERNAL-NAME method}@c
@methodsubindex{glsl-name}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {glsl-name} (V-VALUE @t{v-value})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-NAME VARJO<dot>INTERNALS<colon><colon>V-VALUE method}@c
@methodsubindex{glsl-name}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {glsl-name} (SHADER-VARIABLE @t{shader-variable})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-NAME VARJO<dot>INTERNALS<colon><colon>SHADER-VARIABLE method}@c
@methodsubindex{glsl-name}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {(setf glsl-name)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF GLSL-NAME) generic function}@c
@genericsubindex{(setf glsl-name)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Reader
@ref{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-NAME generic function, , @t{glsl-name}} (generic function)
@item Methods
@deffn {Method} {(setf glsl-name)} NEW-VALUE (V-FUNCTION @t{v-function})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF GLSL-NAME) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>V-FUNCTION method}@c
@methodsubindex{(setf glsl-name)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf glsl-name)} NEW-VALUE (V-VALUE @t{v-value})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF GLSL-NAME) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>V-VALUE method}@c
@methodsubindex{(setf glsl-name)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {glsl-string} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-STRING generic function}@c
@genericsubindex{glsl-string}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {glsl-string} (V-SAMPLER-CUBE-ARRAY-SHADOW @t{v-sampler-cube-array-shadow})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-STRING VARI<dot>TYPES<colon><colon>V-SAMPLER-CUBE-ARRAY-SHADOW method}@c
@methodsubindex{glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {glsl-string} (V-SAMPLER-2D-RECT-SHADOW @t{v-sampler-2d-rect-shadow})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-STRING VARI<dot>TYPES<colon><colon>V-SAMPLER-2D-RECT-SHADOW method}@c
@methodsubindex{glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {glsl-string} (V-SAMPLER-2D-ARRAY-SHADOW @t{v-sampler-2d-array-shadow})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-STRING VARI<dot>TYPES<colon><colon>V-SAMPLER-2D-ARRAY-SHADOW method}@c
@methodsubindex{glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {glsl-string} (V-SAMPLER-1D-ARRAY-SHADOW @t{v-sampler-1d-array-shadow})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-STRING VARI<dot>TYPES<colon><colon>V-SAMPLER-1D-ARRAY-SHADOW method}@c
@methodsubindex{glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {glsl-string} (QUADS @t{quads})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-STRING VARJO<dot>INTERNALS<colon><colon>QUADS method}@c
@methodsubindex{glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {glsl-string} (TRIANGLE-STRIP-ADJACENCY @t{triangle-strip-adjacency})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-STRING VARJO<dot>INTERNALS<colon><colon>TRIANGLE-STRIP-ADJACENCY method}@c
@methodsubindex{glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {glsl-string} (TRIANGLES-ADJACENCY @t{triangles-adjacency})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-STRING VARJO<dot>INTERNALS<colon><colon>TRIANGLES-ADJACENCY method}@c
@methodsubindex{glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {glsl-string} (TRIANGLE-STRIP @t{triangle-strip})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-STRING VARJO<dot>INTERNALS<colon><colon>TRIANGLE-STRIP method}@c
@methodsubindex{glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {glsl-string} (TRIANGLE-FAN @t{triangle-fan})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-STRING VARJO<dot>INTERNALS<colon><colon>TRIANGLE-FAN method}@c
@methodsubindex{glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {glsl-string} (TRIANGLES @t{triangles})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-STRING VARJO<dot>INTERNALS<colon><colon>TRIANGLES method}@c
@methodsubindex{glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {glsl-string} (LINE-STRIP-ADJACENCY @t{line-strip-adjacency})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-STRING VARJO<dot>INTERNALS<colon><colon>LINE-STRIP-ADJACENCY method}@c
@methodsubindex{glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {glsl-string} (LINES-ADJACENCY @t{lines-adjacency})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-STRING VARJO<dot>INTERNALS<colon><colon>LINES-ADJACENCY method}@c
@methodsubindex{glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {glsl-string} (LINE-STRIP @t{line-strip})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-STRING VARJO<dot>INTERNALS<colon><colon>LINE-STRIP method}@c
@methodsubindex{glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {glsl-string} (LINE-LOOP @t{line-loop})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-STRING VARJO<dot>INTERNALS<colon><colon>LINE-LOOP method}@c
@methodsubindex{glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {glsl-string} (ISO-LINES @t{iso-lines})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-STRING VARJO<dot>INTERNALS<colon><colon>ISO-LINES method}@c
@methodsubindex{glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {glsl-string} (LINES @t{lines})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-STRING VARJO<dot>INTERNALS<colon><colon>LINES method}@c
@methodsubindex{glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {glsl-string} (POINTS @t{points})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-STRING VARJO<dot>INTERNALS<colon><colon>POINTS method}@c
@methodsubindex{glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {glsl-string} (QUALIFIER @t{qualifier})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-STRING VARJO<dot>INTERNALS<colon><colon>QUALIFIER method}@c
@methodsubindex{glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {glsl-versions} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-VERSIONS generic function}@c
@genericsubindex{glsl-versions}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {glsl-versions} (EXTERNAL-FUNCTION @t{external-function})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>GLSL-VERSIONS VARJO<dot>INTERNALS<colon><colon>EXTERNAL-FUNCTION method}@c
@methodsubindex{glsl-versions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {ids} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>IDS generic function}@c
@genericsubindex{ids}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {ids} (FLOW-IDENTIFIER @t{flow-identifier})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>IDS VARJO<dot>INTERNALS<colon><colon>FLOW-IDENTIFIER method}@c
@methodsubindex{ids}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {implicit-args} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>IMPLICIT-ARGS generic function}@c
@genericsubindex{implicit-args}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {implicit-args} (V-FUNCTION @t{v-function})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>IMPLICIT-ARGS VARJO<dot>INTERNALS<colon><colon>V-FUNCTION method}@c
@methodsubindex{implicit-args}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {implicit-uniforms} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>IMPLICIT-UNIFORMS generic function}@c
@genericsubindex{implicit-uniforms}@c

When passed an instance of `compiled-stage` this function returns a list
of instances of `implicit-uniform-variable` which represent the uniforms
which were added implicitly during the compilation of the given stage.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Writer
@ref{go to the VARJO<dot>INTERNALS<colon><colon>(SETF IMPLICIT-UNIFORMS) generic function, , @t{(setf implicit-uniforms)}} (generic function)
@item Methods
@deffn {Method} {implicit-uniforms} (COMPILED-STAGE @t{compiled-stage})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>IMPLICIT-UNIFORMS VARJO<dot>INTERNALS<colon><colon>COMPILED-STAGE method}@c
@methodsubindex{implicit-uniforms}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {(setf implicit-uniforms)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF IMPLICIT-UNIFORMS) generic function}@c
@genericsubindex{(setf implicit-uniforms)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Reader
@ref{go to the VARJO<dot>INTERNALS<colon><colon>IMPLICIT-UNIFORMS generic function, , @t{implicit-uniforms}} (generic function)
@item Methods
@deffn {Method} {(setf implicit-uniforms)} NEW-VALUE (COMPILED-STAGE @t{compiled-stage})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF IMPLICIT-UNIFORMS) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>COMPILED-STAGE method}@c
@methodsubindex{(setf implicit-uniforms)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {in-arg-flow-ids} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>IN-ARG-FLOW-IDS generic function}@c
@genericsubindex{in-arg-flow-ids}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {in-arg-flow-ids} (V-FUNCTION @t{v-function})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>IN-ARG-FLOW-IDS VARJO<dot>INTERNALS<colon><colon>V-FUNCTION method}@c
@methodsubindex{in-arg-flow-ids}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {in-args} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>IN-ARGS generic function}@c
@genericsubindex{in-args}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {in-args} (EXTERNAL-FUNCTION @t{external-function})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>IN-ARGS VARJO<dot>INTERNALS<colon><colon>EXTERNAL-FUNCTION method}@c
@methodsubindex{in-args}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {in-declarations} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>IN-DECLARATIONS generic function}@c
@genericsubindex{in-declarations}@c
@deffnx {Generic Function} {(setf in-declarations)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF IN-DECLARATIONS) generic function}@c
@genericsubindex{(setf in-declarations)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {in-declarations} (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>IN-DECLARATIONS VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{in-declarations}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf in-declarations)} NEW-VALUE (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF IN-DECLARATIONS) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{(setf in-declarations)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {in-out-args} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>IN-OUT-ARGS generic function}@c
@genericsubindex{in-out-args}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {in-out-args} (V-FUNCTION @t{v-function})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>IN-OUT-ARGS VARJO<dot>INTERNALS<colon><colon>V-FUNCTION method}@c
@methodsubindex{in-out-args}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {input-variable-glsl} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>INPUT-VARIABLE-GLSL generic function}@c
@genericsubindex{input-variable-glsl}@c
@deffnx {Generic Function} {(setf input-variable-glsl)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF INPUT-VARIABLE-GLSL) generic function}@c
@genericsubindex{(setf input-variable-glsl)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {input-variable-glsl} (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>INPUT-VARIABLE-GLSL VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{input-variable-glsl}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf input-variable-glsl)} NEW-VALUE (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF INPUT-VARIABLE-GLSL) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{(setf input-variable-glsl)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {input-variables} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>INPUT-VARIABLES generic function}@c
@genericsubindex{input-variables}@c

When passed an instance of `stage` this function returns a list of
`input-variable` objects which respresent the input paramaters to
the stage
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Writer
@ref{go to the VARJO<dot>INTERNALS<colon><colon>(SETF INPUT-VARIABLES) generic function, , @t{(setf input-variables)}} (generic function)
@item Methods
@deffn {Method} {input-variables} (STAGE @t{stage})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>INPUT-VARIABLES VARJO<dot>INTERNALS<colon><colon>STAGE method}@c
@methodsubindex{input-variables}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {input-variables} (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>INPUT-VARIABLES VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{input-variables}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {(setf input-variables)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF INPUT-VARIABLES) generic function}@c
@genericsubindex{(setf input-variables)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Reader
@ref{go to the VARJO<dot>INTERNALS<colon><colon>INPUT-VARIABLES generic function, , @t{input-variables}} (generic function)
@item Methods
@deffn {Method} {(setf input-variables)} NEW-VALUE (STAGE @t{stage})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF INPUT-VARIABLES) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>STAGE method}@c
@methodsubindex{(setf input-variables)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf input-variables)} NEW-VALUE (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF INPUT-VARIABLES) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{(setf input-variables)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {kind} METADATA
@anchor{go to the VARI<dot>CL<colon><colon>KIND generic function}@c
@genericsubindex{kind}@c
@table @strong
@item Package
@ref{go to the VARI<dot>CL package, , @t{vari.cl}}
@item Source
@ref{go to the varjo/src/vari<dot>cl/special-operators/emit<dot>lisp file, , @t{src/vari.cl/special-operators/emit.lisp}} (file)
@item Methods
@deffn {Method} {kind} (METADATA @t{output-primitive})
@anchor{go to the VARI<dot>CL<colon><colon>KIND VARI<dot>CL<colon><colon>OUTPUT-PRIMITIVE method}@c
@methodsubindex{kind}@c
@end deffn
@deffn {Method} {kind} (METADATA-COLLECTION @t{list})
@anchor{go to the VARI<dot>CL<colon><colon>KIND COMMON-LISP<colon><colon>LIST method}@c
@methodsubindex{kind}@c
@end deffn
@end table
@end deffn
@deffn {Generic Function} {lisp-code} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>LISP-CODE generic function}@c
@genericsubindex{lisp-code}@c

When passed an instance of `stage`, `lisp-code` returns the Vari code that
acts as the body of the stage.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Writer
@ref{go to the VARJO<dot>INTERNALS<colon><colon>(SETF LISP-CODE) generic function, , @t{(setf lisp-code)}} (generic function)
@item Methods
@deffn {Method} {lisp-code} (STAGE @t{stage})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>LISP-CODE VARJO<dot>INTERNALS<colon><colon>STAGE method}@c
@methodsubindex{lisp-code}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {(setf lisp-code)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF LISP-CODE) generic function}@c
@genericsubindex{(setf lisp-code)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Reader
@ref{go to the VARJO<dot>INTERNALS<colon><colon>LISP-CODE generic function, , @t{lisp-code}} (generic function)
@item Methods
@deffn {Method} {(setf lisp-code)} NEW-VALUE (STAGE @t{stage})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF LISP-CODE) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>STAGE method}@c
@methodsubindex{(setf lisp-code)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {lisp-name} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>LISP-NAME generic function}@c
@genericsubindex{lisp-name}@c

When passed an instance of `primitive` this function returns the keyword
name of the primitive. This is the name one would pass to functions like
`make-stage`.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {lisp-name} (PATCHES @t{patches})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>LISP-NAME VARJO<dot>INTERNALS<colon><colon>PATCHES method}@c
@methodsubindex{lisp-name}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {lisp-name} (QUADS @t{quads})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>LISP-NAME VARJO<dot>INTERNALS<colon><colon>QUADS method}@c
@methodsubindex{lisp-name}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {lisp-name} (TRIANGLE-STRIP-ADJACENCY @t{triangle-strip-adjacency})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>LISP-NAME VARJO<dot>INTERNALS<colon><colon>TRIANGLE-STRIP-ADJACENCY method}@c
@methodsubindex{lisp-name}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {lisp-name} (TRIANGLES-ADJACENCY @t{triangles-adjacency})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>LISP-NAME VARJO<dot>INTERNALS<colon><colon>TRIANGLES-ADJACENCY method}@c
@methodsubindex{lisp-name}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {lisp-name} (TRIANGLE-STRIP @t{triangle-strip})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>LISP-NAME VARJO<dot>INTERNALS<colon><colon>TRIANGLE-STRIP method}@c
@methodsubindex{lisp-name}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {lisp-name} (TRIANGLE-FAN @t{triangle-fan})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>LISP-NAME VARJO<dot>INTERNALS<colon><colon>TRIANGLE-FAN method}@c
@methodsubindex{lisp-name}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {lisp-name} (TRIANGLES @t{triangles})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>LISP-NAME VARJO<dot>INTERNALS<colon><colon>TRIANGLES method}@c
@methodsubindex{lisp-name}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {lisp-name} (LINE-STRIP-ADJACENCY @t{line-strip-adjacency})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>LISP-NAME VARJO<dot>INTERNALS<colon><colon>LINE-STRIP-ADJACENCY method}@c
@methodsubindex{lisp-name}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {lisp-name} (LINES-ADJACENCY @t{lines-adjacency})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>LISP-NAME VARJO<dot>INTERNALS<colon><colon>LINES-ADJACENCY method}@c
@methodsubindex{lisp-name}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {lisp-name} (LINE-STRIP @t{line-strip})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>LISP-NAME VARJO<dot>INTERNALS<colon><colon>LINE-STRIP method}@c
@methodsubindex{lisp-name}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {lisp-name} (LINE-LOOP @t{line-loop})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>LISP-NAME VARJO<dot>INTERNALS<colon><colon>LINE-LOOP method}@c
@methodsubindex{lisp-name}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {lisp-name} (ISO-LINES @t{iso-lines})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>LISP-NAME VARJO<dot>INTERNALS<colon><colon>ISO-LINES method}@c
@methodsubindex{lisp-name}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {lisp-name} (LINES @t{lines})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>LISP-NAME VARJO<dot>INTERNALS<colon><colon>LINES method}@c
@methodsubindex{lisp-name}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {lisp-name} (POINTS @t{points})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>LISP-NAME VARJO<dot>INTERNALS<colon><colon>POINTS method}@c
@methodsubindex{lisp-name}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {location} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>LOCATION generic function}@c
@genericsubindex{location}@c

When called with an instance of `output-variable` this returns the location[0]
of the variable. These will only be populated from `output-variable`s from a
`fragment-stage`.@*

> `[0]` For info on the fragment output locations please see:@*
>       https://www.khronos.org/opengl/wiki/Fragment_Shader#Output_buffers
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {location} (OUTPUT-VARIABLE @t{output-variable})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>LOCATION VARJO<dot>INTERNALS<colon><colon>OUTPUT-VARIABLE method}@c
@methodsubindex{location}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {main-metadata} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>MAIN-METADATA generic function}@c
@genericsubindex{main-metadata}@c
@deffnx {Generic Function} {(setf main-metadata)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF MAIN-METADATA) generic function}@c
@genericsubindex{(setf main-metadata)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {main-metadata} (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>MAIN-METADATA VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{main-metadata}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf main-metadata)} NEW-VALUE (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF MAIN-METADATA) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{(setf main-metadata)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {make-regular-macro} NAME MACRO-FUNCTION CONTEXT ENV
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>MAKE-REGULAR-MACRO generic function}@c
@genericsubindex{make-regular-macro}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/macros<dot>lisp file, , @t{src/varjo.internals/macros.lisp}} (file)
@item Methods
@deffn {Method} {make-regular-macro} NAME MACRO-FUNCTION CONTEXT ENV
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>MAKE-REGULAR-MACRO COMMON-LISP<colon><colon>T COMMON-LISP<colon><colon>T COMMON-LISP<colon><colon>T COMMON-LISP<colon><colon>T method}@c
@methodsubindex{make-regular-macro}@c
@end deffn
@end table
@end deffn
@deffn {Generic Function} {make-symbol-macro} EXPANSION-FORM FUNCTION-SCOPE ENV
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>MAKE-SYMBOL-MACRO generic function}@c
@genericsubindex{make-symbol-macro}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/macros<dot>lisp file, , @t{src/varjo.internals/macros.lisp}} (file)
@item Methods
@deffn {Method} {make-symbol-macro} EXPANSION-FORM FUNCTION-SCOPE ENV
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>MAKE-SYMBOL-MACRO COMMON-LISP<colon><colon>T COMMON-LISP<colon><colon>T COMMON-LISP<colon><colon>T method}@c
@methodsubindex{make-symbol-macro}@c
@end deffn
@end table
@end deffn
@deffn {Generic Function} {max-vertices} METADATA
@anchor{go to the VARI<dot>CL<colon><colon>MAX-VERTICES generic function}@c
@genericsubindex{max-vertices}@c
@table @strong
@item Package
@ref{go to the VARI<dot>CL package, , @t{vari.cl}}
@item Source
@ref{go to the varjo/src/vari<dot>cl/special-operators/emit<dot>lisp file, , @t{src/vari.cl/special-operators/emit.lisp}} (file)
@item Methods
@deffn {Method} {max-vertices} (METADATA @t{output-primitive})
@anchor{go to the VARI<dot>CL<colon><colon>MAX-VERTICES VARI<dot>CL<colon><colon>OUTPUT-PRIMITIVE method}@c
@methodsubindex{max-vertices}@c
@end deffn
@deffn {Method} {max-vertices} (METADATA-COLLECTION @t{list})
@anchor{go to the VARI<dot>CL<colon><colon>MAX-VERTICES COMMON-LISP<colon><colon>LIST method}@c
@methodsubindex{max-vertices}@c
@end deffn
@end table
@end deffn
@deffn {Generic Function} {merge-compiled} OBJS &key TYPE-SET EMIT-SET RETURN-SET CURRENT-LINE TO-BLOCK STEMCELLS OUT-OF-SCOPE-ARGS PLACE-TREE PURE USED-TYPES
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>MERGE-COMPILED generic function}@c
@genericsubindex{merge-compiled}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {merge-compiled} (OBJS @t{list}) &key TYPE-SET CURRENT-LINE TO-BLOCK EMIT-SET RETURN-SET STEMCELLS OUT-OF-SCOPE-ARGS PLACE-TREE PURE USED-TYPES
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>MERGE-COMPILED COMMON-LISP<colon><colon>LIST method}@c
@methodsubindex{merge-compiled}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/code-object<dot>lisp file, , @t{src/varjo.internals/code-object.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {metadata-for-argument} NAME METADATA-KEY ENV
@anchor{go to the VARJO<dot>API<colon><colon>METADATA-FOR-ARGUMENT generic function}@c
@genericsubindex{metadata-for-argument}@c

When given an `environment` object from a Vari compiler-macro and a symbol
that names one of the arguments to the macro[0], `metadata-for-argument`
returns an object that holds the compile time metadata for the value@*

[0] the argument cannot be the &whole or &environment argument.
@table @strong
@item Package
@ref{go to the VARJO<dot>API package, , @t{varjo.api}}
@item Source
@ref{go to the varjo/src/varjo<dot>api/environment<dot>lisp file, , @t{src/varjo.api/environment.lisp}} (file)
@item Methods
@deffn {Method} {metadata-for-argument} (NAME @t{symbol}) (METADATA-KEY @t{symbol}) (ENV @t{macro-expansion-environment})
@anchor{go to the VARJO<dot>API<colon><colon>METADATA-FOR-ARGUMENT COMMON-LISP<colon><colon>SYMBOL COMMON-LISP<colon><colon>SYMBOL VARJO<dot>INTERNALS<colon><colon>MACRO-EXPANSION-ENVIRONMENT method}@c
@methodsubindex{metadata-for-argument}@c
@end deffn
@deffn {Method} {metadata-for-argument} (NAME @t{symbol}) (METADATA-KEY @t{symbol}) (ENV @t{compiler-macro-expansion-environment})
@anchor{go to the VARJO<dot>API<colon><colon>METADATA-FOR-ARGUMENT COMMON-LISP<colon><colon>SYMBOL COMMON-LISP<colon><colon>SYMBOL VARJO<dot>INTERNALS<colon><colon>COMPILER-MACRO-EXPANSION-ENVIRONMENT method}@c
@methodsubindex{metadata-for-argument}@c
@end deffn
@end table
@end deffn
@deffn {Generic Function} {metadata-for-flow-id} METADATA-KIND FLOW-ID ENV
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>METADATA-FOR-FLOW-ID generic function}@c
@genericsubindex{metadata-for-flow-id}@c
@deffnx {Generic Function} {(setf metadata-for-flow-id)} VALUE FLOW-ID ENV
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF METADATA-FOR-FLOW-ID) generic function}@c
@genericsubindex{(setf metadata-for-flow-id)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {metadata-for-flow-id} METADATA-KIND FLOW-ID (ENV @t{expansion-env})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>METADATA-FOR-FLOW-ID COMMON-LISP<colon><colon>T COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>EXPANSION-ENV method}@c
@methodsubindex{metadata-for-flow-id}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/environment<dot>lisp file, , @t{src/varjo.internals/environment.lisp}} (file)
@end table
@end deffn
@deffn {Method} {metadata-for-flow-id} (METADATA-KIND @t{symbol}) (FLOW-ID @t{flow-identifier}) (ENV @t{environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>METADATA-FOR-FLOW-ID COMMON-LISP<colon><colon>SYMBOL VARJO<dot>INTERNALS<colon><colon>FLOW-IDENTIFIER VARJO<dot>INTERNALS<colon><colon>ENVIRONMENT method}@c
@methodsubindex{metadata-for-flow-id}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/environment<dot>lisp file, , @t{src/varjo.internals/environment.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf metadata-for-flow-id)} (DATA @t{standard-value-metadata}) (FLOW-ID @t{flow-identifier}) (ENV @t{environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF METADATA-FOR-FLOW-ID) VARJO<dot>INTERNALS<colon><colon>STANDARD-VALUE-METADATA VARJO<dot>INTERNALS<colon><colon>FLOW-IDENTIFIER VARJO<dot>INTERNALS<colon><colon>ENVIRONMENT method}@c
@methodsubindex{(setf metadata-for-flow-id)}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/environment<dot>lisp file, , @t{src/varjo.internals/environment.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {metadata-for-variable} NAME METADATA-KEY ENV
@anchor{go to the VARJO<dot>API<colon><colon>METADATA-FOR-VARIABLE generic function}@c
@genericsubindex{metadata-for-variable}@c

When given an `environment` object from a Vari compiler-macro and a symbol
that names a variable currently in scope to the macro[0],
`metadata-for-variable` returns an object that holds the compile time metadata
for the value bound to that variable.@*

[0] the argument cannot be the &whole or &environment argument.
@table @strong
@item Package
@ref{go to the VARJO<dot>API package, , @t{varjo.api}}
@item Source
@ref{go to the varjo/src/varjo<dot>api/environment<dot>lisp file, , @t{src/varjo.api/environment.lisp}} (file)
@item Methods
@deffn {Method} {metadata-for-variable} (NAME @t{symbol}) (METADATA-KEY @t{symbol}) (ENV @t{extended-environment})
@anchor{go to the VARJO<dot>API<colon><colon>METADATA-FOR-VARIABLE COMMON-LISP<colon><colon>SYMBOL COMMON-LISP<colon><colon>SYMBOL VARJO<dot>INTERNALS<colon><colon>EXTENDED-ENVIRONMENT method}@c
@methodsubindex{metadata-for-variable}@c
@end deffn
@end table
@end deffn
@deffn {Generic Function} {name} OBJ
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>NAME generic function}@c
@genericsubindex{name}@c

When passed an instance of `qualfiier` `shader-variable or `external-function`
the function returns the name of the qualfiier/variable/function respectively.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {name} (V-FUNCTION @t{v-function})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>NAME VARJO<dot>INTERNALS<colon><colon>V-FUNCTION method}@c
@methodsubindex{name}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {name} (V-COMPILER-MACRO @t{v-compiler-macro})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>NAME VARJO<dot>INTERNALS<colon><colon>V-COMPILER-MACRO method}@c
@methodsubindex{name}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {name} (V-REGULAR-MACRO @t{v-regular-macro})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>NAME VARJO<dot>INTERNALS<colon><colon>V-REGULAR-MACRO method}@c
@methodsubindex{name}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {name} (CAPTURED-VAR @t{captured-var})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>NAME VARJO<dot>INTERNALS<colon><colon>CAPTURED-VAR method}@c
@methodsubindex{name}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {name} (STEMCELL @t{stemcell})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>NAME VARJO<dot>INTERNALS<colon><colon>STEMCELL method}@c
@methodsubindex{name}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {name} (EXTERNAL-FUNCTION @t{external-function})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>NAME VARJO<dot>INTERNALS<colon><colon>EXTERNAL-FUNCTION method}@c
@methodsubindex{name}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {name} (QUALIFIER @t{qualifier})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>NAME VARJO<dot>INTERNALS<colon><colon>QUALIFIER method}@c
@methodsubindex{name}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {name} (SHADER-VARIABLE @t{shader-variable})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>NAME VARJO<dot>INTERNALS<colon><colon>SHADER-VARIABLE method}@c
@methodsubindex{name}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {name} (COMPILED-FUNC @t{compiled-function-result})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>NAME VARJO<dot>INTERNALS<colon><colon>COMPILED-FUNCTION-RESULT method}@c
@methodsubindex{name}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {nth-return-name} N STAGE &optional INCLUDE-INSTANCE-NAME
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>NTH-RETURN-NAME generic function}@c
@genericsubindex{nth-return-name}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/return-set<dot>lisp file, , @t{src/varjo.internals/return-set.lisp}} (file)
@item Methods
@deffn {Method} {nth-return-name} N (STAGE @t{stage}) &optional INCLUDE-INSTANCE-NAME
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>NTH-RETURN-NAME COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>STAGE method}@c
@methodsubindex{nth-return-name}@c
@end deffn
@deffn {Method} {nth-return-name} N (STAGE @t{tessellation-control-stage}) &optional INCLUDE-INSTANCE-NAME
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>NTH-RETURN-NAME COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>TESSELLATION-CONTROL-STAGE method}@c
@methodsubindex{nth-return-name}@c
@end deffn
@deffn {Method} {nth-return-name} N (STAGE @t{tessellation-evaluation-stage}) &optional INCLUDE-INSTANCE-NAME
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>NTH-RETURN-NAME COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>TESSELLATION-EVALUATION-STAGE method}@c
@methodsubindex{nth-return-name}@c
@end deffn
@deffn {Method} {nth-return-name} N (STAGE @t{vertex-stage}) &optional INCLUDE-INSTANCE-NAME
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>NTH-RETURN-NAME COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>VERTEX-STAGE method}@c
@methodsubindex{nth-return-name}@c
@end deffn
@deffn {Method} {nth-return-name} N (STAGE @t{fragment-stage}) &optional INCLUDE-INSTANCE-NAME
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>NTH-RETURN-NAME COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>FRAGMENT-STAGE method}@c
@methodsubindex{nth-return-name}@c
@end deffn
@end table
@end deffn
@deffn {Generic Function} {order} METADATA
@anchor{go to the VARI<dot>CL<colon><colon>ORDER generic function}@c
@genericsubindex{order}@c
@table @strong
@item Package
@ref{go to the VARI<dot>CL package, , @t{vari.cl}}
@item Source
@ref{go to the varjo/src/vari<dot>cl/special-operators/emit<dot>lisp file, , @t{src/vari.cl/special-operators/emit.lisp}} (file)
@item Methods
@deffn {Method} {order} (METADATA @t{tessellate-to})
@anchor{go to the VARI<dot>CL<colon><colon>ORDER VARI<dot>CL<colon><colon>TESSELLATE-TO method}@c
@methodsubindex{order}@c
@end deffn
@deffn {Method} {order} (METADATA-COLLECTION @t{list})
@anchor{go to the VARI<dot>CL<colon><colon>ORDER COMMON-LISP<colon><colon>LIST method}@c
@methodsubindex{order}@c
@end deffn
@end table
@end deffn
@deffn {Generic Function} {origin-env} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ORIGIN-ENV generic function}@c
@genericsubindex{origin-env}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {origin-env} (CAPTURED-VAR @t{captured-var})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>ORIGIN-ENV VARJO<dot>INTERNALS<colon><colon>CAPTURED-VAR method}@c
@methodsubindex{origin-env}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {out-declarations} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>OUT-DECLARATIONS generic function}@c
@genericsubindex{out-declarations}@c
@deffnx {Generic Function} {(setf out-declarations)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF OUT-DECLARATIONS) generic function}@c
@genericsubindex{(setf out-declarations)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {out-declarations} (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>OUT-DECLARATIONS VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{out-declarations}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf out-declarations)} NEW-VALUE (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF OUT-DECLARATIONS) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{(setf out-declarations)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {out-of-scope-args} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>OUT-OF-SCOPE-ARGS generic function}@c
@genericsubindex{out-of-scope-args}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {out-of-scope-args} (COMPILED @t{compiled})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>OUT-OF-SCOPE-ARGS VARJO<dot>INTERNALS<colon><colon>COMPILED method}@c
@methodsubindex{out-of-scope-args}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {out-set} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>OUT-SET generic function}@c
@genericsubindex{out-set}@c
@deffnx {Generic Function} {(setf out-set)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF OUT-SET) generic function}@c
@genericsubindex{(setf out-set)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {out-set} (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>OUT-SET VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{out-set}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf out-set)} NEW-VALUE (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF OUT-SET) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{(setf out-set)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {output-variable-glsl} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>OUTPUT-VARIABLE-GLSL generic function}@c
@genericsubindex{output-variable-glsl}@c
@deffnx {Generic Function} {(setf output-variable-glsl)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF OUTPUT-VARIABLE-GLSL) generic function}@c
@genericsubindex{(setf output-variable-glsl)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {output-variable-glsl} (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>OUTPUT-VARIABLE-GLSL VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{output-variable-glsl}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf output-variable-glsl)} NEW-VALUE (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF OUTPUT-VARIABLE-GLSL) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{(setf output-variable-glsl)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {output-variables} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>OUTPUT-VARIABLES generic function}@c
@genericsubindex{output-variables}@c

When passed an instance of `compiled-stage` this function returns a list
of instances of `output-variable` which represent the data output from
the given stage.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Writer
@ref{go to the VARJO<dot>INTERNALS<colon><colon>(SETF OUTPUT-VARIABLES) generic function, , @t{(setf output-variables)}} (generic function)
@item Methods
@deffn {Method} {output-variables} (COMPILED-STAGE @t{compiled-stage})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>OUTPUT-VARIABLES VARJO<dot>INTERNALS<colon><colon>COMPILED-STAGE method}@c
@methodsubindex{output-variables}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {output-variables} (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>OUTPUT-VARIABLES VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{output-variables}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {(setf output-variables)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF OUTPUT-VARIABLES) generic function}@c
@genericsubindex{(setf output-variables)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Reader
@ref{go to the VARJO<dot>INTERNALS<colon><colon>OUTPUT-VARIABLES generic function, , @t{output-variables}} (generic function)
@item Methods
@deffn {Method} {(setf output-variables)} NEW-VALUE (COMPILED-STAGE @t{compiled-stage})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF OUTPUT-VARIABLES) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>COMPILED-STAGE method}@c
@methodsubindex{(setf output-variables)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf output-variables)} NEW-VALUE (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF OUTPUT-VARIABLES) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{(setf output-variables)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {place-tree} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>PLACE-TREE generic function}@c
@genericsubindex{place-tree}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {place-tree} (COMPILED @t{compiled})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>PLACE-TREE VARJO<dot>INTERNALS<colon><colon>COMPILED method}@c
@methodsubindex{place-tree}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {previous-stage} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>PREVIOUS-STAGE generic function}@c
@genericsubindex{previous-stage}@c
@deffnx {Generic Function} {(setf previous-stage)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF PREVIOUS-STAGE) generic function}@c
@genericsubindex{(setf previous-stage)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {previous-stage} (STAGE @t{stage})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>PREVIOUS-STAGE VARJO<dot>INTERNALS<colon><colon>STAGE method}@c
@methodsubindex{previous-stage}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf previous-stage)} NEW-VALUE (STAGE @t{stage})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF PREVIOUS-STAGE) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>STAGE method}@c
@methodsubindex{(setf previous-stage)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {primary-type} COMPILED
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>PRIMARY-TYPE generic function}@c
@genericsubindex{primary-type}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {primary-type} (SET @t{vector})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>PRIMARY-TYPE COMMON-LISP<colon><colon>VECTOR method}@c
@methodsubindex{primary-type}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/code-object<dot>lisp file, , @t{src/varjo.internals/code-object.lisp}} (file)
@end table
@end deffn
@deffn {Method} {primary-type} (COMPILED @t{compiled})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>PRIMARY-TYPE VARJO<dot>INTERNALS<colon><colon>COMPILED method}@c
@methodsubindex{primary-type}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/code-object<dot>lisp file, , @t{src/varjo.internals/code-object.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {primitive} METADATA
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>PRIMITIVE generic function}@c
@genericsubindex{primitive}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/vari<dot>cl/special-operators/emit<dot>lisp file, , @t{src/vari.cl/special-operators/emit.lisp}} (file)
@item Methods
@deffn {Method} {primitive} (METADATA @t{tessellate-to})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>PRIMITIVE VARI<dot>CL<colon><colon>TESSELLATE-TO method}@c
@methodsubindex{primitive}@c
@end deffn
@deffn {Method} {primitive} (METADATA-COLLECTION @t{list})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>PRIMITIVE COMMON-LISP<colon><colon>LIST method}@c
@methodsubindex{primitive}@c
@end deffn
@end table
@end deffn
@deffn {Generic Function} {primitive-in} PP
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>PRIMITIVE-IN generic function}@c
@genericsubindex{primitive-in}@c

When passed an instance of `stage` this function returns an instance of `primitive`
or nil.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Writer
@ref{go to the VARJO<dot>INTERNALS<colon><colon>(SETF PRIMITIVE-IN) generic function, , @t{(setf primitive-in)}} (generic function)
@item Methods
@deffn {Method} {primitive-in} (ENV @t{environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>PRIMITIVE-IN VARJO<dot>INTERNALS<colon><colon>ENVIRONMENT method}@c
@methodsubindex{primitive-in}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/environment<dot>lisp file, , @t{src/varjo.internals/environment.lisp}} (file)
@end table
@end deffn
@deffn {Method} {primitive-in} (STAGE @t{stage})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>PRIMITIVE-IN VARJO<dot>INTERNALS<colon><colon>STAGE method}@c
@methodsubindex{primitive-in}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {primitive-in} (PP @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>PRIMITIVE-IN VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{primitive-in}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {(setf primitive-in)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF PRIMITIVE-IN) generic function}@c
@genericsubindex{(setf primitive-in)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Reader
@ref{go to the VARJO<dot>INTERNALS<colon><colon>PRIMITIVE-IN generic function, , @t{primitive-in}} (generic function)
@item Methods
@deffn {Method} {(setf primitive-in)} NEW-VALUE (STAGE @t{stage})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF PRIMITIVE-IN) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>STAGE method}@c
@methodsubindex{(setf primitive-in)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {primitive-out} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>PRIMITIVE-OUT generic function}@c
@genericsubindex{primitive-out}@c

When passed an instance of `compiled-stage` this function returns either
NIL or an instance of 'primitive'. This represent the primitive that
could/was be passed to the next stage.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Writer
@ref{go to the VARJO<dot>INTERNALS<colon><colon>(SETF PRIMITIVE-OUT) generic function, , @t{(setf primitive-out)}} (generic function)
@item Methods
@deffn {Method} {primitive-out} (COMPILED-STAGE @t{compiled-stage})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>PRIMITIVE-OUT VARJO<dot>INTERNALS<colon><colon>COMPILED-STAGE method}@c
@methodsubindex{primitive-out}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {primitive-out} (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>PRIMITIVE-OUT VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{primitive-out}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {(setf primitive-out)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF PRIMITIVE-OUT) generic function}@c
@genericsubindex{(setf primitive-out)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Reader
@ref{go to the VARJO<dot>INTERNALS<colon><colon>PRIMITIVE-OUT generic function, , @t{primitive-out}} (generic function)
@item Methods
@deffn {Method} {(setf primitive-out)} NEW-VALUE (COMPILED-STAGE @t{compiled-stage})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF PRIMITIVE-OUT) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>COMPILED-STAGE method}@c
@methodsubindex{(setf primitive-out)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf primitive-out)} NEW-VALUE (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF PRIMITIVE-OUT) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{(setf primitive-out)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {pure-p} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>PURE-P generic function}@c
@genericsubindex{pure-p}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {pure-p} (V-FUNCTION @t{v-function})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>PURE-P VARJO<dot>INTERNALS<colon><colon>V-FUNCTION method}@c
@methodsubindex{pure-p}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {pure-p} (COMPILED @t{compiled})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>PURE-P VARJO<dot>INTERNALS<colon><colon>COMPILED method}@c
@methodsubindex{pure-p}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {qualifier=} QUAL-A QUAL-B
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>QUALIFIER= generic function}@c
@genericsubindex{qualifier=}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {qualifier=} A B
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>QUALIFIER= COMMON-LISP<colon><colon>T COMMON-LISP<colon><colon>T method}@c
@methodsubindex{qualifier=}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/qualifiers<dot>lisp file, , @t{src/varjo.internals/qualifiers.lisp}} (file)
@end table
@end deffn
@deffn {Method} {qualifier=} (QUAL-A @t{feedback-qualifier}) (QUAL-B @t{feedback-qualifier})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>QUALIFIER= VARJO<dot>INTERNALS<colon><colon>FEEDBACK-QUALIFIER VARJO<dot>INTERNALS<colon><colon>FEEDBACK-QUALIFIER method}@c
@methodsubindex{qualifier=}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/qualifiers<dot>lisp file, , @t{src/varjo.internals/qualifiers.lisp}} (file)
@end table
@end deffn
@deffn {Method} {qualifier=} (QUAL-A @t{qualifier}) (QUAL-B @t{qualifier})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>QUALIFIER= VARJO<dot>INTERNALS<colon><colon>QUALIFIER VARJO<dot>INTERNALS<colon><colon>QUALIFIER method}@c
@methodsubindex{qualifier=}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/qualifiers<dot>lisp file, , @t{src/varjo.internals/qualifiers.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {qualifiers} OBJ
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>QUALIFIERS generic function}@c
@genericsubindex{qualifiers}@c

When passed an instance of `shader-variable` or Varjo type object this function
returns a list of any qualifiers that apply to the value (of the variable or
the value to which the type applies)
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {qualifiers} (V-TYPE @t{v-type})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>QUALIFIERS VARI<dot>TYPES<colon><colon>V-TYPE method}@c
@methodsubindex{qualifiers}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/early-types<dot>lisp file, , @t{src/varjo.internals/types/early-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {qualifiers} (OBJ @t{shader-variable})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>QUALIFIERS VARJO<dot>INTERNALS<colon><colon>SHADER-VARIABLE method}@c
@methodsubindex{qualifiers}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/qualifiers<dot>lisp file, , @t{src/varjo.internals/qualifiers.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {qualify-type} TYPE QUALIFIERS
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>QUALIFY-TYPE generic function}@c
@genericsubindex{qualify-type}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {qualify-type} (TYPE @t{v-type}) QUALIFIERS
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>QUALIFY-TYPE VARI<dot>TYPES<colon><colon>V-TYPE COMMON-LISP<colon><colon>T method}@c
@methodsubindex{qualify-type}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/early-types<dot>lisp file, , @t{src/varjo.internals/types/early-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {raw-out-set} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>RAW-OUT-SET generic function}@c
@genericsubindex{raw-out-set}@c
@deffnx {Generic Function} {(setf raw-out-set)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF RAW-OUT-SET) generic function}@c
@genericsubindex{(setf raw-out-set)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {raw-out-set} (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>RAW-OUT-SET VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{raw-out-set}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf raw-out-set)} NEW-VALUE (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF RAW-OUT-SET) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{(setf raw-out-set)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {replace-flow-id} TYPE FLOW-ID
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>REPLACE-FLOW-ID generic function}@c
@genericsubindex{replace-flow-id}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/flow<dot>lisp file, , @t{src/varjo.internals/flow.lisp}} (file)
@item Methods
@deffn {Method} {replace-flow-id} (TYPE @t{v-type}) (FLOW-ID @t{flow-identifier})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>REPLACE-FLOW-ID VARI<dot>TYPES<colon><colon>V-TYPE VARJO<dot>INTERNALS<colon><colon>FLOW-IDENTIFIER method}@c
@methodsubindex{replace-flow-id}@c
@end deffn
@end table
@end deffn
@deffn {Generic Function} {return-set} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>RETURN-SET generic function}@c
@genericsubindex{return-set}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {return-set} (COMPILED-FUNCTION-RESULT @t{compiled-function-result})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>RETURN-SET VARJO<dot>INTERNALS<colon><colon>COMPILED-FUNCTION-RESULT method}@c
@methodsubindex{return-set}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {return-set} (COMPILED @t{compiled})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>RETURN-SET VARJO<dot>INTERNALS<colon><colon>COMPILED method}@c
@methodsubindex{return-set}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {score} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>SCORE generic function}@c
@genericsubindex{score}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {score} (FUNC-MATCH @t{func-match})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>SCORE VARJO<dot>INTERNALS<colon><colon>FUNC-MATCH method}@c
@methodsubindex{score}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {secondary-score} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>SECONDARY-SCORE generic function}@c
@genericsubindex{secondary-score}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {secondary-score} (FUNC-MATCH @t{func-match})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>SECONDARY-SCORE VARJO<dot>INTERNALS<colon><colon>FUNC-MATCH method}@c
@methodsubindex{secondary-score}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {set-flow-id} TYPE FLOW-ID
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>SET-FLOW-ID generic function}@c
@genericsubindex{set-flow-id}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/flow<dot>lisp file, , @t{src/varjo.internals/flow.lisp}} (file)
@item Methods
@deffn {Method} {set-flow-id} (TYPE @t{v-type}) (FLOW-ID @t{flow-identifier})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>SET-FLOW-ID VARI<dot>TYPES<colon><colon>V-TYPE VARJO<dot>INTERNALS<colon><colon>FLOW-IDENTIFIER method}@c
@methodsubindex{set-flow-id}@c
@end deffn
@end table
@end deffn
@deffn {Generic Function} {signatures} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>SIGNATURES generic function}@c
@genericsubindex{signatures}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {signatures} (E @t{environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>SIGNATURES VARJO<dot>INTERNALS<colon><colon>ENVIRONMENT method}@c
@methodsubindex{signatures}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/environment<dot>lisp file, , @t{src/varjo.internals/environment.lisp}} (file)
@end table
@end deffn
@deffn {Method} {signatures} (COMPILED-FUNCTION-RESULT @t{compiled-function-result})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>SIGNATURES VARJO<dot>INTERNALS<colon><colon>COMPILED-FUNCTION-RESULT method}@c
@methodsubindex{signatures}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {spacing} METADATA
@anchor{go to the VARI<dot>CL<colon><colon>SPACING generic function}@c
@genericsubindex{spacing}@c
@table @strong
@item Package
@ref{go to the VARI<dot>CL package, , @t{vari.cl}}
@item Source
@ref{go to the varjo/src/vari<dot>cl/special-operators/emit<dot>lisp file, , @t{src/vari.cl/special-operators/emit.lisp}} (file)
@item Methods
@deffn {Method} {spacing} (METADATA @t{tessellate-to})
@anchor{go to the VARI<dot>CL<colon><colon>SPACING VARI<dot>CL<colon><colon>TESSELLATE-TO method}@c
@methodsubindex{spacing}@c
@end deffn
@deffn {Method} {spacing} (METADATA-COLLECTION @t{list})
@anchor{go to the VARI<dot>CL<colon><colon>SPACING COMMON-LISP<colon><colon>LIST method}@c
@methodsubindex{spacing}@c
@end deffn
@end table
@end deffn
@deffn {Generic Function} {stage} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>STAGE generic function}@c
@genericsubindex{stage}@c
@deffnx {Generic Function} {(setf stage)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF STAGE) generic function}@c
@genericsubindex{(setf stage)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {stage} (ENV @t{environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>STAGE VARJO<dot>INTERNALS<colon><colon>ENVIRONMENT method}@c
@methodsubindex{stage}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/environment<dot>lisp file, , @t{src/varjo.internals/environment.lisp}} (file)
@end table
@end deffn
@deffn {Method} {stage} (BASE-ENVIRONMENT @t{base-environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>STAGE VARJO<dot>INTERNALS<colon><colon>BASE-ENVIRONMENT method}@c
@methodsubindex{stage}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {stage} (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>STAGE VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{stage}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf stage)} NEW-VALUE (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF STAGE) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{(setf stage)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {stage-where-first-return-is-position-p} STAGE
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>STAGE-WHERE-FIRST-RETURN-IS-POSITION-P generic function}@c
@genericsubindex{stage-where-first-return-is-position-p}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/stages<dot>lisp file, , @t{src/varjo.internals/stages.lisp}} (file)
@item Methods
@deffn {Method} {stage-where-first-return-is-position-p} (STAGE @t{stage})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>STAGE-WHERE-FIRST-RETURN-IS-POSITION-P VARJO<dot>INTERNALS<colon><colon>STAGE method}@c
@methodsubindex{stage-where-first-return-is-position-p}@c
@end deffn
@end table
@end deffn
@deffn {Generic Function} {starting-stage} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>STARTING-STAGE generic function}@c
@genericsubindex{starting-stage}@c
@deffnx {Generic Function} {(setf starting-stage)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF STARTING-STAGE) generic function}@c
@genericsubindex{(setf starting-stage)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {starting-stage} (COMPILED-STAGE @t{compiled-stage})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>STARTING-STAGE VARJO<dot>INTERNALS<colon><colon>COMPILED-STAGE method}@c
@methodsubindex{starting-stage}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf starting-stage)} NEW-VALUE (COMPILED-STAGE @t{compiled-stage})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF STARTING-STAGE) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>COMPILED-STAGE method}@c
@methodsubindex{(setf starting-stage)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {stemcells} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>STEMCELLS generic function}@c
@genericsubindex{stemcells}@c
@deffnx {Generic Function} {(setf stemcells)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF STEMCELLS) generic function}@c
@genericsubindex{(setf stemcells)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {stemcells} (COMPILED-FUNCTION-RESULT @t{compiled-function-result})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>STEMCELLS VARJO<dot>INTERNALS<colon><colon>COMPILED-FUNCTION-RESULT method}@c
@methodsubindex{stemcells}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {stemcells} (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>STEMCELLS VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{stemcells}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf stemcells)} NEW-VALUE (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF STEMCELLS) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{(setf stemcells)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {stemcells} (COMPILED @t{compiled})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>STEMCELLS VARJO<dot>INTERNALS<colon><colon>COMPILED method}@c
@methodsubindex{stemcells}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {stemcells-allowed} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>STEMCELLS-ALLOWED generic function}@c
@genericsubindex{stemcells-allowed}@c

When passed an instance of `stage` this function returns a `generalized-boolean`

If this argument is not NIL then the compiler will allow the capture@*
of globally scoped variables from Common Lisp and use of `add-lisp-form-as-uniform`
from within macros.@*

For details on how to support 'global variable capture' please see the documentation
for `with-stemcell-infer-hook` & `with-constant-inject-hook`
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Writer
@ref{go to the VARJO<dot>INTERNALS<colon><colon>(SETF STEMCELLS-ALLOWED) generic function, , @t{(setf stemcells-allowed)}} (generic function)
@item Methods
@deffn {Method} {stemcells-allowed} (STAGE @t{stage})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>STEMCELLS-ALLOWED VARJO<dot>INTERNALS<colon><colon>STAGE method}@c
@methodsubindex{stemcells-allowed}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {(setf stemcells-allowed)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF STEMCELLS-ALLOWED) generic function}@c
@genericsubindex{(setf stemcells-allowed)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Reader
@ref{go to the VARJO<dot>INTERNALS<colon><colon>STEMCELLS-ALLOWED generic function, , @t{stemcells-allowed}} (generic function)
@item Methods
@deffn {Method} {(setf stemcells-allowed)} NEW-VALUE (STAGE @t{stage})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF STEMCELLS-ALLOWED) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>STAGE method}@c
@methodsubindex{(setf stemcells-allowed)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {swizzlable-p} X
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>SWIZZLABLE-P generic function}@c
@genericsubindex{swizzlable-p}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@item Methods
@deffn {Method} {swizzlable-p} (X @t{compiled})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>SWIZZLABLE-P VARJO<dot>INTERNALS<colon><colon>COMPILED method}@c
@methodsubindex{swizzlable-p}@c
@end deffn
@deffn {Method} {swizzlable-p} (X @t{v-type})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>SWIZZLABLE-P VARI<dot>TYPES<colon><colon>V-TYPE method}@c
@methodsubindex{swizzlable-p}@c
@end deffn
@end table
@end deffn
@deffn {Generic Function} {to-arg-form} UNIFORM
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>TO-ARG-FORM generic function}@c
@genericsubindex{to-arg-form}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {to-arg-form} (OUT-VAR @t{output-variable})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>TO-ARG-FORM VARJO<dot>INTERNALS<colon><colon>OUTPUT-VARIABLE method}@c
@methodsubindex{to-arg-form}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/rolling-translate<dot>lisp file, , @t{src/varjo.internals/rolling-translate.lisp}} (file)
@end table
@end deffn
@deffn {Method} {to-arg-form} (IN-VAR @t{input-variable})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>TO-ARG-FORM VARJO<dot>INTERNALS<colon><colon>INPUT-VARIABLE method}@c
@methodsubindex{to-arg-form}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/rolling-translate<dot>lisp file, , @t{src/varjo.internals/rolling-translate.lisp}} (file)
@end table
@end deffn
@deffn {Method} {to-arg-form} (UNIFORM @t{uniform-variable})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>TO-ARG-FORM VARJO<dot>INTERNALS<colon><colon>UNIFORM-VARIABLE method}@c
@methodsubindex{to-arg-form}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/rolling-translate<dot>lisp file, , @t{src/varjo.internals/rolling-translate.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {to-block} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>TO-BLOCK generic function}@c
@genericsubindex{to-block}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {to-block} (COMPILED @t{compiled})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>TO-BLOCK VARJO<dot>INTERNALS<colon><colon>COMPILED method}@c
@methodsubindex{to-block}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {top-level-scoped-metadata} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>TOP-LEVEL-SCOPED-METADATA generic function}@c
@genericsubindex{top-level-scoped-metadata}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {top-level-scoped-metadata} (COMPILED-FUNCTION-RESULT @t{compiled-function-result})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>TOP-LEVEL-SCOPED-METADATA VARJO<dot>INTERNALS<colon><colon>COMPILED-FUNCTION-RESULT method}@c
@methodsubindex{top-level-scoped-metadata}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {translate} STAGE
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>TRANSLATE generic function}@c
@genericsubindex{translate}@c

When called with an instance of `stage` `translate` compiles it, returning
an instance of `compiled-stage`
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/translate<dot>lisp file, , @t{src/varjo.internals/translate.lisp}} (file)
@item Methods
@deffn {Method} {translate} (STAGE @t{stage})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>TRANSLATE VARJO<dot>INTERNALS<colon><colon>STAGE method}@c
@methodsubindex{translate}@c
@end deffn
@end table
@end deffn
@deffn {Generic Function} {type->type-spec} TYPE
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>TYPE->TYPE-SPEC generic function}@c
@genericsubindex{type->type-spec}@c

`type->type-spec` takes a Varjo type object and returns a Vari `type-spec`.

As (during compilation) type objects can carry metadata that may not be
representable in a `type-spec` this conversion can be 'lossy'.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {type->type-spec} (TYPE @t{v-depth-range-parameters})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>TYPE->TYPE-SPEC VARI<dot>GLSL<colon><colon>V-DEPTH-RANGE-PARAMETERS method}@c
@methodsubindex{type->type-spec}@c
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>glsl/built-in-types<dot>lisp file, , @t{src/vari.glsl/built-in-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {type->type-spec} (TYPE @t{v-function-type})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>TYPE->TYPE-SPEC VARI<dot>TYPES<colon><colon>V-FUNCTION-TYPE method}@c
@methodsubindex{type->type-spec}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {type->type-spec} (TYPE @t{return-type-generator})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>TYPE->TYPE-SPEC VARJO<dot>INTERNALS<colon><colon>RETURN-TYPE-GENERATOR method}@c
@methodsubindex{type->type-spec}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {type->type-spec} (TYPE @t{v-any-one-of})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>TYPE->TYPE-SPEC VARI<dot>TYPES<colon><colon>V-ANY-ONE-OF method}@c
@methodsubindex{type->type-spec}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {type->type-spec} (TYPE @t{v-or})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>TYPE->TYPE-SPEC VARI<dot>TYPES<colon><colon>V-OR method}@c
@methodsubindex{type->type-spec}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {type->type-spec} (TYPE @t{v-block-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>TYPE->TYPE-SPEC VARI<dot>TYPES<colon><colon>V-BLOCK-ARRAY method}@c
@methodsubindex{type->type-spec}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {type->type-spec} (TYPE @t{v-block-struct})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>TYPE->TYPE-SPEC VARI<dot>TYPES<colon><colon>V-BLOCK-STRUCT method}@c
@methodsubindex{type->type-spec}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {type->type-spec} (TYPE @t{v-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>TYPE->TYPE-SPEC VARI<dot>TYPES<colon><colon>V-ARRAY method}@c
@methodsubindex{type->type-spec}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {type->type-spec} (TYPE @t{v-type})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>TYPE->TYPE-SPEC VARI<dot>TYPES<colon><colon>V-TYPE method}@c
@methodsubindex{type->type-spec}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/early-types<dot>lisp file, , @t{src/varjo.internals/types/early-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {type-set} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>TYPE-SET generic function}@c
@genericsubindex{type-set}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {type-set} (COMPILED @t{compiled})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>TYPE-SET VARJO<dot>INTERNALS<colon><colon>COMPILED method}@c
@methodsubindex{type-set}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {type-spec->type} SPEC &optional FLOW-ID
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>TYPE-SPEC->TYPE generic function}@c
@genericsubindex{type-spec->type}@c

`type-spec->type` takes a Vari `type-spec` and returns a new instance of
Varjo type object that represents it.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {type-spec->type} SPEC &optional FLOW-ID
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>TYPE-SPEC->TYPE COMMON-LISP<colon><colon>T method}@c
@methodsubindex{type-spec->type}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/early-types<dot>lisp file, , @t{src/varjo.internals/types/early-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {uniform-variables} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>UNIFORM-VARIABLES generic function}@c
@genericsubindex{uniform-variables}@c

When passed an instance of `stage` this function returns a list of
`uniform-variable` objects which respresent the uniform paramaters to
the stage
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Writer
@ref{go to the VARJO<dot>INTERNALS<colon><colon>(SETF UNIFORM-VARIABLES) generic function, , @t{(setf uniform-variables)}} (generic function)
@item Methods
@deffn {Method} {uniform-variables} (STAGE @t{stage})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>UNIFORM-VARIABLES VARJO<dot>INTERNALS<colon><colon>STAGE method}@c
@methodsubindex{uniform-variables}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {(setf uniform-variables)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF UNIFORM-VARIABLES) generic function}@c
@genericsubindex{(setf uniform-variables)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Reader
@ref{go to the VARJO<dot>INTERNALS<colon><colon>UNIFORM-VARIABLES generic function, , @t{uniform-variables}} (generic function)
@item Methods
@deffn {Method} {(setf uniform-variables)} NEW-VALUE (STAGE @t{stage})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF UNIFORM-VARIABLES) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>STAGE method}@c
@methodsubindex{(setf uniform-variables)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {uniforms} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>UNIFORMS generic function}@c
@genericsubindex{uniforms}@c
@deffnx {Generic Function} {(setf uniforms)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF UNIFORMS) generic function}@c
@genericsubindex{(setf uniforms)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {uniforms} (EXTERNAL-FUNCTION @t{external-function})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>UNIFORMS VARJO<dot>INTERNALS<colon><colon>EXTERNAL-FUNCTION method}@c
@methodsubindex{uniforms}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {uniforms} (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>UNIFORMS VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{uniforms}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf uniforms)} NEW-VALUE (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF UNIFORMS) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{(setf uniforms)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {used-external-functions} E
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>USED-EXTERNAL-FUNCTIONS generic function}@c
@genericsubindex{used-external-functions}@c

When passed an instance of `compiled-stage` this function returns a list
of `external-function` objects which were used by the given stage.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Writer
@ref{go to the VARJO<dot>INTERNALS<colon><colon>(SETF USED-EXTERNAL-FUNCTIONS) generic function, , @t{(setf used-external-functions)}} (generic function)
@item Methods
@deffn {Method} {used-external-functions} (E @t{environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>USED-EXTERNAL-FUNCTIONS VARJO<dot>INTERNALS<colon><colon>ENVIRONMENT method}@c
@methodsubindex{used-external-functions}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/environment<dot>lisp file, , @t{src/varjo.internals/environment.lisp}} (file)
@end table
@end deffn
@deffn {Method} {used-external-functions} (COMPILED-STAGE @t{compiled-stage})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>USED-EXTERNAL-FUNCTIONS VARJO<dot>INTERNALS<colon><colon>COMPILED-STAGE method}@c
@methodsubindex{used-external-functions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {used-external-functions} (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>USED-EXTERNAL-FUNCTIONS VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{used-external-functions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {(setf used-external-functions)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF USED-EXTERNAL-FUNCTIONS) generic function}@c
@genericsubindex{(setf used-external-functions)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Reader
@ref{go to the VARJO<dot>INTERNALS<colon><colon>USED-EXTERNAL-FUNCTIONS generic function, , @t{used-external-functions}} (generic function)
@item Methods
@deffn {Method} {(setf used-external-functions)} NEW-VALUE (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF USED-EXTERNAL-FUNCTIONS) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{(setf used-external-functions)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {used-types} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>USED-TYPES generic function}@c
@genericsubindex{used-types}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {used-types} (COMPILED-FUNCTION-RESULT @t{compiled-function-result})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>USED-TYPES VARJO<dot>INTERNALS<colon><colon>COMPILED-FUNCTION-RESULT method}@c
@methodsubindex{used-types}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {used-types} (COMPILED @t{compiled})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>USED-TYPES VARJO<dot>INTERNALS<colon><colon>COMPILED method}@c
@methodsubindex{used-types}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {used-user-structs} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>USED-USER-STRUCTS generic function}@c
@genericsubindex{used-user-structs}@c
@deffnx {Generic Function} {(setf used-user-structs)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF USED-USER-STRUCTS) generic function}@c
@genericsubindex{(setf used-user-structs)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {used-user-structs} (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>USED-USER-STRUCTS VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{used-user-structs}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf used-user-structs)} NEW-VALUE (POST-COMPILE-PROCESS @t{post-compile-process})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF USED-USER-STRUCTS) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>POST-COMPILE-PROCESS method}@c
@methodsubindex{(setf used-user-structs)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {v-allowed-outer-vars} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-ALLOWED-OUTER-VARS generic function}@c
@genericsubindex{v-allowed-outer-vars}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {v-allowed-outer-vars} (ENVIRONMENT @t{environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-ALLOWED-OUTER-VARS VARJO<dot>INTERNALS<colon><colon>ENVIRONMENT method}@c
@methodsubindex{v-allowed-outer-vars}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {v-argument-spec} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-ARGUMENT-SPEC generic function}@c
@genericsubindex{v-argument-spec}@c
@deffnx {Generic Function} {(setf v-argument-spec)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF V-ARGUMENT-SPEC) generic function}@c
@genericsubindex{(setf v-argument-spec)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {v-argument-spec} (FUNC @t{external-function})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-ARGUMENT-SPEC VARJO<dot>INTERNALS<colon><colon>EXTERNAL-FUNCTION method}@c
@methodsubindex{v-argument-spec}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/external-functions<dot>lisp file, , @t{src/varjo.internals/external-functions.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-argument-spec} (V-FUNCTION-TYPE @t{v-function-type})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-ARGUMENT-SPEC VARI<dot>TYPES<colon><colon>V-FUNCTION-TYPE method}@c
@methodsubindex{v-argument-spec}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf v-argument-spec)} NEW-VALUE (V-FUNCTION-TYPE @t{v-function-type})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF V-ARGUMENT-SPEC) COMMON-LISP<colon><colon>T VARI<dot>TYPES<colon><colon>V-FUNCTION-TYPE method}@c
@methodsubindex{(setf v-argument-spec)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-argument-spec} (V-FUNCTION @t{v-function})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-ARGUMENT-SPEC VARJO<dot>INTERNALS<colon><colon>V-FUNCTION method}@c
@methodsubindex{v-argument-spec}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf v-argument-spec)} NEW-VALUE (V-FUNCTION @t{v-function})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF V-ARGUMENT-SPEC) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>V-FUNCTION method}@c
@methodsubindex{(setf v-argument-spec)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-argument-spec} (V-COMPILER-MACRO @t{v-compiler-macro})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-ARGUMENT-SPEC VARJO<dot>INTERNALS<colon><colon>V-COMPILER-MACRO method}@c
@methodsubindex{v-argument-spec}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf v-argument-spec)} NEW-VALUE (V-COMPILER-MACRO @t{v-compiler-macro})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF V-ARGUMENT-SPEC) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>V-COMPILER-MACRO method}@c
@methodsubindex{(setf v-argument-spec)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {v-array-type-of} ELEMENT-TYPE DIMENSIONS FLOW-ID
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-ARRAY-TYPE-OF generic function}@c
@genericsubindex{v-array-type-of}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {v-array-type-of} (ELEMENT-TYPE @t{v-type}) DIMENSIONS FLOW-ID
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-ARRAY-TYPE-OF VARI<dot>TYPES<colon><colon>V-TYPE COMMON-LISP<colon><colon>T COMMON-LISP<colon><colon>T method}@c
@methodsubindex{v-array-type-of}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {v-casts-to} FROM-TYPE TO-TYPE
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-CASTS-TO generic function}@c
@genericsubindex{v-casts-to}@c

The poorly names `v-casts-to` takes 2 Varjo type objects and attempts to cast
one to the other. If successful it returns the new type object and otherwise
returns NIL.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {v-casts-to} (FROM-TYPE @t{v-type}) (TO-TYPE @t{v-type})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-CASTS-TO VARI<dot>TYPES<colon><colon>V-TYPE VARI<dot>TYPES<colon><colon>V-TYPE method}@c
@methodsubindex{v-casts-to}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-casts-to} (FROM-TYPE @t{v-stemcell}) (TO-TYPE @t{v-type})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-CASTS-TO VARI<dot>TYPES<colon><colon>V-STEMCELL VARI<dot>TYPES<colon><colon>V-TYPE method}@c
@methodsubindex{v-casts-to}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-casts-to} (FROM-TYPE @t{v-any-one-of}) (TO-TYPE @t{v-function-type})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-CASTS-TO VARI<dot>TYPES<colon><colon>V-ANY-ONE-OF VARI<dot>TYPES<colon><colon>V-FUNCTION-TYPE method}@c
@methodsubindex{v-casts-to}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-casts-to} (FROM-TYPE @t{v-function-type}) (TO-TYPE @t{v-function-type})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-CASTS-TO VARI<dot>TYPES<colon><colon>V-FUNCTION-TYPE VARI<dot>TYPES<colon><colon>V-FUNCTION-TYPE method}@c
@methodsubindex{v-casts-to}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {v-casts-to-p} FROM-TYPE TO-TYPE
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-CASTS-TO-P generic function}@c
@genericsubindex{v-casts-to-p}@c

`v-casts-to-p` returns T if the first Varjo type object could be cast to the second
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {v-casts-to-p} FROM-TYPE TO-TYPE
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-CASTS-TO-P COMMON-LISP<colon><colon>T COMMON-LISP<colon><colon>T method}@c
@methodsubindex{v-casts-to-p}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {v-code} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-CODE generic function}@c
@genericsubindex{v-code}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {v-code} (V-USER-FUNCTION @t{v-user-function})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-CODE VARI<dot>TYPES<colon><colon>V-USER-FUNCTION method}@c
@methodsubindex{v-code}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {v-context} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-CONTEXT generic function}@c
@genericsubindex{v-context}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {v-context} (V-COMPILER-MACRO @t{v-compiler-macro})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-CONTEXT VARJO<dot>INTERNALS<colon><colon>V-COMPILER-MACRO method}@c
@methodsubindex{v-context}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-context} (V-REGULAR-MACRO @t{v-regular-macro})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-CONTEXT VARJO<dot>INTERNALS<colon><colon>V-REGULAR-MACRO method}@c
@methodsubindex{v-context}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-context} (BASE-ENVIRONMENT @t{base-environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-CONTEXT VARJO<dot>INTERNALS<colon><colon>BASE-ENVIRONMENT method}@c
@methodsubindex{v-context}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-context} (ENVIRONMENT @t{environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-CONTEXT VARJO<dot>INTERNALS<colon><colon>ENVIRONMENT method}@c
@methodsubindex{v-context}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {v-dimensions} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS generic function}@c
@genericsubindex{v-dimensions}@c

`v-dimensions` given an instance of the `v-array` type object this returns the
list of it's dimensions.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Writer
@ref{go to the VARJO<dot>INTERNALS<colon><colon>(SETF V-DIMENSIONS) generic function, , @t{(setf v-dimensions)}} (generic function)
@item Methods
@deffn {Method} {v-dimensions} (V-DVEC4 @t{v-dvec4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-DVEC4 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-DVEC3 @t{v-dvec3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-DVEC3 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-DVEC2 @t{v-dvec2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-DVEC2 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-IVEC4 @t{v-ivec4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-IVEC4 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-IVEC3 @t{v-ivec3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-IVEC3 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-IVEC2 @t{v-ivec2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-IVEC2 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-UVEC4 @t{v-uvec4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-UVEC4 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-UVEC3 @t{v-uvec3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-UVEC3 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-UVEC2 @t{v-uvec2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-UVEC2 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-BVEC4 @t{v-bvec4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-BVEC4 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-BVEC3 @t{v-bvec3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-BVEC3 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-BVEC2 @t{v-bvec2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-BVEC2 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-VEC4 @t{v-vec4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-VEC4 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-VEC3 @t{v-vec3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-VEC3 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-VEC2 @t{v-vec2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-VEC2 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-DMAT4X4 @t{v-dmat4x4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-DMAT4X4 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-DMAT4X3 @t{v-dmat4x3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-DMAT4X3 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-DMAT4X2 @t{v-dmat4x2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-DMAT4X2 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-DMAT3X4 @t{v-dmat3x4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-DMAT3X4 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-DMAT3X3 @t{v-dmat3x3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-DMAT3X3 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-DMAT3X2 @t{v-dmat3x2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-DMAT3X2 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-DMAT2X4 @t{v-dmat2x4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-DMAT2X4 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-DMAT2X3 @t{v-dmat2x3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-DMAT2X3 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-DMAT2X2 @t{v-dmat2x2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-DMAT2X2 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-DMAT4 @t{v-dmat4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-DMAT4 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-DMAT3 @t{v-dmat3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-DMAT3 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-DMAT2 @t{v-dmat2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-DMAT2 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-MAT4X4 @t{v-mat4x4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-MAT4X4 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-MAT4X3 @t{v-mat4x3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-MAT4X3 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-MAT4X2 @t{v-mat4x2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-MAT4X2 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-MAT3X4 @t{v-mat3x4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-MAT3X4 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-MAT3X3 @t{v-mat3x3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-MAT3X3 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-MAT3X2 @t{v-mat3x2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-MAT3X2 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-MAT2X4 @t{v-mat2x4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-MAT2X4 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-MAT2X3 @t{v-mat2x3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-MAT2X3 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-MAT2X2 @t{v-mat2x2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-MAT2X2 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-MAT4 @t{v-mat4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-MAT4 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-MAT3 @t{v-mat3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-MAT3 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-MAT2 @t{v-mat2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-MAT2 method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (OBJECT @t{v-stemcell})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-STEMCELL method}@c
@methodsubindex{v-dimensions}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/stemcells<dot>lisp file, , @t{src/varjo.internals/stemcells.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-BLOCK-ARRAY @t{v-block-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-BLOCK-ARRAY method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-ARRAY @t{v-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-ARRAY method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS COMMON-LISP<colon><colon>T method}@c
@methodsubindex{v-dimensions}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-dimensions} (V-CONTAINER @t{v-container})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS VARI<dot>TYPES<colon><colon>V-CONTAINER method}@c
@methodsubindex{v-dimensions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {(setf v-dimensions)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF V-DIMENSIONS) generic function}@c
@genericsubindex{(setf v-dimensions)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Reader
@ref{go to the VARJO<dot>INTERNALS<colon><colon>V-DIMENSIONS generic function, , @t{v-dimensions}} (generic function)
@item Methods
@deffn {Method} {(setf v-dimensions)} NEW-VALUE (V-BLOCK-ARRAY @t{v-block-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF V-DIMENSIONS) COMMON-LISP<colon><colon>T VARI<dot>TYPES<colon><colon>V-BLOCK-ARRAY method}@c
@methodsubindex{(setf v-dimensions)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf v-dimensions)} NEW-VALUE (V-ARRAY @t{v-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF V-DIMENSIONS) COMMON-LISP<colon><colon>T VARI<dot>TYPES<colon><colon>V-ARRAY method}@c
@methodsubindex{(setf v-dimensions)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf v-dimensions)} NEW-VALUE (V-CONTAINER @t{v-container})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF V-DIMENSIONS) COMMON-LISP<colon><colon>T VARI<dot>TYPES<colon><colon>V-CONTAINER method}@c
@methodsubindex{(setf v-dimensions)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {v-doc-string} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DOC-STRING generic function}@c
@genericsubindex{v-doc-string}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {v-doc-string} (EXTERNAL-FUNCTION @t{external-function})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-DOC-STRING VARJO<dot>INTERNALS<colon><colon>EXTERNAL-FUNCTION method}@c
@methodsubindex{v-doc-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {v-element-type} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-ELEMENT-TYPE generic function}@c
@genericsubindex{v-element-type}@c

`v-element-type` given an instance of the `v-container` type object this returns the
type object of it elements.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {v-element-type} (OBJECT @t{v-block-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-ELEMENT-TYPE VARI<dot>TYPES<colon><colon>V-BLOCK-ARRAY method}@c
@methodsubindex{v-element-type}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-element-type} (OBJECT @t{v-block-struct})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-ELEMENT-TYPE VARI<dot>TYPES<colon><colon>V-BLOCK-STRUCT method}@c
@methodsubindex{v-element-type}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-element-type} (OBJECT @t{v-container})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-ELEMENT-TYPE VARI<dot>TYPES<colon><colon>V-CONTAINER method}@c
@methodsubindex{v-element-type}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-element-type} (OBJECT @t{v-sampler})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-ELEMENT-TYPE VARI<dot>TYPES<colon><colon>V-SAMPLER method}@c
@methodsubindex{v-element-type}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {v-function-scope} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-FUNCTION-SCOPE generic function}@c
@genericsubindex{v-function-scope}@c
@deffnx {Generic Function} {(setf v-function-scope)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF V-FUNCTION-SCOPE) generic function}@c
@genericsubindex{(setf v-function-scope)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {v-function-scope} (V-COMPILER-MACRO @t{v-compiler-macro})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-FUNCTION-SCOPE VARJO<dot>INTERNALS<colon><colon>V-COMPILER-MACRO method}@c
@methodsubindex{v-function-scope}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf v-function-scope)} NEW-VALUE (V-COMPILER-MACRO @t{v-compiler-macro})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF V-FUNCTION-SCOPE) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>V-COMPILER-MACRO method}@c
@methodsubindex{(setf v-function-scope)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-function-scope} (V-REGULAR-MACRO @t{v-regular-macro})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-FUNCTION-SCOPE VARJO<dot>INTERNALS<colon><colon>V-REGULAR-MACRO method}@c
@methodsubindex{v-function-scope}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf v-function-scope)} NEW-VALUE (V-REGULAR-MACRO @t{v-regular-macro})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF V-FUNCTION-SCOPE) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>V-REGULAR-MACRO method}@c
@methodsubindex{(setf v-function-scope)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-function-scope} (V-SYMBOL-MACRO @t{v-symbol-macro})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-FUNCTION-SCOPE VARJO<dot>INTERNALS<colon><colon>V-SYMBOL-MACRO method}@c
@methodsubindex{v-function-scope}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf v-function-scope)} NEW-VALUE (V-SYMBOL-MACRO @t{v-symbol-macro})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF V-FUNCTION-SCOPE) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>V-SYMBOL-MACRO method}@c
@methodsubindex{(setf v-function-scope)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-function-scope} (V-VALUE @t{v-value})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-FUNCTION-SCOPE VARJO<dot>INTERNALS<colon><colon>V-VALUE method}@c
@methodsubindex{v-function-scope}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf v-function-scope)} NEW-VALUE (V-VALUE @t{v-value})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF V-FUNCTION-SCOPE) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>V-VALUE method}@c
@methodsubindex{(setf v-function-scope)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-function-scope} (ENVIRONMENT @t{environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-FUNCTION-SCOPE VARJO<dot>INTERNALS<colon><colon>ENVIRONMENT method}@c
@methodsubindex{v-function-scope}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {v-global-form-bindings} ()
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLOBAL-FORM-BINDINGS generic function}@c
@genericsubindex{v-global-form-bindings}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/environment<dot>lisp file, , @t{src/varjo.internals/environment.lisp}} (file)
@item Methods
@deffn {Method} {v-global-form-bindings} ()
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLOBAL-FORM-BINDINGS method}@c
@methodsubindex{v-global-form-bindings}@c
@end deffn
@end table
@end deffn
@deffn {Generic Function} {v-glsl-size} TYPE
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-SIZE generic function}@c
@genericsubindex{v-glsl-size}@c

Given a Varjo type object this function will return it's 'glsl size'. By this
we mean the number of 'positions' the value would take up (for example when
being passed into a `vertex-stage`)
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {v-glsl-size} (TYPE @t{v-user-struct})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-SIZE VARI<dot>TYPES<colon><colon>V-USER-STRUCT method}@c
@methodsubindex{v-glsl-size}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/structs<dot>lisp file, , @t{src/varjo.internals/structs.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-size} (TYPE @t{v-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-SIZE VARI<dot>TYPES<colon><colon>V-ARRAY method}@c
@methodsubindex{v-glsl-size}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-size} (V-TYPE @t{v-type})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-SIZE VARI<dot>TYPES<colon><colon>V-TYPE method}@c
@methodsubindex{v-glsl-size}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/early-types<dot>lisp file, , @t{src/varjo.internals/types/early-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {v-glsl-string} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING generic function}@c
@genericsubindex{v-glsl-string}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {v-glsl-string} (V-DEPTH-RANGE-PARAMETERS @t{v-depth-range-parameters})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>GLSL<colon><colon>V-DEPTH-RANGE-PARAMETERS method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>glsl/built-in-types<dot>lisp file, , @t{src/vari.glsl/built-in-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-UIMAGE-2D-MS-ARRAY @t{v-uimage-2d-ms-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-UIMAGE-2D-MS-ARRAY method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-IIMAGE-2D-MS-ARRAY @t{v-iimage-2d-ms-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-IIMAGE-2D-MS-ARRAY method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-IMAGE-2D-MS-ARRAY @t{v-image-2d-ms-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-IMAGE-2D-MS-ARRAY method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-UIMAGE-2D-MS @t{v-uimage-2d-ms})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-UIMAGE-2D-MS method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-IIMAGE-2D-MS @t{v-iimage-2d-ms})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-IIMAGE-2D-MS method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-IMAGE-2D-MS @t{v-image-2d-ms})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-IMAGE-2D-MS method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-UIMAGE-CUBE-ARRAY @t{v-uimage-cube-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-UIMAGE-CUBE-ARRAY method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-IIMAGE-CUBE-ARRAY @t{v-iimage-cube-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-IIMAGE-CUBE-ARRAY method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-IMAGE-CUBE-ARRAY @t{v-image-cube-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-IMAGE-CUBE-ARRAY method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-UIMAGE-2D-ARRAY @t{v-uimage-2d-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-UIMAGE-2D-ARRAY method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-IIMAGE-2D-ARRAY @t{v-iimage-2d-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-IIMAGE-2D-ARRAY method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-IMAGE-2D-ARRAY @t{v-image-2d-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-IMAGE-2D-ARRAY method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-UIMAGE-1D-ARRAY @t{v-uimage-1d-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-UIMAGE-1D-ARRAY method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-IIMAGE-1D-ARRAY @t{v-iimage-1d-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-IIMAGE-1D-ARRAY method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-IMAGE-1D-ARRAY @t{v-image-1d-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-IMAGE-1D-ARRAY method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-UIMAGE-BUFFER @t{v-uimage-buffer})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-UIMAGE-BUFFER method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-IIMAGE-BUFFER @t{v-iimage-buffer})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-IIMAGE-BUFFER method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-IMAGE-BUFFER @t{v-image-buffer})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-IMAGE-BUFFER method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-UIMAGE-CUBE @t{v-uimage-cube})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-UIMAGE-CUBE method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-IIMAGE-CUBE @t{v-iimage-cube})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-IIMAGE-CUBE method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-IMAGE-CUBE @t{v-image-cube})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-IMAGE-CUBE method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-UIMAGE-2D-RECT @t{v-uimage-2d-rect})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-UIMAGE-2D-RECT method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-IIMAGE-2D-RECT @t{v-iimage-2d-rect})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-IIMAGE-2D-RECT method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-IMAGE-2D-RECT @t{v-image-2d-rect})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-IMAGE-2D-RECT method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-UIMAGE-RECT @t{v-uimage-rect})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-UIMAGE-RECT method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-IIMAGE-RECT @t{v-iimage-rect})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-IIMAGE-RECT method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-IMAGE-RECT @t{v-image-rect})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-IMAGE-RECT method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-UIMAGE-3D @t{v-uimage-3d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-UIMAGE-3D method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-IIMAGE-3D @t{v-iimage-3d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-IIMAGE-3D method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-IMAGE-3D @t{v-image-3d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-IMAGE-3D method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-UIMAGE-2D @t{v-uimage-2d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-UIMAGE-2D method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-IIMAGE-2D @t{v-iimage-2d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-IIMAGE-2D method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-IMAGE-2D @t{v-image-2d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-IMAGE-2D method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-UIMAGE-1D @t{v-uimage-1d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-UIMAGE-1D method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-IIMAGE-1D @t{v-iimage-1d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-IIMAGE-1D method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-IMAGE-1D @t{v-image-1d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-IMAGE-1D method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-ATOMIC-UINT @t{v-atomic-uint})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-ATOMIC-UINT method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-USAMPLER-RECT @t{v-usampler-rect})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-USAMPLER-RECT method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-ISAMPLER-RECT @t{v-isampler-rect})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-ISAMPLER-RECT method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-SAMPLER-RECT @t{v-sampler-rect})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-SAMPLER-RECT method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-USAMPLER-CUBE-ARRAY @t{v-usampler-cube-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-USAMPLER-CUBE-ARRAY method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-USAMPLER-CUBE @t{v-usampler-cube})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-USAMPLER-CUBE method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-USAMPLER-BUFFER @t{v-usampler-buffer})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-USAMPLER-BUFFER method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-USAMPLER-3D @t{v-usampler-3d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-USAMPLER-3D method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-USAMPLER-2D-RECT @t{v-usampler-2d-rect})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-USAMPLER-2D-RECT method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-USAMPLER-2D-MS-ARRAY @t{v-usampler-2d-ms-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-USAMPLER-2D-MS-ARRAY method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-USAMPLER-2D-MS @t{v-usampler-2d-ms})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-USAMPLER-2D-MS method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-USAMPLER-2D-ARRAY @t{v-usampler-2d-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-USAMPLER-2D-ARRAY method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-USAMPLER-2D @t{v-usampler-2d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-USAMPLER-2D method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-USAMPLER-1D-ARRAY @t{v-usampler-1d-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-USAMPLER-1D-ARRAY method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-USAMPLER-1D @t{v-usampler-1d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-USAMPLER-1D method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-SAMPLER-CUBE-SHADOW @t{v-sampler-cube-shadow})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-SAMPLER-CUBE-SHADOW method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-SAMPLER-CUBE-ARRAY @t{v-sampler-cube-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-SAMPLER-CUBE-ARRAY method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-SAMPLER-CUBE @t{v-sampler-cube})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-SAMPLER-CUBE method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-SAMPLER-BUFFER @t{v-sampler-buffer})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-SAMPLER-BUFFER method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-SAMPLER-3D @t{v-sampler-3d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-SAMPLER-3D method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-SAMPLER-2D-SHADOW @t{v-sampler-2d-shadow})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-SAMPLER-2D-SHADOW method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-SAMPLER-2D-RECT @t{v-sampler-2d-rect})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-SAMPLER-2D-RECT method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-SAMPLER-2D-MS-ARRAY @t{v-sampler-2d-ms-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-SAMPLER-2D-MS-ARRAY method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-SAMPLER-2D-MS @t{v-sampler-2d-ms})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-SAMPLER-2D-MS method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-SAMPLER-2D-ARRAY @t{v-sampler-2d-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-SAMPLER-2D-ARRAY method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-SAMPLER-2D @t{v-sampler-2d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-SAMPLER-2D method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-SAMPLER-1D-SHADOW @t{v-sampler-1d-shadow})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-SAMPLER-1D-SHADOW method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-SAMPLER-1D-ARRAY @t{v-sampler-1d-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-SAMPLER-1D-ARRAY method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-SAMPLER-1D @t{v-sampler-1d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-SAMPLER-1D method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-ISAMPLER-CUBE-ARRAY @t{v-isampler-cube-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-ISAMPLER-CUBE-ARRAY method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-ISAMPLER-CUBE @t{v-isampler-cube})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-ISAMPLER-CUBE method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-ISAMPLER-BUFFER @t{v-isampler-buffer})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-ISAMPLER-BUFFER method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-ISAMPLER-3D @t{v-isampler-3d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-ISAMPLER-3D method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-ISAMPLER-2D-RECT @t{v-isampler-2d-rect})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-ISAMPLER-2D-RECT method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-ISAMPLER-2D-MS-ARRAY @t{v-isampler-2d-ms-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-ISAMPLER-2D-MS-ARRAY method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-ISAMPLER-2D-MS @t{v-isampler-2d-ms})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-ISAMPLER-2D-MS method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-ISAMPLER-2D-ARRAY @t{v-isampler-2d-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-ISAMPLER-2D-ARRAY method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-ISAMPLER-2D @t{v-isampler-2d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-ISAMPLER-2D method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-ISAMPLER-1D-ARRAY @t{v-isampler-1d-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-ISAMPLER-1D-ARRAY method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-ISAMPLER-1D @t{v-isampler-1d})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-ISAMPLER-1D method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-DVEC4 @t{v-dvec4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-DVEC4 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-DVEC3 @t{v-dvec3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-DVEC3 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-DVEC2 @t{v-dvec2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-DVEC2 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-IVEC4 @t{v-ivec4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-IVEC4 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-IVEC3 @t{v-ivec3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-IVEC3 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-IVEC2 @t{v-ivec2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-IVEC2 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-UVEC4 @t{v-uvec4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-UVEC4 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-UVEC3 @t{v-uvec3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-UVEC3 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-UVEC2 @t{v-uvec2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-UVEC2 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-BVEC4 @t{v-bvec4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-BVEC4 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-BVEC3 @t{v-bvec3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-BVEC3 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-BVEC2 @t{v-bvec2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-BVEC2 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-VEC4 @t{v-vec4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-VEC4 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-VEC3 @t{v-vec3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-VEC3 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-VEC2 @t{v-vec2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-VEC2 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-DMAT4X4 @t{v-dmat4x4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-DMAT4X4 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-DMAT4X3 @t{v-dmat4x3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-DMAT4X3 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-DMAT4X2 @t{v-dmat4x2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-DMAT4X2 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-DMAT3X4 @t{v-dmat3x4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-DMAT3X4 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-DMAT3X3 @t{v-dmat3x3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-DMAT3X3 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-DMAT3X2 @t{v-dmat3x2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-DMAT3X2 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-DMAT2X4 @t{v-dmat2x4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-DMAT2X4 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-DMAT2X3 @t{v-dmat2x3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-DMAT2X3 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-DMAT2X2 @t{v-dmat2x2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-DMAT2X2 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-DMAT4 @t{v-dmat4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-DMAT4 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-DMAT3 @t{v-dmat3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-DMAT3 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-DMAT2 @t{v-dmat2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-DMAT2 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-MAT4X4 @t{v-mat4x4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-MAT4X4 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-MAT4X3 @t{v-mat4x3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-MAT4X3 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-MAT4X2 @t{v-mat4x2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-MAT4X2 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-MAT3X4 @t{v-mat3x4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-MAT3X4 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-MAT3X3 @t{v-mat3x3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-MAT3X3 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-MAT3X2 @t{v-mat3x2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-MAT3X2 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-MAT2X4 @t{v-mat2x4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-MAT2X4 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-MAT2X3 @t{v-mat2x3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-MAT2X3 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-MAT2X2 @t{v-mat2x2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-MAT2X2 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-MAT4 @t{v-mat4})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-MAT4 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-MAT3 @t{v-mat3})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-MAT3 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-MAT2 @t{v-mat2})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-MAT2 method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-DOUBLE @t{v-double})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-DOUBLE method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-SHORT-FLOAT @t{v-short-float})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-SHORT-FLOAT method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-FLOAT @t{v-float})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-FLOAT method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-UINT @t{v-uint})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-UINT method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-INT @t{v-int})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-INT method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-BOOL @t{v-bool})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-BOOL method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>types/types<dot>lisp file, , @t{src/vari.types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-STRUCT @t{v-struct})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-STRUCT method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (OBJECT @t{v-block-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-BLOCK-ARRAY method}@c
@methodsubindex{v-glsl-string}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (OBJECT @t{v-block-struct})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-BLOCK-STRUCT method}@c
@methodsubindex{v-glsl-string}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (OBJECT @t{v-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-ARRAY method}@c
@methodsubindex{v-glsl-string}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-DISCARDED @t{v-discarded})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-DISCARDED method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-VOID @t{v-void})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-VOID method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-TYPE @t{v-type})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARI<dot>TYPES<colon><colon>V-TYPE method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/early-types<dot>lisp file, , @t{src/varjo.internals/types/early-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-glsl-string} (V-FUNCTION @t{v-function})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-GLSL-STRING VARJO<dot>INTERNALS<colon><colon>V-FUNCTION method}@c
@methodsubindex{v-glsl-string}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {v-macro-function} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-MACRO-FUNCTION generic function}@c
@genericsubindex{v-macro-function}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {v-macro-function} (V-COMPILER-MACRO @t{v-compiler-macro})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-MACRO-FUNCTION VARJO<dot>INTERNALS<colon><colon>V-COMPILER-MACRO method}@c
@methodsubindex{v-macro-function}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-macro-function} (V-REGULAR-MACRO @t{v-regular-macro})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-MACRO-FUNCTION VARJO<dot>INTERNALS<colon><colon>V-REGULAR-MACRO method}@c
@methodsubindex{v-macro-function}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {v-make-value} TYPE ENV &key GLSL-NAME FUNCTION-SCOPE READ-ONLY
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-MAKE-VALUE generic function}@c
@genericsubindex{v-make-value}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {v-make-value} (TYPE @t{v-type}) ENV &key GLSL-NAME FUNCTION-SCOPE READ-ONLY
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-MAKE-VALUE VARI<dot>TYPES<colon><colon>V-TYPE COMMON-LISP<colon><colon>T method}@c
@methodsubindex{v-make-value}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/variables<dot>lisp file, , @t{src/varjo.internals/variables.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {v-multi-val-base} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-MULTI-VAL-BASE generic function}@c
@genericsubindex{v-multi-val-base}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {v-multi-val-base} (ENVIRONMENT @t{environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-MULTI-VAL-BASE VARJO<dot>INTERNALS<colon><colon>ENVIRONMENT method}@c
@methodsubindex{v-multi-val-base}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {v-multi-val-safe} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-MULTI-VAL-SAFE generic function}@c
@genericsubindex{v-multi-val-safe}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {v-multi-val-safe} (ENVIRONMENT @t{environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-MULTI-VAL-SAFE VARJO<dot>INTERNALS<colon><colon>ENVIRONMENT method}@c
@methodsubindex{v-multi-val-safe}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {v-parent-env} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-PARENT-ENV generic function}@c
@genericsubindex{v-parent-env}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {v-parent-env} (ENVIRONMENT @t{environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-PARENT-ENV VARJO<dot>INTERNALS<colon><colon>ENVIRONMENT method}@c
@methodsubindex{v-parent-env}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {v-place-index} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-PLACE-INDEX generic function}@c
@genericsubindex{v-place-index}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {v-place-index} (V-FUNCTION @t{v-function})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-PLACE-INDEX VARJO<dot>INTERNALS<colon><colon>V-FUNCTION method}@c
@methodsubindex{v-place-index}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {v-primary-type-eq} A B
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-PRIMARY-TYPE-EQ generic function}@c
@genericsubindex{v-primary-type-eq}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {v-primary-type-eq} (A @t{compiled}) (B @t{v-type})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-PRIMARY-TYPE-EQ VARJO<dot>INTERNALS<colon><colon>COMPILED VARI<dot>TYPES<colon><colon>V-TYPE method}@c
@methodsubindex{v-primary-type-eq}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/code-object<dot>lisp file, , @t{src/varjo.internals/code-object.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-primary-type-eq} (A @t{compiled}) (B @t{compiled})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-PRIMARY-TYPE-EQ VARJO<dot>INTERNALS<colon><colon>COMPILED VARJO<dot>INTERNALS<colon><colon>COMPILED method}@c
@methodsubindex{v-primary-type-eq}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/code-object<dot>lisp file, , @t{src/varjo.internals/code-object.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {v-read-only} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-READ-ONLY generic function}@c
@genericsubindex{v-read-only}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {v-read-only} (V-VALUE @t{v-value})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-READ-ONLY VARJO<dot>INTERNALS<colon><colon>V-VALUE method}@c
@methodsubindex{v-read-only}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {v-return-spec} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-RETURN-SPEC generic function}@c
@genericsubindex{v-return-spec}@c
@deffnx {Generic Function} {(setf v-return-spec)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF V-RETURN-SPEC) generic function}@c
@genericsubindex{(setf v-return-spec)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {v-return-spec} (V-FUNCTION-TYPE @t{v-function-type})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-RETURN-SPEC VARI<dot>TYPES<colon><colon>V-FUNCTION-TYPE method}@c
@methodsubindex{v-return-spec}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf v-return-spec)} NEW-VALUE (V-FUNCTION-TYPE @t{v-function-type})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF V-RETURN-SPEC) COMMON-LISP<colon><colon>T VARI<dot>TYPES<colon><colon>V-FUNCTION-TYPE method}@c
@methodsubindex{(setf v-return-spec)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-return-spec} (V-FUNCTION @t{v-function})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-RETURN-SPEC VARJO<dot>INTERNALS<colon><colon>V-FUNCTION method}@c
@methodsubindex{v-return-spec}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf v-return-spec)} NEW-VALUE (V-FUNCTION @t{v-function})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF V-RETURN-SPEC) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>V-FUNCTION method}@c
@methodsubindex{(setf v-return-spec)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {v-slots} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-SLOTS generic function}@c
@genericsubindex{v-slots}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {v-slots} (V-DEPTH-RANGE-PARAMETERS @t{v-depth-range-parameters})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-SLOTS VARI<dot>GLSL<colon><colon>V-DEPTH-RANGE-PARAMETERS method}@c
@methodsubindex{v-slots}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/vari<dot>glsl/built-in-types<dot>lisp file, , @t{src/vari.glsl/built-in-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-slots} (V-STRUCT @t{v-struct})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-SLOTS VARI<dot>TYPES<colon><colon>V-STRUCT method}@c
@methodsubindex{v-slots}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {v-special-functionp} FUNC
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-SPECIAL-FUNCTIONP generic function}@c
@genericsubindex{v-special-functionp}@c

`v-special-functionp` returns T if the Varjo function object provided is a
special form.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {v-special-functionp} (FUNC @t{v-function})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-SPECIAL-FUNCTIONP VARJO<dot>INTERNALS<colon><colon>V-FUNCTION method}@c
@methodsubindex{v-special-functionp}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/functions<dot>lisp file, , @t{src/varjo.internals/functions.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-special-functionp} (FUNC @t{external-function})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-SPECIAL-FUNCTIONP VARJO<dot>INTERNALS<colon><colon>EXTERNAL-FUNCTION method}@c
@methodsubindex{v-special-functionp}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/external-functions<dot>lisp file, , @t{src/varjo.internals/external-functions.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-special-functionp} (V-FUNCTION-SET @t{v-function-set})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-SPECIAL-FUNCTIONP VARJO<dot>INTERNALS<colon><colon>V-FUNCTION-SET method}@c
@methodsubindex{v-special-functionp}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/function-obj<dot>lisp file, , @t{src/varjo.internals/function-obj.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {v-symbol-bindings} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-SYMBOL-BINDINGS generic function}@c
@genericsubindex{v-symbol-bindings}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {v-symbol-bindings} (ENVIRONMENT @t{environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-SYMBOL-BINDINGS VARJO<dot>INTERNALS<colon><colon>ENVIRONMENT method}@c
@methodsubindex{v-symbol-bindings}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {v-type-eq} A B
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-TYPE-EQ generic function}@c
@genericsubindex{v-type-eq}@c

`v-type-eq` returns T if the Varjo type object provided represents the given
Vari type.@*

The second argument can be a Varjo type object or a Vari `type-spec`
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {v-type-eq} (A @t{v-function-type}) (B @t{v-function-type})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-TYPE-EQ VARI<dot>TYPES<colon><colon>V-FUNCTION-TYPE VARI<dot>TYPES<colon><colon>V-FUNCTION-TYPE method}@c
@methodsubindex{v-type-eq}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-type-eq} (A @t{v-type}) (B @t{list})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-TYPE-EQ VARI<dot>TYPES<colon><colon>V-TYPE COMMON-LISP<colon><colon>LIST method}@c
@methodsubindex{v-type-eq}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-type-eq} (A @t{v-type}) (B @t{symbol})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-TYPE-EQ VARI<dot>TYPES<colon><colon>V-TYPE COMMON-LISP<colon><colon>SYMBOL method}@c
@methodsubindex{v-type-eq}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-type-eq} (A @t{v-block-struct}) (B @t{v-block-struct})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-TYPE-EQ VARI<dot>TYPES<colon><colon>V-BLOCK-STRUCT VARI<dot>TYPES<colon><colon>V-BLOCK-STRUCT method}@c
@methodsubindex{v-type-eq}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-type-eq} (A @t{v-block-array}) (B @t{v-block-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-TYPE-EQ VARI<dot>TYPES<colon><colon>V-BLOCK-ARRAY VARI<dot>TYPES<colon><colon>V-BLOCK-ARRAY method}@c
@methodsubindex{v-type-eq}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-type-eq} (A @t{v-array}) (B @t{v-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-TYPE-EQ VARI<dot>TYPES<colon><colon>V-ARRAY VARI<dot>TYPES<colon><colon>V-ARRAY method}@c
@methodsubindex{v-type-eq}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-type-eq} (A @t{v-type}) (B @t{v-type})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-TYPE-EQ VARI<dot>TYPES<colon><colon>V-TYPE VARI<dot>TYPES<colon><colon>V-TYPE method}@c
@methodsubindex{v-type-eq}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {v-type-of} FUNC
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-TYPE-OF generic function}@c
@genericsubindex{v-type-of}@c

When called with an instance of `shader-variable` this will return the
Varjo type object which represents the variables Vari type.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Writer
@ref{go to the VARJO<dot>INTERNALS<colon><colon>(SETF V-TYPE-OF) generic function, , @t{(setf v-type-of)}} (generic function)
@item Methods
@deffn {Method} {v-type-of} (FUNC-SET @t{v-function-set})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-TYPE-OF VARJO<dot>INTERNALS<colon><colon>V-FUNCTION-SET method}@c
@methodsubindex{v-type-of}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/function-obj<dot>lisp file, , @t{src/varjo.internals/function-obj.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-type-of} (FUNC @t{v-function})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-TYPE-OF VARJO<dot>INTERNALS<colon><colon>V-FUNCTION method}@c
@methodsubindex{v-type-of}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/function-obj<dot>lisp file, , @t{src/varjo.internals/function-obj.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-type-of} (TYPED-EXTERNAL-NAME @t{typed-external-name})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-TYPE-OF VARJO<dot>INTERNALS<colon><colon>TYPED-EXTERNAL-NAME method}@c
@methodsubindex{v-type-of}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-type-of} (V-VALUE @t{v-value})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-TYPE-OF VARJO<dot>INTERNALS<colon><colon>V-VALUE method}@c
@methodsubindex{v-type-of}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-type-of} (STEMCELL @t{stemcell})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-TYPE-OF VARJO<dot>INTERNALS<colon><colon>STEMCELL method}@c
@methodsubindex{v-type-of}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-type-of} (SHADER-VARIABLE @t{shader-variable})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-TYPE-OF VARJO<dot>INTERNALS<colon><colon>SHADER-VARIABLE method}@c
@methodsubindex{v-type-of}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {(setf v-type-of)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF V-TYPE-OF) generic function}@c
@genericsubindex{(setf v-type-of)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Reader
@ref{go to the VARJO<dot>INTERNALS<colon><colon>V-TYPE-OF generic function, , @t{v-type-of}} (generic function)
@item Methods
@deffn {Method} {(setf v-type-of)} NEW-VALUE (V-VALUE @t{v-value})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF V-TYPE-OF) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>V-VALUE method}@c
@methodsubindex{(setf v-type-of)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {v-typep} A B
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-TYPEP generic function}@c
@genericsubindex{v-typep}@c

`v-typep` returns T if the Varjo type object provided represents the given
Vari type or a subtype of that type.@*

The second argument can be a Varjo type object or a Vari `type-spec`
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/generics<dot>lisp file, , @t{src/varjo.internals/generics.lisp}} (file)
@item Methods
@deffn {Method} {v-typep} (A @t{v-stemcell}) B
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-TYPEP VARI<dot>TYPES<colon><colon>V-STEMCELL COMMON-LISP<colon><colon>T method}@c
@methodsubindex{v-typep}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-typep} (A @t{v-function-type}) (B @t{v-function-type})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-TYPEP VARI<dot>TYPES<colon><colon>V-FUNCTION-TYPE VARI<dot>TYPES<colon><colon>V-FUNCTION-TYPE method}@c
@methodsubindex{v-typep}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-typep} (A @t{v-array}) (B @t{v-array})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-TYPEP VARI<dot>TYPES<colon><colon>V-ARRAY VARI<dot>TYPES<colon><colon>V-ARRAY method}@c
@methodsubindex{v-typep}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-typep} A (B @t{null})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-TYPEP COMMON-LISP<colon><colon>T COMMON-LISP<colon><colon>NULL method}@c
@methodsubindex{v-typep}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-typep} (A @t{null}) B
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-TYPEP COMMON-LISP<colon><colon>NULL COMMON-LISP<colon><colon>T method}@c
@methodsubindex{v-typep}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-typep} (A @t{v-type}) (B @t{v-type})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-TYPEP VARI<dot>TYPES<colon><colon>V-TYPE VARI<dot>TYPES<colon><colon>V-TYPE method}@c
@methodsubindex{v-typep}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-typep} (A @t{v-type}) (B @t{list})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-TYPEP VARI<dot>TYPES<colon><colon>V-TYPE COMMON-LISP<colon><colon>LIST method}@c
@methodsubindex{v-typep}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-typep} (A @t{v-type}) (B @t{symbol})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-TYPEP VARI<dot>TYPES<colon><colon>V-TYPE COMMON-LISP<colon><colon>SYMBOL method}@c
@methodsubindex{v-typep}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {v-uniforms} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-UNIFORMS generic function}@c
@genericsubindex{v-uniforms}@c
@deffnx {Generic Function} {(setf v-uniforms)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF V-UNIFORMS) generic function}@c
@genericsubindex{(setf v-uniforms)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {v-uniforms} (ENV @t{environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-UNIFORMS VARJO<dot>INTERNALS<colon><colon>ENVIRONMENT method}@c
@methodsubindex{v-uniforms}@c
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/environment<dot>lisp file, , @t{src/varjo.internals/environment.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-uniforms} (BASE-ENVIRONMENT @t{base-environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-UNIFORMS VARJO<dot>INTERNALS<colon><colon>BASE-ENVIRONMENT method}@c
@methodsubindex{v-uniforms}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf v-uniforms)} NEW-VALUE (BASE-ENVIRONMENT @t{base-environment})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF V-UNIFORMS) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>BASE-ENVIRONMENT method}@c
@methodsubindex{(setf v-uniforms)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {v-value} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-VALUE generic function}@c
@genericsubindex{v-value}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {v-value} (CAPTURED-VAR @t{captured-var})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-VALUE VARJO<dot>INTERNALS<colon><colon>CAPTURED-VAR method}@c
@methodsubindex{v-value}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {v-versions} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-VERSIONS generic function}@c
@genericsubindex{v-versions}@c
@deffnx {Generic Function} {(setf v-versions)} NEW-VALUE OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF V-VERSIONS) generic function}@c
@genericsubindex{(setf v-versions)}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {v-versions} (V-STRUCT @t{v-struct})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-VERSIONS VARI<dot>TYPES<colon><colon>V-STRUCT method}@c
@methodsubindex{v-versions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf v-versions)} NEW-VALUE (V-STRUCT @t{v-struct})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF V-VERSIONS) COMMON-LISP<colon><colon>T VARI<dot>TYPES<colon><colon>V-STRUCT method}@c
@methodsubindex{(setf v-versions)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {v-versions} (V-FUNCTION @t{v-function})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-VERSIONS VARJO<dot>INTERNALS<colon><colon>V-FUNCTION method}@c
@methodsubindex{v-versions}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {(setf v-versions)} NEW-VALUE (V-FUNCTION @t{v-function})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>(SETF V-VERSIONS) COMMON-LISP<colon><colon>T VARJO<dot>INTERNALS<colon><colon>V-FUNCTION method}@c
@methodsubindex{(setf v-versions)}@c
automatically generated writer method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {v-voidp} X
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-VOIDP generic function}@c
@genericsubindex{v-voidp}@c
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Source
@ref{go to the varjo/src/varjo<dot>internals/types/types<dot>lisp file, , @t{src/varjo.internals/types/types.lisp}} (file)
@item Methods
@deffn {Method} {v-voidp} (X @t{compiled})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-VOIDP VARJO<dot>INTERNALS<colon><colon>COMPILED method}@c
@methodsubindex{v-voidp}@c
@end deffn
@deffn {Method} {v-voidp} (X @t{v-type})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-VOIDP VARI<dot>TYPES<colon><colon>V-TYPE method}@c
@methodsubindex{v-voidp}@c
@end deffn
@deffn {Method} {v-voidp} (X @t{vector})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>V-VOIDP COMMON-LISP<colon><colon>VECTOR method}@c
@methodsubindex{v-voidp}@c
@end deffn
@end table
@end deffn
@deffn {Generic Function} {variable-in-scope-p} NAME ENV
@anchor{go to the VARJO<dot>API<colon><colon>VARIABLE-IN-SCOPE-P generic function}@c
@genericsubindex{variable-in-scope-p}@c

When given an `environment` object from a Vari compiler-macro and a symbol,
`variable-in-scope-p` returns T if that symbol names a variable that is
currently in scope.
@table @strong
@item Package
@ref{go to the VARJO<dot>API package, , @t{varjo.api}}
@item Source
@ref{go to the varjo/src/varjo<dot>api/environment<dot>lisp file, , @t{src/varjo.api/environment.lisp}} (file)
@item Methods
@deffn {Method} {variable-in-scope-p} (NAME @t{symbol}) (ENV @t{extended-environment})
@anchor{go to the VARJO<dot>API<colon><colon>VARIABLE-IN-SCOPE-P COMMON-LISP<colon><colon>SYMBOL VARJO<dot>INTERNALS<colon><colon>EXTENDED-ENVIRONMENT method}@c
@methodsubindex{variable-in-scope-p}@c
@end deffn
@end table
@end deffn
@deffn {Generic Function} {variable-is-uniform-p} NAME ENV
@anchor{go to the VARJO<dot>API<colon><colon>VARIABLE-IS-UNIFORM-P generic function}@c
@genericsubindex{variable-is-uniform-p}@c

When given an `environment` object from a Vari macro and a symbol,
`variable-is-uniform-p` returns T if that symbol names a uniform variable
in the current scope, or it contains the value from a uniform variable.
@table @strong
@item Package
@ref{go to the VARJO<dot>API package, , @t{varjo.api}}
@item Source
@ref{go to the varjo/src/varjo<dot>api/environment<dot>lisp file, , @t{src/varjo.api/environment.lisp}} (file)
@item Methods
@deffn {Method} {variable-is-uniform-p} (NAME @t{symbol}) (ENV @t{extended-environment})
@anchor{go to the VARJO<dot>API<colon><colon>VARIABLE-IS-UNIFORM-P COMMON-LISP<colon><colon>SYMBOL VARJO<dot>INTERNALS<colon><colon>EXTENDED-ENVIRONMENT method}@c
@methodsubindex{variable-is-uniform-p}@c
@end deffn
@end table
@end deffn
@deffn {Generic Function} {variable-type} NAME ENV
@anchor{go to the VARJO<dot>API<colon><colon>VARIABLE-TYPE generic function}@c
@genericsubindex{variable-type}@c

When given an `environment` object from a Vari macro and a symbol that names
a variable in the current scope, `variable-type` returns a Varjo type object
that represents the Vari type of the value bound to the variable.
@table @strong
@item Package
@ref{go to the VARJO<dot>API package, , @t{varjo.api}}
@item Source
@ref{go to the varjo/src/varjo<dot>api/environment<dot>lisp file, , @t{src/varjo.api/environment.lisp}} (file)
@item Methods
@deffn {Method} {variable-type} (NAME @t{symbol}) (ENV @t{extended-environment})
@anchor{go to the VARJO<dot>API<colon><colon>VARIABLE-TYPE COMMON-LISP<colon><colon>SYMBOL VARJO<dot>INTERNALS<colon><colon>EXTENDED-ENVIRONMENT method}@c
@methodsubindex{variable-type}@c
@end deffn
@end table
@end deffn
@deffn {Generic Function} {variable-uniform-name} NAME ENV
@anchor{go to the VARJO<dot>API<colon><colon>VARIABLE-UNIFORM-NAME generic function}@c
@genericsubindex{variable-uniform-name}@c

When given an `environment` object from a Vari macro and a symbol that names
a variable whos value is taken from a uniform, `argument-uniform-name` returns
the the symbol which names the uniform in the stage.
@table @strong
@item Package
@ref{go to the VARJO<dot>API package, , @t{varjo.api}}
@item Source
@ref{go to the varjo/src/varjo<dot>api/environment<dot>lisp file, , @t{src/varjo.api/environment.lisp}} (file)
@item Methods
@deffn {Method} {variable-uniform-name} (NAME @t{symbol}) (ENV @t{extended-environment})
@anchor{go to the VARJO<dot>API<colon><colon>VARIABLE-UNIFORM-NAME COMMON-LISP<colon><colon>SYMBOL VARJO<dot>INTERNALS<colon><colon>EXTENDED-ENVIRONMENT method}@c
@methodsubindex{variable-uniform-name}@c
@end deffn
@end table
@end deffn
@deffn {Generic Function} {variables-in-scope} ENV
@anchor{go to the VARJO<dot>API<colon><colon>VARIABLES-IN-SCOPE generic function}@c
@genericsubindex{variables-in-scope}@c

When given an `environment` object from a Vari macro, `variables-in-scope`
returns a list contains the names of all the variables currently in scope.
@table @strong
@item Package
@ref{go to the VARJO<dot>API package, , @t{varjo.api}}
@item Source
@ref{go to the varjo/src/varjo<dot>api/environment<dot>lisp file, , @t{src/varjo.api/environment.lisp}} (file)
@item Methods
@deffn {Method} {variables-in-scope} (ENV @t{extended-environment})
@anchor{go to the VARJO<dot>API<colon><colon>VARIABLES-IN-SCOPE VARJO<dot>INTERNALS<colon><colon>EXTENDED-ENVIRONMENT method}@c
@methodsubindex{variables-in-scope}@c
@end deffn
@end table
@end deffn
@deffn {Generic Function} {vertex-count} OBJECT
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>VERTEX-COUNT generic function}@c
@genericsubindex{vertex-count}@c

When passed an instance of `primitive` this function returns the number
of vertices that make up this kind of primitive.
@table @strong
@item Package
@ref{go to the VARJO<dot>INTERNALS package, , @t{varjo.internals}}
@item Methods
@deffn {Method} {vertex-count} (PATCHES @t{patches})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>VERTEX-COUNT VARJO<dot>INTERNALS<colon><colon>PATCHES method}@c
@methodsubindex{vertex-count}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {vertex-count} (TRIANGLES-ADJACENCY @t{triangles-adjacency})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>VERTEX-COUNT VARJO<dot>INTERNALS<colon><colon>TRIANGLES-ADJACENCY method}@c
@methodsubindex{vertex-count}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {vertex-count} (TRIANGLES @t{triangles})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>VERTEX-COUNT VARJO<dot>INTERNALS<colon><colon>TRIANGLES method}@c
@methodsubindex{vertex-count}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {vertex-count} (LINES-ADJACENCY @t{lines-adjacency})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>VERTEX-COUNT VARJO<dot>INTERNALS<colon><colon>LINES-ADJACENCY method}@c
@methodsubindex{vertex-count}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {vertex-count} (ISO-LINES @t{iso-lines})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>VERTEX-COUNT VARJO<dot>INTERNALS<colon><colon>ISO-LINES method}@c
@methodsubindex{vertex-count}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {vertex-count} (LINES @t{lines})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>VERTEX-COUNT VARJO<dot>INTERNALS<colon><colon>LINES method}@c
@methodsubindex{vertex-count}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@deffn {Method} {vertex-count} (POINTS @t{points})
@anchor{go to the VARJO<dot>INTERNALS<colon><colon>VERTEX-COUNT VARJO<dot>INTERNALS<colon><colon>POINTS method}@c
@methodsubindex{vertex-count}@c
automatically generated reader method
@table @strong
@item Source
@ref{go to the varjo/src/varjo<dot>internals/internal-types<dot>lisp file, , @t{src/varjo.internals/internal-types.lisp}} (file)
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {vertices} METADATA
@anchor{go to the VARI<dot>CL<colon><colon>VERTICES generic function}@c
@genericsubindex{vertices}@c
@table @strong
@item Package
@ref{go to the VARI<dot>CL package, , @t{vari.cl}}
@item Source
@ref{go to the varjo/src/vari<dot>cl/special-operators/emit<dot>lisp file, , @t{src/vari.cl/special-operators/emit.lisp}} (file)
@item Methods
@deffn {Method} {vertices} (METADATA @t{output-patch})
@anchor{go to the VARI<dot>CL<colon><colon>VERTICES VARI<dot>CL<colon><colon>OUTPUT-PATCH method}@c
@methodsubindex{vertices}@c
@end deffn
@deffn {Method} {vertices} (METADATA-COLLECTION @t{list})
@anchor{go to the VARI<dot>CL<colon><colon>VERTICES COMMON-LISP<colon><colon>LIST method}@c
@methodsubindex{vertices}@c
@end deffn
@end table
@end deffn
" :AFTER-MENU-CONTENTS NIL) #15# #16#) :BEFORE-MENU-CONTENTS NIL :AFTER-MENU-CONTENTS NIL) #S(NET.DIDIERVERNA.DECLT::CONTEXT :SYSTEMS (#<ASDF/SYSTEM:SYSTEM "varjo">) :PACKAGES (#<PACKAGE "VARJO"> #<PACKAGE "VARI"> #<PACKAGE "VARI.CL"> #<PACKAGE "VARI.GLSL"> #<PACKAGE "VARJO.API"> #<PACKAGE "VARJO.INTERNALS"> #<PACKAGE "VARJO-CONDITIONS"> #<PACKAGE "VARI.TYPES"> #<PACKAGE "VARJO.UTILS">) :EXTERNAL-DEFINITIONS #<HASH-TABLE :TEST EQUAL :COUNT 694 {100B68C0C3}> :INTERNAL-DEFINITIONS #<HASH-TABLE :TEST EQUAL :COUNT 603 {1001BD5D23}> :HYPERLINKSP NIL) "exported" #<HASH-TABLE :TEST EQUAL :COUNT 694 {100B68C0C3}>)
15: (NET.DIDIERVERNA.DECLT::ADD-DEFINITIONS-NODE #1=#S(NET.DIDIERVERNA.DECLT::NODE :NAME "Top" :SYNOPSIS NIL :SECTION-TYPE :UNNUMBERED :SECTION-NAME "The varjo Reference Manual" :NEXT NIL :PREVIOUS NIL :UP NIL :CHILDREN (#2=#S(NET.DIDIERVERNA.DECLT::NODE :NAME "Introduction" :SYNOPSIS "What varjo is all about" :SECTION-TYPE :NUMBERED :SECTION-NAME NIL :NEXT #3=#S(NET.DIDIERVERNA.DECLT::NODE :NAME "Systems" :SYNOPSIS "The systems documentation" :SECTION-TYPE :NUMBERED :SECTION-NAME NIL :NEXT #4=#S(NET.DIDIERVERNA.DECLT::NODE :NAME "Files" :SYNOPSIS "The files documentation" :SECTION-TYPE :NUMBERED :SECTION-NAME NIL :NEXT #5=# :PREVIOUS #3# :UP #1# :CHILDREN # :BEFORE-MENU-CONTENTS "Files are sorted by type and then listed depth-first from the systems
components trees." :AFTER-MENU-CONTENTS NIL) :PREVIOUS #2# :UP #1# :CHILDREN (#) :BEFORE-MENU-CONTENTS "The main system appears first, followed by any subsystem dependency." :AFTER-MENU-CONTENTS NIL) :PREVIOUS NIL :UP #1# :CHILDREN NIL :BEFORE-MENU-CONTENTS "" :AFTER-MENU-CONTENTS NIL) #3# #4# #5# #6=#S(NET.DIDIERVERNA.DECLT::NODE :NAME "Definitions" :SYNOPSIS "The symbols documentation" :SECTION-TYPE :NUMBERED :SECTION-NAME NIL :NEXT NIL :PREVIOUS #5# :UP #1# :CHILDREN (#S(NET.DIDIERVERNA.DECLT::NODE :NAME "Exported definitions" :SYNOPSIS NIL :SECTION-TYPE :NUMBERED :SECTION-NAME NIL :NEXT NIL :PREVIOUS NIL :UP #6# :CHILDREN # :BEFORE-MENU-CONTENTS NIL :AFTER-MENU-CONTENTS NIL)) :BEFORE-MENU-CONTENTS "Definitions are sorted by export status, category, package, and then by
lexicographic order." :AFTER-MENU-CONTENTS NIL)) :BEFORE-MENU-CONTENTS "This is the varjo Reference Manual,
generated automatically by Declt version 2.4 patchlevel 1 \"Will Decker\"
on Wed Jan 09 11:11:52 2019 GMT+1." :AFTER-MENU-CONTENTS NIL) #S(NET.DIDIERVERNA.DECLT::CONTEXT :SYSTEMS (#<ASDF/SYSTEM:SYSTEM "varjo">) :PACKAGES (#<PACKAGE "VARJO"> #<PACKAGE "VARI"> #<PACKAGE "VARI.CL"> #<PACKAGE "VARI.GLSL"> #<PACKAGE "VARJO.API"> #<PACKAGE "VARJO.INTERNALS"> #<PACKAGE "VARJO-CONDITIONS"> #<PACKAGE "VARI.TYPES"> #<PACKAGE "VARJO.UTILS">) :EXTERNAL-DEFINITIONS #<HASH-TABLE :TEST EQUAL :COUNT 694 {100B68C0C3}> :INTERNAL-DEFINITIONS #<HASH-TABLE :TEST EQUAL :COUNT 603 {1001BD5D23}> :HYPERLINKSP NIL))
16: ((FLET "THUNK" :IN NET.DIDIERVERNA.DECLT:DECLT))
17: (SB-IMPL::%WITH-STANDARD-IO-SYNTAX #<CLOSURE (FLET "THUNK" :IN NET.DIDIERVERNA.DECLT:DECLT) {7FFFF6E0EC0B}>)
18: (NET.DIDIERVERNA.DECLT:DECLT "varjo" :LIBRARY-NAME NIL :TAGLINE NIL :VERSION NIL :CONTACT NIL :COPYRIGHT-YEARS NIL :LICENSE NIL :INTRODUCTION "" :CONCLUSION NIL :TEXI-NAME NIL :TEXI-DIRECTORY "/home/didier/quickref/texinfo/" :INFO-NAME NIL :HYPERLINKS NIL :DECLT-NOTICE :LONG)
19: (SB-INT:SIMPLE-EVAL-IN-LEXENV (NET.DIDIERVERNA.DECLT:DECLT *SYSTEM-NAME* :INTRODUCTION (WHEN *INTRODUCTION* "") :TEXI-DIRECTORY *TEXINFO-DIRECTORY*) #<NULL-LEXENV>)
20: (EVAL-TLF (NET.DIDIERVERNA.DECLT:DECLT *SYSTEM-NAME* :INTRODUCTION (WHEN *INTRODUCTION* "") :TEXI-DIRECTORY *TEXINFO-DIRECTORY*) 13 NIL)
21: ((LABELS SB-FASL::EVAL-FORM :IN SB-INT:LOAD-AS-SOURCE) (NET.DIDIERVERNA.DECLT:DECLT *SYSTEM-NAME* :INTRODUCTION (WHEN *INTRODUCTION* "") :TEXI-DIRECTORY *TEXINFO-DIRECTORY*) 13)
22: ((LAMBDA (SB-KERNEL:FORM &KEY :CURRENT-INDEX &ALLOW-OTHER-KEYS) :IN SB-INT:LOAD-AS-SOURCE) (NET.DIDIERVERNA.DECLT:DECLT *SYSTEM-NAME* :INTRODUCTION (WHEN *INTRODUCTION* "") :TEXI-DIRECTORY *TEXINFO-DIRECTORY*) :CURRENT-INDEX 13)
23: (SB-C::%DO-FORMS-FROM-INFO #<CLOSURE (LAMBDA (SB-KERNEL:FORM &KEY :CURRENT-INDEX &ALLOW-OTHER-KEYS) :IN SB-INT:LOAD-AS-SOURCE) {1001B8D9BB}> #<SB-C::SOURCE-INFO {1001B8D973}> SB-C::INPUT-ERROR-IN-LOAD)
24: (SB-INT:LOAD-AS-SOURCE #<SB-SYS:FD-STREAM for "file /home/didier/share/common-lisp/source/quickref/bin/declt" {1001B7EA03}> :VERBOSE NIL :PRINT NIL :CONTEXT "loading")
25: ((FLET SB-FASL::THUNK :IN LOAD))
26: (SB-FASL::CALL-WITH-LOAD-BINDINGS #<CLOSURE (FLET SB-FASL::THUNK :IN LOAD) {7FFFF6E0F6BB}> #<SB-SYS:FD-STREAM for "file /home/didier/share/common-lisp/source/quickref/bin/declt" {1001B7EA03}>)
27: ((FLET SB-FASL::LOAD-STREAM :IN LOAD) #<SB-SYS:FD-STREAM for "file /home/didier/share/common-lisp/source/quickref/bin/declt" {1001B7EA03}> NIL)
28: (LOAD #<SB-SYS:FD-STREAM for "file /home/didier/share/common-lisp/source/quickref/bin/declt" {1001B7EA03}> :VERBOSE NIL :PRINT NIL :IF-DOES-NOT-EXIST T :EXTERNAL-FORMAT :DEFAULT)
29: ((FLET SB-IMPL::LOAD-SCRIPT :IN SB-IMPL::PROCESS-SCRIPT) #<SB-SYS:FD-STREAM for "file /home/didier/share/common-lisp/source/quickref/bin/declt" {1001B7EA03}>)
30: ((FLET "WITHOUT-INTERRUPTS-BODY-3" :IN SB-IMPL::PROCESS-SCRIPT))
31: (SB-IMPL::PROCESS-SCRIPT "/home/didier/share/common-lisp/source/quickref/bin/declt")
32: (SB-IMPL::TOPLEVEL-INIT)
33: ((FLET "WITHOUT-INTERRUPTS-BODY-35" :IN SAVE-LISP-AND-DIE))
34: ((LABELS SB-IMPL::RESTART-LISP :IN SAVE-LISP-AND-DIE))

unhandled condition in --disable-debugger mode, quitting

